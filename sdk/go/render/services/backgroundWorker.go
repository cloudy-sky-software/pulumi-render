// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackgroundWorker struct {
	pulumi.CustomResourceState

	AutoDeploy     BackgroundWorkerServiceAutoDeployPtrOutput       `pulumi:"autoDeploy"`
	Branch         pulumi.StringPtrOutput                           `pulumi:"branch"`
	BuildFilter    BuildFilterPtrOutput                             `pulumi:"buildFilter"`
	CreatedAt      pulumi.StringPtrOutput                           `pulumi:"createdAt"`
	EnvVars        pulumi.ArrayOutput                               `pulumi:"envVars"`
	Image          ImagePtrOutput                                   `pulumi:"image"`
	ImagePath      pulumi.StringPtrOutput                           `pulumi:"imagePath"`
	Name           pulumi.StringPtrOutput                           `pulumi:"name"`
	NotifyOnFail   BackgroundWorkerServiceNotifyOnFailPtrOutput     `pulumi:"notifyOnFail"`
	OwnerId        pulumi.StringPtrOutput                           `pulumi:"ownerId"`
	Repo           pulumi.StringPtrOutput                           `pulumi:"repo"`
	RootDir        pulumi.StringPtrOutput                           `pulumi:"rootDir"`
	SecretFiles    SecretFileArrayOutput                            `pulumi:"secretFiles"`
	ServiceDetails BackgroundWorkerDetailsOutputPtrOutput           `pulumi:"serviceDetails"`
	Slug           pulumi.StringPtrOutput                           `pulumi:"slug"`
	Suspended      BackgroundWorkerServiceSuspendedPtrOutput        `pulumi:"suspended"`
	Suspenders     BackgroundWorkerServiceSuspendersItemArrayOutput `pulumi:"suspenders"`
	Type           pulumi.StringPtrOutput                           `pulumi:"type"`
	UpdatedAt      pulumi.StringPtrOutput                           `pulumi:"updatedAt"`
}

// NewBackgroundWorker registers a new resource with the given unique name, arguments, and options.
func NewBackgroundWorker(ctx *pulumi.Context,
	name string, args *BackgroundWorkerArgs, opts ...pulumi.ResourceOption) (*BackgroundWorker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.OwnerId == nil {
		return nil, errors.New("invalid value for required argument 'OwnerId'")
	}
	if args.AutoDeploy == nil {
		args.AutoDeploy = BackgroundWorkerServiceCreateAutoDeploy("yes")
	}
	if args.ServiceDetails != nil {
		args.ServiceDetails = args.ServiceDetails.ToBackgroundWorkerDetailsCreatePtrOutput().ApplyT(func(v *BackgroundWorkerDetailsCreate) *BackgroundWorkerDetailsCreate { return v.Defaults() }).(BackgroundWorkerDetailsCreatePtrOutput)
	}
	if args.Type == nil {
		args.Type = pulumi.StringPtr("background_worker")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackgroundWorker
	err := ctx.RegisterResource("render:services:BackgroundWorker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackgroundWorker gets an existing BackgroundWorker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackgroundWorker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackgroundWorkerState, opts ...pulumi.ResourceOption) (*BackgroundWorker, error) {
	var resource BackgroundWorker
	err := ctx.ReadResource("render:services:BackgroundWorker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackgroundWorker resources.
type backgroundWorkerState struct {
}

type BackgroundWorkerState struct {
}

func (BackgroundWorkerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backgroundWorkerState)(nil)).Elem()
}

type backgroundWorkerArgs struct {
	// Defaults to "yes"
	AutoDeploy *BackgroundWorkerServiceCreateAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository
	Branch      *string       `pulumi:"branch"`
	BuildFilter *BuildFilter  `pulumi:"buildFilter"`
	EnvVars     []interface{} `pulumi:"envVars"`
	Image       *Image        `pulumi:"image"`
	Name        string        `pulumi:"name"`
	OwnerId     string        `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           *string                        `pulumi:"repo"`
	RootDir        *string                        `pulumi:"rootDir"`
	SecretFiles    []SecretFile                   `pulumi:"secretFiles"`
	ServiceDetails *BackgroundWorkerDetailsCreate `pulumi:"serviceDetails"`
	Type           *string                        `pulumi:"type"`
}

// The set of arguments for constructing a BackgroundWorker resource.
type BackgroundWorkerArgs struct {
	// Defaults to "yes"
	AutoDeploy BackgroundWorkerServiceCreateAutoDeployPtrInput
	// If left empty, this will fall back to the default branch of the repository
	Branch      pulumi.StringPtrInput
	BuildFilter BuildFilterPtrInput
	EnvVars     pulumi.ArrayInput
	Image       ImagePtrInput
	Name        pulumi.StringInput
	OwnerId     pulumi.StringInput
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           pulumi.StringPtrInput
	RootDir        pulumi.StringPtrInput
	SecretFiles    SecretFileArrayInput
	ServiceDetails BackgroundWorkerDetailsCreatePtrInput
	Type           pulumi.StringPtrInput
}

func (BackgroundWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backgroundWorkerArgs)(nil)).Elem()
}

type BackgroundWorkerInput interface {
	pulumi.Input

	ToBackgroundWorkerOutput() BackgroundWorkerOutput
	ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput
}

func (*BackgroundWorker) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorker)(nil)).Elem()
}

func (i *BackgroundWorker) ToBackgroundWorkerOutput() BackgroundWorkerOutput {
	return i.ToBackgroundWorkerOutputWithContext(context.Background())
}

func (i *BackgroundWorker) ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerOutput)
}

type BackgroundWorkerOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorker)(nil)).Elem()
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutput() BackgroundWorkerOutput {
	return o
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput {
	return o
}

func (o BackgroundWorkerOutput) AutoDeploy() BackgroundWorkerServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerServiceAutoDeployPtrOutput { return v.AutoDeploy }).(BackgroundWorkerServiceAutoDeployPtrOutput)
}

func (o BackgroundWorkerOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BuildFilterPtrOutput { return v.BuildFilter }).(BuildFilterPtrOutput)
}

func (o BackgroundWorkerOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) EnvVars() pulumi.ArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.ArrayOutput { return v.EnvVars }).(pulumi.ArrayOutput)
}

func (o BackgroundWorkerOutput) Image() ImagePtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) ImagePtrOutput { return v.Image }).(ImagePtrOutput)
}

func (o BackgroundWorkerOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.ImagePath }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) NotifyOnFail() BackgroundWorkerServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerServiceNotifyOnFailPtrOutput { return v.NotifyOnFail }).(BackgroundWorkerServiceNotifyOnFailPtrOutput)
}

func (o BackgroundWorkerOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) RootDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.RootDir }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) SecretFileArrayOutput { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o BackgroundWorkerOutput) ServiceDetails() BackgroundWorkerDetailsOutputPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerDetailsOutputPtrOutput { return v.ServiceDetails }).(BackgroundWorkerDetailsOutputPtrOutput)
}

func (o BackgroundWorkerOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) Suspended() BackgroundWorkerServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerServiceSuspendedPtrOutput { return v.Suspended }).(BackgroundWorkerServiceSuspendedPtrOutput)
}

func (o BackgroundWorkerOutput) Suspenders() BackgroundWorkerServiceSuspendersItemArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerServiceSuspendersItemArrayOutput { return v.Suspenders }).(BackgroundWorkerServiceSuspendersItemArrayOutput)
}

func (o BackgroundWorkerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerInput)(nil)).Elem(), &BackgroundWorker{})
	pulumi.RegisterOutputType(BackgroundWorkerOutput{})
}
