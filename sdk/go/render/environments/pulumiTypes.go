// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package environments

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnvironmentType struct {
	DatabasesIds []string `pulumi:"databasesIds"`
	EnvGroupIds  []string `pulumi:"envGroupIds"`
	Id           string   `pulumi:"id"`
	Name         string   `pulumi:"name"`
	// Indicates whether network connections across environments are allowed.
	NetworkIsolationEnabled bool   `pulumi:"networkIsolationEnabled"`
	ProjectId               string `pulumi:"projectId"`
	// Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus EnvironmentProtectedStatus `pulumi:"protectedStatus"`
	RedisIds        []string                   `pulumi:"redisIds"`
	ServiceIds      []string                   `pulumi:"serviceIds"`
}

type EnvironmentTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) DatabasesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentType) []string { return v.DatabasesIds }).(pulumi.StringArrayOutput)
}

func (o EnvironmentTypeOutput) EnvGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentType) []string { return v.EnvGroupIds }).(pulumi.StringArrayOutput)
}

func (o EnvironmentTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Id }).(pulumi.StringOutput)
}

func (o EnvironmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether network connections across environments are allowed.
func (o EnvironmentTypeOutput) NetworkIsolationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EnvironmentType) bool { return v.NetworkIsolationEnabled }).(pulumi.BoolOutput)
}

func (o EnvironmentTypeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
func (o EnvironmentTypeOutput) ProtectedStatus() EnvironmentProtectedStatusOutput {
	return o.ApplyT(func(v EnvironmentType) EnvironmentProtectedStatus { return v.ProtectedStatus }).(EnvironmentProtectedStatusOutput)
}

func (o EnvironmentTypeOutput) RedisIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentType) []string { return v.RedisIds }).(pulumi.StringArrayOutput)
}

func (o EnvironmentTypeOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentType) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// An environment with a cursor
type EnvironmentWithCursor struct {
	Cursor      string          `pulumi:"cursor"`
	Environment EnvironmentType `pulumi:"environment"`
}

// An environment with a cursor
type EnvironmentWithCursorOutput struct{ *pulumi.OutputState }

func (EnvironmentWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentWithCursor)(nil)).Elem()
}

func (o EnvironmentWithCursorOutput) ToEnvironmentWithCursorOutput() EnvironmentWithCursorOutput {
	return o
}

func (o EnvironmentWithCursorOutput) ToEnvironmentWithCursorOutputWithContext(ctx context.Context) EnvironmentWithCursorOutput {
	return o
}

func (o EnvironmentWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o EnvironmentWithCursorOutput) Environment() EnvironmentTypeOutput {
	return o.ApplyT(func(v EnvironmentWithCursor) EnvironmentType { return v.Environment }).(EnvironmentTypeOutput)
}

type EnvironmentWithCursorArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentWithCursor)(nil)).Elem()
}

func (o EnvironmentWithCursorArrayOutput) ToEnvironmentWithCursorArrayOutput() EnvironmentWithCursorArrayOutput {
	return o
}

func (o EnvironmentWithCursorArrayOutput) ToEnvironmentWithCursorArrayOutputWithContext(ctx context.Context) EnvironmentWithCursorArrayOutput {
	return o
}

func (o EnvironmentWithCursorArrayOutput) Index(i pulumi.IntInput) EnvironmentWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentWithCursor {
		return vs[0].([]EnvironmentWithCursor)[vs[1].(int)]
	}).(EnvironmentWithCursorOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentWithCursorOutput{})
	pulumi.RegisterOutputType(EnvironmentWithCursorArrayOutput{})
}
