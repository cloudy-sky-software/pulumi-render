// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class AutoscaleService extends pulumi.CustomResource {
    /**
     * Get an existing AutoscaleService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AutoscaleService {
        return new AutoscaleService(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'render:services:AutoscaleService';

    /**
     * Returns true if the given object is an instance of AutoscaleService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoscaleService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoscaleService.__pulumiType;
    }

    public readonly criteria!: pulumi.Output<outputs.services.CriteriaProperties>;
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The maximum number of instances for the service
     */
    public readonly max!: pulumi.Output<number>;
    /**
     * The minimum number of instances for the service
     */
    public readonly min!: pulumi.Output<number>;

    /**
     * Create a AutoscaleService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoscaleServiceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.criteria === undefined) && !opts.urn) {
                throw new Error("Missing required property 'criteria'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.max === undefined) && !opts.urn) {
                throw new Error("Missing required property 'max'");
            }
            if ((!args || args.min === undefined) && !opts.urn) {
                throw new Error("Missing required property 'min'");
            }
            resourceInputs["criteria"] = args ? (args.criteria ? pulumi.output(args.criteria).apply(inputs.services.criteriaPropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["enabled"] = (args ? args.enabled : undefined) ?? false;
            resourceInputs["max"] = args ? args.max : undefined;
            resourceInputs["min"] = args ? args.min : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
        } else {
            resourceInputs["criteria"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["max"] = undefined /*out*/;
            resourceInputs["min"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoscaleService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AutoscaleService resource.
 */
export interface AutoscaleServiceArgs {
    criteria: pulumi.Input<inputs.services.CriteriaPropertiesArgs>;
    enabled: pulumi.Input<boolean>;
    /**
     * The maximum number of instances for the service
     */
    max: pulumi.Input<number>;
    /**
     * The minimum number of instances for the service
     */
    min: pulumi.Input<number>;
    /**
     * The ID of the service
     */
    serviceId?: pulumi.Input<string>;
}
