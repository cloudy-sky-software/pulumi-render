// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package registrycredentials

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Registrycredentials struct {
	pulumi.CustomResourceState

	AuthToken pulumi.StringPtrOutput `pulumi:"authToken"`
	Name      pulumi.StringPtrOutput `pulumi:"name"`
	OwnerId   pulumi.StringPtrOutput `pulumi:"ownerId"`
	Registry  pulumi.StringPtrOutput `pulumi:"registry"`
	Username  pulumi.StringPtrOutput `pulumi:"username"`
}

// NewRegistrycredentials registers a new resource with the given unique name, arguments, and options.
func NewRegistrycredentials(ctx *pulumi.Context,
	name string, args *RegistrycredentialsArgs, opts ...pulumi.ResourceOption) (*Registrycredentials, error) {
	if args == nil {
		args = &RegistrycredentialsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Registrycredentials
	err := ctx.RegisterResource("render:registrycredentials:Registrycredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistrycredentials gets an existing Registrycredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistrycredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistrycredentialsState, opts ...pulumi.ResourceOption) (*Registrycredentials, error) {
	var resource Registrycredentials
	err := ctx.ReadResource("render:registrycredentials:Registrycredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Registrycredentials resources.
type registrycredentialsState struct {
}

type RegistrycredentialsState struct {
}

func (RegistrycredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*registrycredentialsState)(nil)).Elem()
}

type registrycredentialsArgs struct {
	AuthToken *string `pulumi:"authToken"`
	Name      *string `pulumi:"name"`
	OwnerId   *string `pulumi:"ownerId"`
	Registry  *string `pulumi:"registry"`
	Username  *string `pulumi:"username"`
}

// The set of arguments for constructing a Registrycredentials resource.
type RegistrycredentialsArgs struct {
	AuthToken pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	OwnerId   pulumi.StringPtrInput
	Registry  pulumi.StringPtrInput
	Username  pulumi.StringPtrInput
}

func (RegistrycredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registrycredentialsArgs)(nil)).Elem()
}

type RegistrycredentialsInput interface {
	pulumi.Input

	ToRegistrycredentialsOutput() RegistrycredentialsOutput
	ToRegistrycredentialsOutputWithContext(ctx context.Context) RegistrycredentialsOutput
}

func (*Registrycredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**Registrycredentials)(nil)).Elem()
}

func (i *Registrycredentials) ToRegistrycredentialsOutput() RegistrycredentialsOutput {
	return i.ToRegistrycredentialsOutputWithContext(context.Background())
}

func (i *Registrycredentials) ToRegistrycredentialsOutputWithContext(ctx context.Context) RegistrycredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrycredentialsOutput)
}

type RegistrycredentialsOutput struct{ *pulumi.OutputState }

func (RegistrycredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Registrycredentials)(nil)).Elem()
}

func (o RegistrycredentialsOutput) ToRegistrycredentialsOutput() RegistrycredentialsOutput {
	return o
}

func (o RegistrycredentialsOutput) ToRegistrycredentialsOutputWithContext(ctx context.Context) RegistrycredentialsOutput {
	return o
}

func (o RegistrycredentialsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Registrycredentials) pulumi.StringPtrOutput { return v.AuthToken }).(pulumi.StringPtrOutput)
}

func (o RegistrycredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Registrycredentials) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RegistrycredentialsOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Registrycredentials) pulumi.StringPtrOutput { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o RegistrycredentialsOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Registrycredentials) pulumi.StringPtrOutput { return v.Registry }).(pulumi.StringPtrOutput)
}

func (o RegistrycredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Registrycredentials) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistrycredentialsInput)(nil)).Elem(), &Registrycredentials{})
	pulumi.RegisterOutputType(RegistrycredentialsOutput{})
}
