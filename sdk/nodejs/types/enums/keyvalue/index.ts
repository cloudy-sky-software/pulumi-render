// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const KeyValueDetailPlan = {
    Free: "free",
    Starter: "starter",
    Standard: "standard",
    Pro: "pro",
    ProPlus: "pro_plus",
    Custom: "custom",
} as const;

export type KeyValueDetailPlan = (typeof KeyValueDetailPlan)[keyof typeof KeyValueDetailPlan];

export const KeyValueDetailRegion = {
    Frankfurt: "frankfurt",
    Oregon: "oregon",
    Ohio: "ohio",
    Singapore: "singapore",
    Virginia: "virginia",
} as const;

/**
 * Defaults to "oregon"
 */
export type KeyValueDetailRegion = (typeof KeyValueDetailRegion)[keyof typeof KeyValueDetailRegion];

export const KeyValueDetailStatus = {
    Creating: "creating",
    Available: "available",
    Unavailable: "unavailable",
    ConfigRestart: "config_restart",
    Suspended: "suspended",
    MaintenanceScheduled: "maintenance_scheduled",
    MaintenanceInProgress: "maintenance_in_progress",
    RecoveryFailed: "recovery_failed",
    RecoveryInProgress: "recovery_in_progress",
    Unknown: "unknown",
    UpdatingInstance: "updating_instance",
} as const;

export type KeyValueDetailStatus = (typeof KeyValueDetailStatus)[keyof typeof KeyValueDetailStatus];

export const KeyValuePlan = {
    Free: "free",
    Starter: "starter",
    Standard: "standard",
    Pro: "pro",
    ProPlus: "pro_plus",
    Custom: "custom",
} as const;

export type KeyValuePlan = (typeof KeyValuePlan)[keyof typeof KeyValuePlan];

export const KeyValueRegion = {
    Frankfurt: "frankfurt",
    Oregon: "oregon",
    Ohio: "ohio",
    Singapore: "singapore",
    Virginia: "virginia",
} as const;

/**
 * Defaults to "oregon"
 */
export type KeyValueRegion = (typeof KeyValueRegion)[keyof typeof KeyValueRegion];

export const KeyValueStatus = {
    Creating: "creating",
    Available: "available",
    Unavailable: "unavailable",
    ConfigRestart: "config_restart",
    Suspended: "suspended",
    MaintenanceScheduled: "maintenance_scheduled",
    MaintenanceInProgress: "maintenance_in_progress",
    RecoveryFailed: "recovery_failed",
    RecoveryInProgress: "recovery_in_progress",
    Unknown: "unknown",
    UpdatingInstance: "updating_instance",
} as const;

export type KeyValueStatus = (typeof KeyValueStatus)[keyof typeof KeyValueStatus];

export const MaxmemoryPolicy = {
    Noeviction: "noeviction",
    AllkeysLfu: "allkeys_lfu",
    AllkeysLru: "allkeys_lru",
    AllkeysRandom: "allkeys_random",
    VolatileLfu: "volatile_lfu",
    VolatileLru: "volatile_lru",
    VolatileRandom: "volatile_random",
    VolatileTtl: "volatile_ttl",
} as const;

/**
 * The eviction policy for the Key Value instance
 */
export type MaxmemoryPolicy = (typeof MaxmemoryPolicy)[keyof typeof MaxmemoryPolicy];

export const OwnerType = {
    User: "user",
    Team: "team",
} as const;

export type OwnerType = (typeof OwnerType)[keyof typeof OwnerType];

export const Plan = {
    Free: "free",
    Starter: "starter",
    Standard: "standard",
    Pro: "pro",
    ProPlus: "pro_plus",
    Custom: "custom",
} as const;

export type Plan = (typeof Plan)[keyof typeof Plan];

export const RedisDetailpropertiesmaintenanceState = {
    Scheduled: "scheduled",
    InProgress: "in_progress",
    UserFixRequired: "user_fix_required",
    Cancelled: "cancelled",
    Succeeded: "succeeded",
    Failed: "failed",
} as const;

export type RedisDetailpropertiesmaintenanceState = (typeof RedisDetailpropertiesmaintenanceState)[keyof typeof RedisDetailpropertiesmaintenanceState];

export const Region = {
    Frankfurt: "frankfurt",
    Oregon: "oregon",
    Ohio: "ohio",
    Singapore: "singapore",
    Virginia: "virginia",
} as const;

/**
 * Defaults to "oregon"
 */
export type Region = (typeof Region)[keyof typeof Region];

export const Status = {
    Creating: "creating",
    Available: "available",
    Unavailable: "unavailable",
    ConfigRestart: "config_restart",
    Suspended: "suspended",
    MaintenanceScheduled: "maintenance_scheduled",
    MaintenanceInProgress: "maintenance_in_progress",
    RecoveryFailed: "recovery_failed",
    RecoveryInProgress: "recovery_in_progress",
    Unknown: "unknown",
    UpdatingInstance: "updating_instance",
} as const;

export type Status = (typeof Status)[keyof typeof Status];
