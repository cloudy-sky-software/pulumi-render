// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package envgroups

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnvGroupType struct {
	CreatedAt     string       `pulumi:"createdAt"`
	EnvVars       []EnvVar     `pulumi:"envVars"`
	EnvironmentId *string      `pulumi:"environmentId"`
	Id            string       `pulumi:"id"`
	Name          string       `pulumi:"name"`
	OwnerId       string       `pulumi:"ownerId"`
	SecretFiles   []SecretFile `pulumi:"secretFiles"`
	// List of serviceIds linked to the envGroup
	ServiceLinks []ServiceLink `pulumi:"serviceLinks"`
	UpdatedAt    string        `pulumi:"updatedAt"`
}

type EnvGroupTypeOutput struct{ *pulumi.OutputState }

func (EnvGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvGroupType)(nil)).Elem()
}

func (o EnvGroupTypeOutput) ToEnvGroupTypeOutput() EnvGroupTypeOutput {
	return o
}

func (o EnvGroupTypeOutput) ToEnvGroupTypeOutputWithContext(ctx context.Context) EnvGroupTypeOutput {
	return o
}

func (o EnvGroupTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o EnvGroupTypeOutput) EnvVars() EnvVarArrayOutput {
	return o.ApplyT(func(v EnvGroupType) []EnvVar { return v.EnvVars }).(EnvVarArrayOutput)
}

func (o EnvGroupTypeOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvGroupType) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

func (o EnvGroupTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupType) string { return v.Id }).(pulumi.StringOutput)
}

func (o EnvGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupType) string { return v.Name }).(pulumi.StringOutput)
}

func (o EnvGroupTypeOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupType) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o EnvGroupTypeOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v EnvGroupType) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

// List of serviceIds linked to the envGroup
func (o EnvGroupTypeOutput) ServiceLinks() ServiceLinkArrayOutput {
	return o.ApplyT(func(v EnvGroupType) []ServiceLink { return v.ServiceLinks }).(ServiceLinkArrayOutput)
}

func (o EnvGroupTypeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupType) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EnvGroupMeta struct {
	CreatedAt     string  `pulumi:"createdAt"`
	EnvironmentId *string `pulumi:"environmentId"`
	Id            string  `pulumi:"id"`
	Name          string  `pulumi:"name"`
	OwnerId       string  `pulumi:"ownerId"`
	// List of serviceIds linked to the envGroup
	ServiceLinks []ServiceLink `pulumi:"serviceLinks"`
	UpdatedAt    string        `pulumi:"updatedAt"`
}

type EnvGroupMetaOutput struct{ *pulumi.OutputState }

func (EnvGroupMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvGroupMeta)(nil)).Elem()
}

func (o EnvGroupMetaOutput) ToEnvGroupMetaOutput() EnvGroupMetaOutput {
	return o
}

func (o EnvGroupMetaOutput) ToEnvGroupMetaOutputWithContext(ctx context.Context) EnvGroupMetaOutput {
	return o
}

func (o EnvGroupMetaOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupMeta) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o EnvGroupMetaOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvGroupMeta) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

func (o EnvGroupMetaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupMeta) string { return v.Id }).(pulumi.StringOutput)
}

func (o EnvGroupMetaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupMeta) string { return v.Name }).(pulumi.StringOutput)
}

func (o EnvGroupMetaOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupMeta) string { return v.OwnerId }).(pulumi.StringOutput)
}

// List of serviceIds linked to the envGroup
func (o EnvGroupMetaOutput) ServiceLinks() ServiceLinkArrayOutput {
	return o.ApplyT(func(v EnvGroupMeta) []ServiceLink { return v.ServiceLinks }).(ServiceLinkArrayOutput)
}

func (o EnvGroupMetaOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EnvGroupMeta) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EnvGroupMetaArrayOutput struct{ *pulumi.OutputState }

func (EnvGroupMetaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvGroupMeta)(nil)).Elem()
}

func (o EnvGroupMetaArrayOutput) ToEnvGroupMetaArrayOutput() EnvGroupMetaArrayOutput {
	return o
}

func (o EnvGroupMetaArrayOutput) ToEnvGroupMetaArrayOutputWithContext(ctx context.Context) EnvGroupMetaArrayOutput {
	return o
}

func (o EnvGroupMetaArrayOutput) Index(i pulumi.IntInput) EnvGroupMetaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvGroupMeta {
		return vs[0].([]EnvGroupMeta)[vs[1].(int)]
	}).(EnvGroupMetaOutput)
}

type EnvVar struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type EnvVarOutput struct{ *pulumi.OutputState }

func (EnvVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVar)(nil)).Elem()
}

func (o EnvVarOutput) ToEnvVarOutput() EnvVarOutput {
	return o
}

func (o EnvVarOutput) ToEnvVarOutputWithContext(ctx context.Context) EnvVarOutput {
	return o
}

func (o EnvVarOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVar) string { return v.Key }).(pulumi.StringOutput)
}

func (o EnvVarOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVar) string { return v.Value }).(pulumi.StringOutput)
}

type EnvVarArrayOutput struct{ *pulumi.OutputState }

func (EnvVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVar)(nil)).Elem()
}

func (o EnvVarArrayOutput) ToEnvVarArrayOutput() EnvVarArrayOutput {
	return o
}

func (o EnvVarArrayOutput) ToEnvVarArrayOutputWithContext(ctx context.Context) EnvVarArrayOutput {
	return o
}

func (o EnvVarArrayOutput) Index(i pulumi.IntInput) EnvVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvVar {
		return vs[0].([]EnvVar)[vs[1].(int)]
	}).(EnvVarOutput)
}

type EnvVarInputType struct {
	GenerateValue *bool   `pulumi:"generateValue"`
	Key           *string `pulumi:"key"`
	Value         *string `pulumi:"value"`
}

// EnvVarInputTypeInput is an input type that accepts EnvVarInputTypeArgs and EnvVarInputTypeOutput values.
// You can construct a concrete instance of `EnvVarInputTypeInput` via:
//
//	EnvVarInputTypeArgs{...}
type EnvVarInputTypeInput interface {
	pulumi.Input

	ToEnvVarInputTypeOutput() EnvVarInputTypeOutput
	ToEnvVarInputTypeOutputWithContext(context.Context) EnvVarInputTypeOutput
}

type EnvVarInputTypeArgs struct {
	GenerateValue pulumi.BoolPtrInput   `pulumi:"generateValue"`
	Key           pulumi.StringPtrInput `pulumi:"key"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvVarInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarInputType)(nil)).Elem()
}

func (i EnvVarInputTypeArgs) ToEnvVarInputTypeOutput() EnvVarInputTypeOutput {
	return i.ToEnvVarInputTypeOutputWithContext(context.Background())
}

func (i EnvVarInputTypeArgs) ToEnvVarInputTypeOutputWithContext(ctx context.Context) EnvVarInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarInputTypeOutput)
}

// EnvVarInputTypeArrayInput is an input type that accepts EnvVarInputTypeArray and EnvVarInputTypeArrayOutput values.
// You can construct a concrete instance of `EnvVarInputTypeArrayInput` via:
//
//	EnvVarInputTypeArray{ EnvVarInputTypeArgs{...} }
type EnvVarInputTypeArrayInput interface {
	pulumi.Input

	ToEnvVarInputTypeArrayOutput() EnvVarInputTypeArrayOutput
	ToEnvVarInputTypeArrayOutputWithContext(context.Context) EnvVarInputTypeArrayOutput
}

type EnvVarInputTypeArray []EnvVarInputTypeInput

func (EnvVarInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVarInputType)(nil)).Elem()
}

func (i EnvVarInputTypeArray) ToEnvVarInputTypeArrayOutput() EnvVarInputTypeArrayOutput {
	return i.ToEnvVarInputTypeArrayOutputWithContext(context.Background())
}

func (i EnvVarInputTypeArray) ToEnvVarInputTypeArrayOutputWithContext(ctx context.Context) EnvVarInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarInputTypeArrayOutput)
}

type EnvVarInputTypeOutput struct{ *pulumi.OutputState }

func (EnvVarInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarInputType)(nil)).Elem()
}

func (o EnvVarInputTypeOutput) ToEnvVarInputTypeOutput() EnvVarInputTypeOutput {
	return o
}

func (o EnvVarInputTypeOutput) ToEnvVarInputTypeOutputWithContext(ctx context.Context) EnvVarInputTypeOutput {
	return o
}

func (o EnvVarInputTypeOutput) GenerateValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvVarInputType) *bool { return v.GenerateValue }).(pulumi.BoolPtrOutput)
}

func (o EnvVarInputTypeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvVarInputType) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o EnvVarInputTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvVarInputType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvVarInputTypeArrayOutput struct{ *pulumi.OutputState }

func (EnvVarInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVarInputType)(nil)).Elem()
}

func (o EnvVarInputTypeArrayOutput) ToEnvVarInputTypeArrayOutput() EnvVarInputTypeArrayOutput {
	return o
}

func (o EnvVarInputTypeArrayOutput) ToEnvVarInputTypeArrayOutputWithContext(ctx context.Context) EnvVarInputTypeArrayOutput {
	return o
}

func (o EnvVarInputTypeArrayOutput) Index(i pulumi.IntInput) EnvVarInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvVarInputType {
		return vs[0].([]EnvVarInputType)[vs[1].(int)]
	}).(EnvVarInputTypeOutput)
}

type SecretFile struct {
	Content string `pulumi:"content"`
	Name    string `pulumi:"name"`
}

type SecretFileOutput struct{ *pulumi.OutputState }

func (SecretFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretFile)(nil)).Elem()
}

func (o SecretFileOutput) ToSecretFileOutput() SecretFileOutput {
	return o
}

func (o SecretFileOutput) ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput {
	return o
}

func (o SecretFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFile) string { return v.Content }).(pulumi.StringOutput)
}

func (o SecretFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFile) string { return v.Name }).(pulumi.StringOutput)
}

type SecretFileArrayOutput struct{ *pulumi.OutputState }

func (SecretFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretFile)(nil)).Elem()
}

func (o SecretFileArrayOutput) ToSecretFileArrayOutput() SecretFileArrayOutput {
	return o
}

func (o SecretFileArrayOutput) ToSecretFileArrayOutputWithContext(ctx context.Context) SecretFileArrayOutput {
	return o
}

func (o SecretFileArrayOutput) Index(i pulumi.IntInput) SecretFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretFile {
		return vs[0].([]SecretFile)[vs[1].(int)]
	}).(SecretFileOutput)
}

type SecretFileInputType struct {
	Content string `pulumi:"content"`
	Name    string `pulumi:"name"`
}

// SecretFileInputTypeInput is an input type that accepts SecretFileInputTypeArgs and SecretFileInputTypeOutput values.
// You can construct a concrete instance of `SecretFileInputTypeInput` via:
//
//	SecretFileInputTypeArgs{...}
type SecretFileInputTypeInput interface {
	pulumi.Input

	ToSecretFileInputTypeOutput() SecretFileInputTypeOutput
	ToSecretFileInputTypeOutputWithContext(context.Context) SecretFileInputTypeOutput
}

type SecretFileInputTypeArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (SecretFileInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretFileInputType)(nil)).Elem()
}

func (i SecretFileInputTypeArgs) ToSecretFileInputTypeOutput() SecretFileInputTypeOutput {
	return i.ToSecretFileInputTypeOutputWithContext(context.Background())
}

func (i SecretFileInputTypeArgs) ToSecretFileInputTypeOutputWithContext(ctx context.Context) SecretFileInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFileInputTypeOutput)
}

// SecretFileInputTypeArrayInput is an input type that accepts SecretFileInputTypeArray and SecretFileInputTypeArrayOutput values.
// You can construct a concrete instance of `SecretFileInputTypeArrayInput` via:
//
//	SecretFileInputTypeArray{ SecretFileInputTypeArgs{...} }
type SecretFileInputTypeArrayInput interface {
	pulumi.Input

	ToSecretFileInputTypeArrayOutput() SecretFileInputTypeArrayOutput
	ToSecretFileInputTypeArrayOutputWithContext(context.Context) SecretFileInputTypeArrayOutput
}

type SecretFileInputTypeArray []SecretFileInputTypeInput

func (SecretFileInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretFileInputType)(nil)).Elem()
}

func (i SecretFileInputTypeArray) ToSecretFileInputTypeArrayOutput() SecretFileInputTypeArrayOutput {
	return i.ToSecretFileInputTypeArrayOutputWithContext(context.Background())
}

func (i SecretFileInputTypeArray) ToSecretFileInputTypeArrayOutputWithContext(ctx context.Context) SecretFileInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFileInputTypeArrayOutput)
}

type SecretFileInputTypeOutput struct{ *pulumi.OutputState }

func (SecretFileInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretFileInputType)(nil)).Elem()
}

func (o SecretFileInputTypeOutput) ToSecretFileInputTypeOutput() SecretFileInputTypeOutput {
	return o
}

func (o SecretFileInputTypeOutput) ToSecretFileInputTypeOutputWithContext(ctx context.Context) SecretFileInputTypeOutput {
	return o
}

func (o SecretFileInputTypeOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFileInputType) string { return v.Content }).(pulumi.StringOutput)
}

func (o SecretFileInputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFileInputType) string { return v.Name }).(pulumi.StringOutput)
}

type SecretFileInputTypeArrayOutput struct{ *pulumi.OutputState }

func (SecretFileInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretFileInputType)(nil)).Elem()
}

func (o SecretFileInputTypeArrayOutput) ToSecretFileInputTypeArrayOutput() SecretFileInputTypeArrayOutput {
	return o
}

func (o SecretFileInputTypeArrayOutput) ToSecretFileInputTypeArrayOutputWithContext(ctx context.Context) SecretFileInputTypeArrayOutput {
	return o
}

func (o SecretFileInputTypeArrayOutput) Index(i pulumi.IntInput) SecretFileInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretFileInputType {
		return vs[0].([]SecretFileInputType)[vs[1].(int)]
	}).(SecretFileInputTypeOutput)
}

type ServiceLink struct {
	Id   string          `pulumi:"id"`
	Name string          `pulumi:"name"`
	Type ServiceLinkType `pulumi:"type"`
}

type ServiceLinkOutput struct{ *pulumi.OutputState }

func (ServiceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLink)(nil)).Elem()
}

func (o ServiceLinkOutput) ToServiceLinkOutput() ServiceLinkOutput {
	return o
}

func (o ServiceLinkOutput) ToServiceLinkOutputWithContext(ctx context.Context) ServiceLinkOutput {
	return o
}

func (o ServiceLinkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLink) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLink) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceLinkOutput) Type() ServiceLinkTypeOutput {
	return o.ApplyT(func(v ServiceLink) ServiceLinkType { return v.Type }).(ServiceLinkTypeOutput)
}

type ServiceLinkArrayOutput struct{ *pulumi.OutputState }

func (ServiceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLink)(nil)).Elem()
}

func (o ServiceLinkArrayOutput) ToServiceLinkArrayOutput() ServiceLinkArrayOutput {
	return o
}

func (o ServiceLinkArrayOutput) ToServiceLinkArrayOutputWithContext(ctx context.Context) ServiceLinkArrayOutput {
	return o
}

func (o ServiceLinkArrayOutput) Index(i pulumi.IntInput) ServiceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLink {
		return vs[0].([]ServiceLink)[vs[1].(int)]
	}).(ServiceLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarInputTypeInput)(nil)).Elem(), EnvVarInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarInputTypeArrayInput)(nil)).Elem(), EnvVarInputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFileInputTypeInput)(nil)).Elem(), SecretFileInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFileInputTypeArrayInput)(nil)).Elem(), SecretFileInputTypeArray{})
	pulumi.RegisterOutputType(EnvGroupTypeOutput{})
	pulumi.RegisterOutputType(EnvGroupMetaOutput{})
	pulumi.RegisterOutputType(EnvGroupMetaArrayOutput{})
	pulumi.RegisterOutputType(EnvVarOutput{})
	pulumi.RegisterOutputType(EnvVarArrayOutput{})
	pulumi.RegisterOutputType(EnvVarInputTypeOutput{})
	pulumi.RegisterOutputType(EnvVarInputTypeArrayOutput{})
	pulumi.RegisterOutputType(SecretFileOutput{})
	pulumi.RegisterOutputType(SecretFileArrayOutput{})
	pulumi.RegisterOutputType(SecretFileInputTypeOutput{})
	pulumi.RegisterOutputType(SecretFileInputTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceLinkOutput{})
	pulumi.RegisterOutputType(ServiceLinkArrayOutput{})
}
