// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.NotificationSettings
{
    public static class ListNotificationOverrides
    {
        public static Task<ListNotificationOverridesResult> InvokeAsync(ListNotificationOverridesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListNotificationOverridesResult>("render:notification-settings:listNotificationOverrides", args ?? new ListNotificationOverridesArgs(), options.WithDefaults());

        public static Output<ListNotificationOverridesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListNotificationOverridesResult>("render:notification-settings:listNotificationOverrides", InvokeArgs.Empty, options.WithDefaults());

        public static Output<ListNotificationOverridesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListNotificationOverridesResult>("render:notification-settings:listNotificationOverrides", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListNotificationOverridesArgs : global::Pulumi.InvokeArgs
    {
        public ListNotificationOverridesArgs()
        {
        }
        public static new ListNotificationOverridesArgs Empty => new ListNotificationOverridesArgs();
    }


    [OutputType]
    public sealed class ListNotificationOverridesResult
    {
        public readonly ImmutableArray<Outputs.NotificationOverrideWithCursor> Items;

        [OutputConstructor]
        private ListNotificationOverridesResult(ImmutableArray<Outputs.NotificationOverrideWithCursor> items)
        {
            Items = items;
        }
    }
}
