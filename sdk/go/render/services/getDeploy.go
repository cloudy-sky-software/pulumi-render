// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDeploy(ctx *pulumi.Context, args *GetDeployArgs, opts ...pulumi.InvokeOption) (*GetDeployResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeployResult
	err := ctx.Invoke("render:services:getDeploy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetDeployArgs struct {
	// (Required) The ID of the deploy
	Id string `pulumi:"id"`
	// (Required) The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type GetDeployResult struct {
	Items Deploy `pulumi:"items"`
}

// Defaults sets the appropriate defaults for GetDeployResult
func (val *GetDeployResult) Defaults() *GetDeployResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func GetDeployOutput(ctx *pulumi.Context, args GetDeployOutputArgs, opts ...pulumi.InvokeOption) GetDeployResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDeployResult, error) {
			args := v.(GetDeployArgs)
			r, err := GetDeploy(ctx, &args, opts...)
			var s GetDeployResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDeployResultOutput)
}

type GetDeployOutputArgs struct {
	// (Required) The ID of the deploy
	Id pulumi.StringInput `pulumi:"id"`
	// (Required) The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (GetDeployOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployArgs)(nil)).Elem()
}

type GetDeployResultOutput struct{ *pulumi.OutputState }

func (GetDeployResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployResult)(nil)).Elem()
}

func (o GetDeployResultOutput) ToGetDeployResultOutput() GetDeployResultOutput {
	return o
}

func (o GetDeployResultOutput) ToGetDeployResultOutputWithContext(ctx context.Context) GetDeployResultOutput {
	return o
}

func (o GetDeployResultOutput) Items() DeployOutput {
	return o.ApplyT(func(v GetDeployResult) Deploy { return v.Items }).(DeployOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeployResultOutput{})
}
