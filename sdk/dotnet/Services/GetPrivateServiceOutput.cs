// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class GetPrivateServiceOutput
    {
        public static Task<GetPrivateServiceOutputResult> InvokeAsync(GetPrivateServiceOutputArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateServiceOutputResult>("render:services:getPrivateServiceOutput", args ?? new GetPrivateServiceOutputArgs(), options.WithDefaults());

        public static Output<GetPrivateServiceOutputResult> Invoke(GetPrivateServiceOutputInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateServiceOutputResult>("render:services:getPrivateServiceOutput", args ?? new GetPrivateServiceOutputInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateServiceOutputArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetPrivateServiceOutputArgs()
        {
        }
        public static new GetPrivateServiceOutputArgs Empty => new GetPrivateServiceOutputArgs();
    }

    public sealed class GetPrivateServiceOutputInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetPrivateServiceOutputInvokeArgs()
        {
        }
        public static new GetPrivateServiceOutputInvokeArgs Empty => new GetPrivateServiceOutputInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateServiceOutputResult
    {
        public readonly Outputs.GetPrivateServiceOutput Items;

        [OutputConstructor]
        private GetPrivateServiceOutputResult(Outputs.GetPrivateServiceOutput items)
        {
            Items = items;
        }
    }
}
