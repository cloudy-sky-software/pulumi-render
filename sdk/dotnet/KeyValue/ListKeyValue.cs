// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.KeyValue
{
    public static class ListKeyValue
    {
        public static Task<ListKeyValueResult> InvokeAsync(ListKeyValueArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListKeyValueResult>("render:key-value:listKeyValue", args ?? new ListKeyValueArgs(), options.WithDefaults());

        public static Output<ListKeyValueResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListKeyValueResult>("render:key-value:listKeyValue", InvokeArgs.Empty, options.WithDefaults());

        public static Output<ListKeyValueResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListKeyValueResult>("render:key-value:listKeyValue", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListKeyValueArgs : global::Pulumi.InvokeArgs
    {
        public ListKeyValueArgs()
        {
        }
        public static new ListKeyValueArgs Empty => new ListKeyValueArgs();
    }


    [OutputType]
    public sealed class ListKeyValueResult
    {
        public readonly ImmutableArray<Outputs.KeyValueWithCursor> Items;

        [OutputConstructor]
        private ListKeyValueResult(ImmutableArray<Outputs.KeyValueWithCursor> items)
        {
            Items = items;
        }
    }
}
