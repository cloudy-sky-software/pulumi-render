// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function listServiceHeaders(args: ListServiceHeadersArgs, opts?: pulumi.InvokeOptions): Promise<ListServiceHeadersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("render:services:listServiceHeaders", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListServiceHeadersArgs {
    /**
     * (Required) The ID of the service
     */
    serviceId: string;
}

export interface ListServiceHeadersResult {
    readonly items: outputs.services.ListServiceHeadersResponse[];
}

export function listServiceHeadersOutput(args: ListServiceHeadersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListServiceHeadersResult> {
    return pulumi.output(args).apply(a => listServiceHeaders(a, opts))
}

export interface ListServiceHeadersOutputArgs {
    /**
     * (Required) The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
