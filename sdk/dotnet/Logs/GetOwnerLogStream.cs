// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Logs
{
    public static class GetOwnerLogStream
    {
        public static Task<Outputs.GetOwnerLogStreamProperties> InvokeAsync(GetOwnerLogStreamArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetOwnerLogStreamProperties>("render:logs:getOwnerLogStream", args ?? new GetOwnerLogStreamArgs(), options.WithDefaults());

        public static Output<Outputs.GetOwnerLogStreamProperties> Invoke(GetOwnerLogStreamInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetOwnerLogStreamProperties>("render:logs:getOwnerLogStream", args ?? new GetOwnerLogStreamInvokeArgs(), options.WithDefaults());

        public static Output<Outputs.GetOwnerLogStreamProperties> Invoke(GetOwnerLogStreamInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetOwnerLogStreamProperties>("render:logs:getOwnerLogStream", args ?? new GetOwnerLogStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOwnerLogStreamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the owner (team or personal user) whose log streams should be returned
        /// </summary>
        [Input("ownerId", required: true)]
        public string OwnerId { get; set; } = null!;

        public GetOwnerLogStreamArgs()
        {
        }
        public static new GetOwnerLogStreamArgs Empty => new GetOwnerLogStreamArgs();
    }

    public sealed class GetOwnerLogStreamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the owner (team or personal user) whose log streams should be returned
        /// </summary>
        [Input("ownerId", required: true)]
        public Input<string> OwnerId { get; set; } = null!;

        public GetOwnerLogStreamInvokeArgs()
        {
        }
        public static new GetOwnerLogStreamInvokeArgs Empty => new GetOwnerLogStreamInvokeArgs();
    }
}
