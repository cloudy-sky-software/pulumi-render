// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDeploy(ctx *pulumi.Context, args *LookupDeployArgs, opts ...pulumi.InvokeOption) (*LookupDeployResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeployResult
	err := ctx.Invoke("render:services:getDeploy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeployArgs struct {
}

type LookupDeployResult struct {
	Items DeployType `pulumi:"items"`
}

func LookupDeployOutput(ctx *pulumi.Context, args LookupDeployOutputArgs, opts ...pulumi.InvokeOption) LookupDeployResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeployResult, error) {
			args := v.(LookupDeployArgs)
			r, err := LookupDeploy(ctx, &args, opts...)
			var s LookupDeployResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeployResultOutput)
}

type LookupDeployOutputArgs struct {
}

func (LookupDeployOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployArgs)(nil)).Elem()
}

type LookupDeployResultOutput struct{ *pulumi.OutputState }

func (LookupDeployResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployResult)(nil)).Elem()
}

func (o LookupDeployResultOutput) ToLookupDeployResultOutput() LookupDeployResultOutput {
	return o
}

func (o LookupDeployResultOutput) ToLookupDeployResultOutputWithContext(ctx context.Context) LookupDeployResultOutput {
	return o
}

func (o LookupDeployResultOutput) Items() DeployTypeOutput {
	return o.ApplyT(func(v LookupDeployResult) DeployType { return v.Items }).(DeployTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeployResultOutput{})
}
