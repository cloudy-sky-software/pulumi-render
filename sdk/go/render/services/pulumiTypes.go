// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A background worker service
type BackgroundWorker struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                          `pulumi:"repo"`
	SecretFiles    []SecretFile                    `pulumi:"secretFiles"`
	ServiceDetails *BackgroundWorkerServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                         `pulumi:"slug"`
	Suspended      *ServiceSuspended               `pulumi:"suspended"`
	Suspenders     []string                        `pulumi:"suspenders"`
	Type           *string                         `pulumi:"type"`
	UpdatedAt      *string                         `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for BackgroundWorker
func (val *BackgroundWorker) Defaults() *BackgroundWorker {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "background_worker"
		tmp.Type = &type_
	}
	return &tmp
}

// A background worker service
type BackgroundWorkerOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorker)(nil)).Elem()
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutput() BackgroundWorkerOutput {
	return o
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o BackgroundWorkerOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o BackgroundWorkerOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v BackgroundWorker) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o BackgroundWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackgroundWorker) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o BackgroundWorkerOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o BackgroundWorkerOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v BackgroundWorker) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o BackgroundWorkerOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v BackgroundWorker) string { return v.Repo }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v BackgroundWorker) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o BackgroundWorkerOutput) ServiceDetails() BackgroundWorkerServiceDetailsPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *BackgroundWorkerServiceDetails { return v.ServiceDetails }).(BackgroundWorkerServiceDetailsPtrOutput)
}

func (o BackgroundWorkerOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o BackgroundWorkerOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackgroundWorker) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o BackgroundWorkerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorker) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type BackgroundWorkerPtrOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorker)(nil)).Elem()
}

func (o BackgroundWorkerPtrOutput) ToBackgroundWorkerPtrOutput() BackgroundWorkerPtrOutput {
	return o
}

func (o BackgroundWorkerPtrOutput) ToBackgroundWorkerPtrOutputWithContext(ctx context.Context) BackgroundWorkerPtrOutput {
	return o
}

func (o BackgroundWorkerPtrOutput) Elem() BackgroundWorkerOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorker {
		if v != nil {
			return *v
		}
		var ret BackgroundWorker
		return ret
	}).(BackgroundWorkerOutput)
}

// Whether to auto deploy the service or not upon git push.
func (o BackgroundWorkerPtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o BackgroundWorkerPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerPtrOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) []EnvVarKeyValue {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(EnvVarKeyValueArrayOutput)
}

func (o BackgroundWorkerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification setting for this service upon deployment failure.
func (o BackgroundWorkerPtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o BackgroundWorkerPtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o BackgroundWorkerPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerPtrOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) []SecretFile {
		if v == nil {
			return nil
		}
		return v.SecretFiles
	}).(SecretFileArrayOutput)
}

func (o BackgroundWorkerPtrOutput) ServiceDetails() BackgroundWorkerServiceDetailsPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *BackgroundWorkerServiceDetails {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(BackgroundWorkerServiceDetailsPtrOutput)
}

func (o BackgroundWorkerPtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerPtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o BackgroundWorkerPtrOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) []string {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(pulumi.StringArrayOutput)
}

func (o BackgroundWorkerPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type BackgroundWorkerServiceDetails struct {
	Disk                       *Disk                                                     `pulumi:"disk"`
	Env                        BackgroundWorkerServiceDetailsEnv                         `pulumi:"env"`
	EnvSpecificDetails         interface{}                                               `pulumi:"envSpecificDetails"`
	NumInstances               *float64                                                  `pulumi:"numInstances"`
	ParentServer               *BackgroundWorkerServiceDetailsParentServerProperties     `pulumi:"parentServer"`
	Plan                       *BackgroundWorkerServiceDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled *BackgroundWorkerServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     *BackgroundWorkerServiceDetailsRegion                     `pulumi:"region"`
	Url                        *string                                                   `pulumi:"url"`
}

// Defaults sets the appropriate defaults for BackgroundWorkerServiceDetails
func (val *BackgroundWorkerServiceDetails) Defaults() *BackgroundWorkerServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Disk = tmp.Disk.Defaults()

	if tmp.NumInstances == nil {
		numInstances_ := 1.0
		tmp.NumInstances = &numInstances_
	}
	if tmp.Plan == nil {
		plan_ := BackgroundWorkerServiceDetailsPlan("starter")
		tmp.Plan = &plan_
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		pullRequestPreviewsEnabled_ := BackgroundWorkerServiceDetailsPullRequestPreviewsEnabled("no")
		tmp.PullRequestPreviewsEnabled = &pullRequestPreviewsEnabled_
	}
	if tmp.Region == nil {
		region_ := BackgroundWorkerServiceDetailsRegion("oregon")
		tmp.Region = &region_
	}
	return &tmp
}

// BackgroundWorkerServiceDetailsInput is an input type that accepts BackgroundWorkerServiceDetailsArgs and BackgroundWorkerServiceDetailsOutput values.
// You can construct a concrete instance of `BackgroundWorkerServiceDetailsInput` via:
//
//	BackgroundWorkerServiceDetailsArgs{...}
type BackgroundWorkerServiceDetailsInput interface {
	pulumi.Input

	ToBackgroundWorkerServiceDetailsOutput() BackgroundWorkerServiceDetailsOutput
	ToBackgroundWorkerServiceDetailsOutputWithContext(context.Context) BackgroundWorkerServiceDetailsOutput
}

type BackgroundWorkerServiceDetailsArgs struct {
	Disk                       DiskPtrInput                                                     `pulumi:"disk"`
	Env                        BackgroundWorkerServiceDetailsEnvInput                           `pulumi:"env"`
	EnvSpecificDetails         pulumi.Input                                                     `pulumi:"envSpecificDetails"`
	NumInstances               pulumi.Float64PtrInput                                           `pulumi:"numInstances"`
	ParentServer               BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput     `pulumi:"parentServer"`
	Plan                       BackgroundWorkerServiceDetailsPlanPtrInput                       `pulumi:"plan"`
	PullRequestPreviewsEnabled BackgroundWorkerServiceDetailsPullRequestPreviewsEnabledPtrInput `pulumi:"pullRequestPreviewsEnabled"`
	Region                     BackgroundWorkerServiceDetailsRegionPtrInput                     `pulumi:"region"`
	Url                        pulumi.StringPtrInput                                            `pulumi:"url"`
}

// Defaults sets the appropriate defaults for BackgroundWorkerServiceDetailsArgs
func (val *BackgroundWorkerServiceDetailsArgs) Defaults() *BackgroundWorkerServiceDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.NumInstances == nil {
		tmp.NumInstances = pulumi.Float64Ptr(1.0)
	}
	if tmp.Plan == nil {
		tmp.Plan = BackgroundWorkerServiceDetailsPlan("starter")
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		tmp.PullRequestPreviewsEnabled = BackgroundWorkerServiceDetailsPullRequestPreviewsEnabled("no")
	}
	if tmp.Region == nil {
		tmp.Region = BackgroundWorkerServiceDetailsRegion("oregon")
	}
	return &tmp
}
func (BackgroundWorkerServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorkerServiceDetails)(nil)).Elem()
}

func (i BackgroundWorkerServiceDetailsArgs) ToBackgroundWorkerServiceDetailsOutput() BackgroundWorkerServiceDetailsOutput {
	return i.ToBackgroundWorkerServiceDetailsOutputWithContext(context.Background())
}

func (i BackgroundWorkerServiceDetailsArgs) ToBackgroundWorkerServiceDetailsOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsOutput)
}

func (i BackgroundWorkerServiceDetailsArgs) ToBackgroundWorkerServiceDetailsPtrOutput() BackgroundWorkerServiceDetailsPtrOutput {
	return i.ToBackgroundWorkerServiceDetailsPtrOutputWithContext(context.Background())
}

func (i BackgroundWorkerServiceDetailsArgs) ToBackgroundWorkerServiceDetailsPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsOutput).ToBackgroundWorkerServiceDetailsPtrOutputWithContext(ctx)
}

// BackgroundWorkerServiceDetailsPtrInput is an input type that accepts BackgroundWorkerServiceDetailsArgs, BackgroundWorkerServiceDetailsPtr and BackgroundWorkerServiceDetailsPtrOutput values.
// You can construct a concrete instance of `BackgroundWorkerServiceDetailsPtrInput` via:
//
//	        BackgroundWorkerServiceDetailsArgs{...}
//
//	or:
//
//	        nil
type BackgroundWorkerServiceDetailsPtrInput interface {
	pulumi.Input

	ToBackgroundWorkerServiceDetailsPtrOutput() BackgroundWorkerServiceDetailsPtrOutput
	ToBackgroundWorkerServiceDetailsPtrOutputWithContext(context.Context) BackgroundWorkerServiceDetailsPtrOutput
}

type backgroundWorkerServiceDetailsPtrType BackgroundWorkerServiceDetailsArgs

func BackgroundWorkerServiceDetailsPtr(v *BackgroundWorkerServiceDetailsArgs) BackgroundWorkerServiceDetailsPtrInput {
	return (*backgroundWorkerServiceDetailsPtrType)(v)
}

func (*backgroundWorkerServiceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorkerServiceDetails)(nil)).Elem()
}

func (i *backgroundWorkerServiceDetailsPtrType) ToBackgroundWorkerServiceDetailsPtrOutput() BackgroundWorkerServiceDetailsPtrOutput {
	return i.ToBackgroundWorkerServiceDetailsPtrOutputWithContext(context.Background())
}

func (i *backgroundWorkerServiceDetailsPtrType) ToBackgroundWorkerServiceDetailsPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsPtrOutput)
}

type BackgroundWorkerServiceDetailsOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorkerServiceDetails)(nil)).Elem()
}

func (o BackgroundWorkerServiceDetailsOutput) ToBackgroundWorkerServiceDetailsOutput() BackgroundWorkerServiceDetailsOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsOutput) ToBackgroundWorkerServiceDetailsOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsOutput) ToBackgroundWorkerServiceDetailsPtrOutput() BackgroundWorkerServiceDetailsPtrOutput {
	return o.ToBackgroundWorkerServiceDetailsPtrOutputWithContext(context.Background())
}

func (o BackgroundWorkerServiceDetailsOutput) ToBackgroundWorkerServiceDetailsPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetails {
		return &v
	}).(BackgroundWorkerServiceDetailsPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) Env() BackgroundWorkerServiceDetailsEnvOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) BackgroundWorkerServiceDetailsEnv { return v.Env }).(BackgroundWorkerServiceDetailsEnvOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *float64 { return v.NumInstances }).(pulumi.Float64PtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) ParentServer() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsParentServerProperties {
		return v.ParentServer
	}).(BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) Plan() BackgroundWorkerServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsPlan { return v.Plan }).(BackgroundWorkerServiceDetailsPlanPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) PullRequestPreviewsEnabled() BackgroundWorkerServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(BackgroundWorkerServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) Region() BackgroundWorkerServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsRegion { return v.Region }).(BackgroundWorkerServiceDetailsRegionPtrOutput)
}

func (o BackgroundWorkerServiceDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BackgroundWorkerServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorkerServiceDetails)(nil)).Elem()
}

func (o BackgroundWorkerServiceDetailsPtrOutput) ToBackgroundWorkerServiceDetailsPtrOutput() BackgroundWorkerServiceDetailsPtrOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsPtrOutput) ToBackgroundWorkerServiceDetailsPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsPtrOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Elem() BackgroundWorkerServiceDetailsOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) BackgroundWorkerServiceDetails {
		if v != nil {
			return *v
		}
		var ret BackgroundWorkerServiceDetails
		return ret
	}).(BackgroundWorkerServiceDetailsOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Env() BackgroundWorkerServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(BackgroundWorkerServiceDetailsEnvPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *float64 {
		if v == nil {
			return nil
		}
		return v.NumInstances
	}).(pulumi.Float64PtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) ParentServer() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsParentServerProperties {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Plan() BackgroundWorkerServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(BackgroundWorkerServiceDetailsPlanPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) PullRequestPreviewsEnabled() BackgroundWorkerServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return v.PullRequestPreviewsEnabled
	}).(BackgroundWorkerServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Region() BackgroundWorkerServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *BackgroundWorkerServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(BackgroundWorkerServiceDetailsRegionPtrOutput)
}

func (o BackgroundWorkerServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type BackgroundWorkerServiceDetailsParentServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// BackgroundWorkerServiceDetailsParentServerPropertiesInput is an input type that accepts BackgroundWorkerServiceDetailsParentServerPropertiesArgs and BackgroundWorkerServiceDetailsParentServerPropertiesOutput values.
// You can construct a concrete instance of `BackgroundWorkerServiceDetailsParentServerPropertiesInput` via:
//
//	BackgroundWorkerServiceDetailsParentServerPropertiesArgs{...}
type BackgroundWorkerServiceDetailsParentServerPropertiesInput interface {
	pulumi.Input

	ToBackgroundWorkerServiceDetailsParentServerPropertiesOutput() BackgroundWorkerServiceDetailsParentServerPropertiesOutput
	ToBackgroundWorkerServiceDetailsParentServerPropertiesOutputWithContext(context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesOutput
}

type BackgroundWorkerServiceDetailsParentServerPropertiesArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackgroundWorkerServiceDetailsParentServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorkerServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i BackgroundWorkerServiceDetailsParentServerPropertiesArgs) ToBackgroundWorkerServiceDetailsParentServerPropertiesOutput() BackgroundWorkerServiceDetailsParentServerPropertiesOutput {
	return i.ToBackgroundWorkerServiceDetailsParentServerPropertiesOutputWithContext(context.Background())
}

func (i BackgroundWorkerServiceDetailsParentServerPropertiesArgs) ToBackgroundWorkerServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsParentServerPropertiesOutput)
}

func (i BackgroundWorkerServiceDetailsParentServerPropertiesArgs) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i BackgroundWorkerServiceDetailsParentServerPropertiesArgs) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsParentServerPropertiesOutput).ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx)
}

// BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput is an input type that accepts BackgroundWorkerServiceDetailsParentServerPropertiesArgs, BackgroundWorkerServiceDetailsParentServerPropertiesPtr and BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput values.
// You can construct a concrete instance of `BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput` via:
//
//	        BackgroundWorkerServiceDetailsParentServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput interface {
	pulumi.Input

	ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput
	ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput
}

type backgroundWorkerServiceDetailsParentServerPropertiesPtrType BackgroundWorkerServiceDetailsParentServerPropertiesArgs

func BackgroundWorkerServiceDetailsParentServerPropertiesPtr(v *BackgroundWorkerServiceDetailsParentServerPropertiesArgs) BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput {
	return (*backgroundWorkerServiceDetailsParentServerPropertiesPtrType)(v)
}

func (*backgroundWorkerServiceDetailsParentServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorkerServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i *backgroundWorkerServiceDetailsParentServerPropertiesPtrType) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *backgroundWorkerServiceDetailsParentServerPropertiesPtrType) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput)
}

type BackgroundWorkerServiceDetailsParentServerPropertiesOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerServiceDetailsParentServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorkerServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesOutput() BackgroundWorkerServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o.ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackgroundWorkerServiceDetailsParentServerProperties) *BackgroundWorkerServiceDetailsParentServerProperties {
		return &v
	}).(BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput)
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetailsParentServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerServiceDetailsParentServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorkerServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput() BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) ToBackgroundWorkerServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) Elem() BackgroundWorkerServiceDetailsParentServerPropertiesOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetailsParentServerProperties) BackgroundWorkerServiceDetailsParentServerProperties {
		if v != nil {
			return *v
		}
		var ret BackgroundWorkerServiceDetailsParentServerProperties
		return ret
	}).(BackgroundWorkerServiceDetailsParentServerPropertiesOutput)
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type Commit struct {
	CreatedAt *string `pulumi:"createdAt"`
	Id        *string `pulumi:"id"`
	Message   *string `pulumi:"message"`
}

type CommitOutput struct{ *pulumi.OutputState }

func (CommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Commit)(nil)).Elem()
}

func (o CommitOutput) ToCommitOutput() CommitOutput {
	return o
}

func (o CommitOutput) ToCommitOutputWithContext(ctx context.Context) CommitOutput {
	return o
}

func (o CommitOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Commit) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o CommitOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Commit) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CommitOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Commit) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type CommitPtrOutput struct{ *pulumi.OutputState }

func (CommitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Commit)(nil)).Elem()
}

func (o CommitPtrOutput) ToCommitPtrOutput() CommitPtrOutput {
	return o
}

func (o CommitPtrOutput) ToCommitPtrOutputWithContext(ctx context.Context) CommitPtrOutput {
	return o
}

func (o CommitPtrOutput) Elem() CommitOutput {
	return o.ApplyT(func(v *Commit) Commit {
		if v != nil {
			return *v
		}
		var ret Commit
		return ret
	}).(CommitOutput)
}

func (o CommitPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Commit) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o CommitPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Commit) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CommitPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Commit) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A cron job
type CronJob struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                 `pulumi:"repo"`
	SecretFiles    []SecretFile           `pulumi:"secretFiles"`
	ServiceDetails *CronJobServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                `pulumi:"slug"`
	Suspended      *ServiceSuspended      `pulumi:"suspended"`
	Suspenders     []string               `pulumi:"suspenders"`
	Type           *string                `pulumi:"type"`
	UpdatedAt      *string                `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for CronJob
func (val *CronJob) Defaults() *CronJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "cron_job"
		tmp.Type = &type_
	}
	return &tmp
}

// A cron job
type CronJobOutput struct{ *pulumi.OutputState }

func (CronJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CronJob)(nil)).Elem()
}

func (o CronJobOutput) ToCronJobOutput() CronJobOutput {
	return o
}

func (o CronJobOutput) ToCronJobOutputWithContext(ctx context.Context) CronJobOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o CronJobOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v CronJob) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o CronJobOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJob) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJob) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v CronJob) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o CronJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CronJob) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o CronJobOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v CronJob) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o CronJobOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v CronJob) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o CronJobOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v CronJob) string { return v.Repo }).(pulumi.StringOutput)
}

func (o CronJobOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v CronJob) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o CronJobOutput) ServiceDetails() CronJobServiceDetailsPtrOutput {
	return o.ApplyT(func(v CronJob) *CronJobServiceDetails { return v.ServiceDetails }).(CronJobServiceDetailsPtrOutput)
}

func (o CronJobOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJob) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v CronJob) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o CronJobOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CronJob) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o CronJobOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJob) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJob) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type CronJobPtrOutput struct{ *pulumi.OutputState }

func (CronJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJob)(nil)).Elem()
}

func (o CronJobPtrOutput) ToCronJobPtrOutput() CronJobPtrOutput {
	return o
}

func (o CronJobPtrOutput) ToCronJobPtrOutputWithContext(ctx context.Context) CronJobPtrOutput {
	return o
}

func (o CronJobPtrOutput) Elem() CronJobOutput {
	return o.ApplyT(func(v *CronJob) CronJob {
		if v != nil {
			return *v
		}
		var ret CronJob
		return ret
	}).(CronJobOutput)
}

// Whether to auto deploy the service or not upon git push.
func (o CronJobPtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *CronJob) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o CronJobPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o CronJobPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o CronJobPtrOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v *CronJob) []EnvVarKeyValue {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(EnvVarKeyValueArrayOutput)
}

func (o CronJobPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification setting for this service upon deployment failure.
func (o CronJobPtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *CronJob) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o CronJobPtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o CronJobPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o CronJobPtrOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *CronJob) []SecretFile {
		if v == nil {
			return nil
		}
		return v.SecretFiles
	}).(SecretFileArrayOutput)
}

func (o CronJobPtrOutput) ServiceDetails() CronJobServiceDetailsPtrOutput {
	return o.ApplyT(func(v *CronJob) *CronJobServiceDetails {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(CronJobServiceDetailsPtrOutput)
}

func (o CronJobPtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o CronJobPtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *CronJob) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o CronJobPtrOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CronJob) []string {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(pulumi.StringArrayOutput)
}

func (o CronJobPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o CronJobPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type CronJobServiceDetails struct {
	Env                 CronJobServiceDetailsEnv     `pulumi:"env"`
	EnvSpecificDetails  interface{}                  `pulumi:"envSpecificDetails"`
	LastSuccessfulRunAt *string                      `pulumi:"lastSuccessfulRunAt"`
	Plan                *CronJobServiceDetailsPlan   `pulumi:"plan"`
	Region              *CronJobServiceDetailsRegion `pulumi:"region"`
	Schedule            string                       `pulumi:"schedule"`
}

// Defaults sets the appropriate defaults for CronJobServiceDetails
func (val *CronJobServiceDetails) Defaults() *CronJobServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Plan == nil {
		plan_ := CronJobServiceDetailsPlan("starter")
		tmp.Plan = &plan_
	}
	if tmp.Region == nil {
		region_ := CronJobServiceDetailsRegion("oregon")
		tmp.Region = &region_
	}
	return &tmp
}

// CronJobServiceDetailsInput is an input type that accepts CronJobServiceDetailsArgs and CronJobServiceDetailsOutput values.
// You can construct a concrete instance of `CronJobServiceDetailsInput` via:
//
//	CronJobServiceDetailsArgs{...}
type CronJobServiceDetailsInput interface {
	pulumi.Input

	ToCronJobServiceDetailsOutput() CronJobServiceDetailsOutput
	ToCronJobServiceDetailsOutputWithContext(context.Context) CronJobServiceDetailsOutput
}

type CronJobServiceDetailsArgs struct {
	Env                 CronJobServiceDetailsEnvInput       `pulumi:"env"`
	EnvSpecificDetails  pulumi.Input                        `pulumi:"envSpecificDetails"`
	LastSuccessfulRunAt pulumi.StringPtrInput               `pulumi:"lastSuccessfulRunAt"`
	Plan                CronJobServiceDetailsPlanPtrInput   `pulumi:"plan"`
	Region              CronJobServiceDetailsRegionPtrInput `pulumi:"region"`
	Schedule            pulumi.StringInput                  `pulumi:"schedule"`
}

// Defaults sets the appropriate defaults for CronJobServiceDetailsArgs
func (val *CronJobServiceDetailsArgs) Defaults() *CronJobServiceDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Plan == nil {
		tmp.Plan = CronJobServiceDetailsPlan("starter")
	}
	if tmp.Region == nil {
		tmp.Region = CronJobServiceDetailsRegion("oregon")
	}
	return &tmp
}
func (CronJobServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CronJobServiceDetails)(nil)).Elem()
}

func (i CronJobServiceDetailsArgs) ToCronJobServiceDetailsOutput() CronJobServiceDetailsOutput {
	return i.ToCronJobServiceDetailsOutputWithContext(context.Background())
}

func (i CronJobServiceDetailsArgs) ToCronJobServiceDetailsOutputWithContext(ctx context.Context) CronJobServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CronJobServiceDetailsOutput)
}

func (i CronJobServiceDetailsArgs) ToCronJobServiceDetailsPtrOutput() CronJobServiceDetailsPtrOutput {
	return i.ToCronJobServiceDetailsPtrOutputWithContext(context.Background())
}

func (i CronJobServiceDetailsArgs) ToCronJobServiceDetailsPtrOutputWithContext(ctx context.Context) CronJobServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CronJobServiceDetailsOutput).ToCronJobServiceDetailsPtrOutputWithContext(ctx)
}

// CronJobServiceDetailsPtrInput is an input type that accepts CronJobServiceDetailsArgs, CronJobServiceDetailsPtr and CronJobServiceDetailsPtrOutput values.
// You can construct a concrete instance of `CronJobServiceDetailsPtrInput` via:
//
//	        CronJobServiceDetailsArgs{...}
//
//	or:
//
//	        nil
type CronJobServiceDetailsPtrInput interface {
	pulumi.Input

	ToCronJobServiceDetailsPtrOutput() CronJobServiceDetailsPtrOutput
	ToCronJobServiceDetailsPtrOutputWithContext(context.Context) CronJobServiceDetailsPtrOutput
}

type cronJobServiceDetailsPtrType CronJobServiceDetailsArgs

func CronJobServiceDetailsPtr(v *CronJobServiceDetailsArgs) CronJobServiceDetailsPtrInput {
	return (*cronJobServiceDetailsPtrType)(v)
}

func (*cronJobServiceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJobServiceDetails)(nil)).Elem()
}

func (i *cronJobServiceDetailsPtrType) ToCronJobServiceDetailsPtrOutput() CronJobServiceDetailsPtrOutput {
	return i.ToCronJobServiceDetailsPtrOutputWithContext(context.Background())
}

func (i *cronJobServiceDetailsPtrType) ToCronJobServiceDetailsPtrOutputWithContext(ctx context.Context) CronJobServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CronJobServiceDetailsPtrOutput)
}

type CronJobServiceDetailsOutput struct{ *pulumi.OutputState }

func (CronJobServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CronJobServiceDetails)(nil)).Elem()
}

func (o CronJobServiceDetailsOutput) ToCronJobServiceDetailsOutput() CronJobServiceDetailsOutput {
	return o
}

func (o CronJobServiceDetailsOutput) ToCronJobServiceDetailsOutputWithContext(ctx context.Context) CronJobServiceDetailsOutput {
	return o
}

func (o CronJobServiceDetailsOutput) ToCronJobServiceDetailsPtrOutput() CronJobServiceDetailsPtrOutput {
	return o.ToCronJobServiceDetailsPtrOutputWithContext(context.Background())
}

func (o CronJobServiceDetailsOutput) ToCronJobServiceDetailsPtrOutputWithContext(ctx context.Context) CronJobServiceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CronJobServiceDetails) *CronJobServiceDetails {
		return &v
	}).(CronJobServiceDetailsPtrOutput)
}

func (o CronJobServiceDetailsOutput) Env() CronJobServiceDetailsEnvOutput {
	return o.ApplyT(func(v CronJobServiceDetails) CronJobServiceDetailsEnv { return v.Env }).(CronJobServiceDetailsEnvOutput)
}

func (o CronJobServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v CronJobServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o CronJobServiceDetailsOutput) LastSuccessfulRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJobServiceDetails) *string { return v.LastSuccessfulRunAt }).(pulumi.StringPtrOutput)
}

func (o CronJobServiceDetailsOutput) Plan() CronJobServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v CronJobServiceDetails) *CronJobServiceDetailsPlan { return v.Plan }).(CronJobServiceDetailsPlanPtrOutput)
}

func (o CronJobServiceDetailsOutput) Region() CronJobServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v CronJobServiceDetails) *CronJobServiceDetailsRegion { return v.Region }).(CronJobServiceDetailsRegionPtrOutput)
}

func (o CronJobServiceDetailsOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v CronJobServiceDetails) string { return v.Schedule }).(pulumi.StringOutput)
}

type CronJobServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (CronJobServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJobServiceDetails)(nil)).Elem()
}

func (o CronJobServiceDetailsPtrOutput) ToCronJobServiceDetailsPtrOutput() CronJobServiceDetailsPtrOutput {
	return o
}

func (o CronJobServiceDetailsPtrOutput) ToCronJobServiceDetailsPtrOutputWithContext(ctx context.Context) CronJobServiceDetailsPtrOutput {
	return o
}

func (o CronJobServiceDetailsPtrOutput) Elem() CronJobServiceDetailsOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) CronJobServiceDetails {
		if v != nil {
			return *v
		}
		var ret CronJobServiceDetails
		return ret
	}).(CronJobServiceDetailsOutput)
}

func (o CronJobServiceDetailsPtrOutput) Env() CronJobServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) *CronJobServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(CronJobServiceDetailsEnvPtrOutput)
}

func (o CronJobServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o CronJobServiceDetailsPtrOutput) LastSuccessfulRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulRunAt
	}).(pulumi.StringPtrOutput)
}

func (o CronJobServiceDetailsPtrOutput) Plan() CronJobServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) *CronJobServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(CronJobServiceDetailsPlanPtrOutput)
}

func (o CronJobServiceDetailsPtrOutput) Region() CronJobServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) *CronJobServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(CronJobServiceDetailsRegionPtrOutput)
}

func (o CronJobServiceDetailsPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJobServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

type CustomDomain struct {
	CreatedAt          *string                        `pulumi:"createdAt"`
	DomainType         CustomDomainDomainType         `pulumi:"domainType"`
	Name               string                         `pulumi:"name"`
	PublicSuffix       *string                        `pulumi:"publicSuffix"`
	RedirectForName    string                         `pulumi:"redirectForName"`
	Server             CustomDomainServerProperties   `pulumi:"server"`
	VerificationStatus CustomDomainVerificationStatus `pulumi:"verificationStatus"`
}

type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomain) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o CustomDomainOutput) DomainType() CustomDomainDomainTypeOutput {
	return o.ApplyT(func(v CustomDomain) CustomDomainDomainType { return v.DomainType }).(CustomDomainDomainTypeOutput)
}

func (o CustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

func (o CustomDomainOutput) PublicSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomain) *string { return v.PublicSuffix }).(pulumi.StringPtrOutput)
}

func (o CustomDomainOutput) RedirectForName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomain) string { return v.RedirectForName }).(pulumi.StringOutput)
}

func (o CustomDomainOutput) Server() CustomDomainServerPropertiesOutput {
	return o.ApplyT(func(v CustomDomain) CustomDomainServerProperties { return v.Server }).(CustomDomainServerPropertiesOutput)
}

func (o CustomDomainOutput) VerificationStatus() CustomDomainVerificationStatusOutput {
	return o.ApplyT(func(v CustomDomain) CustomDomainVerificationStatus { return v.VerificationStatus }).(CustomDomainVerificationStatusOutput)
}

type CustomDomainPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) Elem() CustomDomainOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomain {
		if v != nil {
			return *v
		}
		var ret CustomDomain
		return ret
	}).(CustomDomainOutput)
}

func (o CustomDomainPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainPtrOutput) DomainType() CustomDomainDomainTypePtrOutput {
	return o.ApplyT(func(v *CustomDomain) *CustomDomainDomainType {
		if v == nil {
			return nil
		}
		return &v.DomainType
	}).(CustomDomainDomainTypePtrOutput)
}

func (o CustomDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainPtrOutput) PublicSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return v.PublicSuffix
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainPtrOutput) RedirectForName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectForName
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainPtrOutput) Server() CustomDomainServerPropertiesPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *CustomDomainServerProperties {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(CustomDomainServerPropertiesPtrOutput)
}

func (o CustomDomainPtrOutput) VerificationStatus() CustomDomainVerificationStatusPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *CustomDomainVerificationStatus {
		if v == nil {
			return nil
		}
		return &v.VerificationStatus
	}).(CustomDomainVerificationStatusPtrOutput)
}

type CustomDomainServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type CustomDomainServerPropertiesOutput struct{ *pulumi.OutputState }

func (CustomDomainServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainServerProperties)(nil)).Elem()
}

func (o CustomDomainServerPropertiesOutput) ToCustomDomainServerPropertiesOutput() CustomDomainServerPropertiesOutput {
	return o
}

func (o CustomDomainServerPropertiesOutput) ToCustomDomainServerPropertiesOutputWithContext(ctx context.Context) CustomDomainServerPropertiesOutput {
	return o
}

func (o CustomDomainServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CustomDomainServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CustomDomainServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainServerProperties)(nil)).Elem()
}

func (o CustomDomainServerPropertiesPtrOutput) ToCustomDomainServerPropertiesPtrOutput() CustomDomainServerPropertiesPtrOutput {
	return o
}

func (o CustomDomainServerPropertiesPtrOutput) ToCustomDomainServerPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainServerPropertiesPtrOutput {
	return o
}

func (o CustomDomainServerPropertiesPtrOutput) Elem() CustomDomainServerPropertiesOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) CustomDomainServerProperties {
		if v != nil {
			return *v
		}
		var ret CustomDomainServerProperties
		return ret
	}).(CustomDomainServerPropertiesOutput)
}

func (o CustomDomainServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type Deploy struct {
	ClearCache *DeployClearCache `pulumi:"clearCache"`
	Commit     *Commit           `pulumi:"commit"`
}

// Defaults sets the appropriate defaults for Deploy
func (val *Deploy) Defaults() *Deploy {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ClearCache == nil {
		clearCache_ := DeployClearCache("do_not_clear")
		tmp.ClearCache = &clearCache_
	}
	return &tmp
}

type DeployOutput struct{ *pulumi.OutputState }

func (DeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Deploy)(nil)).Elem()
}

func (o DeployOutput) ToDeployOutput() DeployOutput {
	return o
}

func (o DeployOutput) ToDeployOutputWithContext(ctx context.Context) DeployOutput {
	return o
}

func (o DeployOutput) ClearCache() DeployClearCachePtrOutput {
	return o.ApplyT(func(v Deploy) *DeployClearCache { return v.ClearCache }).(DeployClearCachePtrOutput)
}

func (o DeployOutput) Commit() CommitPtrOutput {
	return o.ApplyT(func(v Deploy) *Commit { return v.Commit }).(CommitPtrOutput)
}

type DeployPtrOutput struct{ *pulumi.OutputState }

func (DeployPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deploy)(nil)).Elem()
}

func (o DeployPtrOutput) ToDeployPtrOutput() DeployPtrOutput {
	return o
}

func (o DeployPtrOutput) ToDeployPtrOutputWithContext(ctx context.Context) DeployPtrOutput {
	return o
}

func (o DeployPtrOutput) Elem() DeployOutput {
	return o.ApplyT(func(v *Deploy) Deploy {
		if v != nil {
			return *v
		}
		var ret Deploy
		return ret
	}).(DeployOutput)
}

func (o DeployPtrOutput) ClearCache() DeployClearCachePtrOutput {
	return o.ApplyT(func(v *Deploy) *DeployClearCache {
		if v == nil {
			return nil
		}
		return v.ClearCache
	}).(DeployClearCachePtrOutput)
}

func (o DeployPtrOutput) Commit() CommitPtrOutput {
	return o.ApplyT(func(v *Deploy) *Commit {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(CommitPtrOutput)
}

type Disk struct {
	MountPath string   `pulumi:"mountPath"`
	Name      string   `pulumi:"name"`
	SizeGB    *float64 `pulumi:"sizeGB"`
}

// Defaults sets the appropriate defaults for Disk
func (val *Disk) Defaults() *Disk {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SizeGB == nil {
		sizeGB_ := 1.0
		tmp.SizeGB = &sizeGB_
	}
	return &tmp
}

// DiskInput is an input type that accepts DiskArgs and DiskOutput values.
// You can construct a concrete instance of `DiskInput` via:
//
//	DiskArgs{...}
type DiskInput interface {
	pulumi.Input

	ToDiskOutput() DiskOutput
	ToDiskOutputWithContext(context.Context) DiskOutput
}

type DiskArgs struct {
	MountPath pulumi.StringInput     `pulumi:"mountPath"`
	Name      pulumi.StringInput     `pulumi:"name"`
	SizeGB    pulumi.Float64PtrInput `pulumi:"sizeGB"`
}

// Defaults sets the appropriate defaults for DiskArgs
func (val *DiskArgs) Defaults() *DiskArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SizeGB == nil {
		tmp.SizeGB = pulumi.Float64Ptr(1.0)
	}
	return &tmp
}
func (DiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (i DiskArgs) ToDiskOutput() DiskOutput {
	return i.ToDiskOutputWithContext(context.Background())
}

func (i DiskArgs) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskOutput)
}

func (i DiskArgs) ToDiskPtrOutput() DiskPtrOutput {
	return i.ToDiskPtrOutputWithContext(context.Background())
}

func (i DiskArgs) ToDiskPtrOutputWithContext(ctx context.Context) DiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskOutput).ToDiskPtrOutputWithContext(ctx)
}

// DiskPtrInput is an input type that accepts DiskArgs, DiskPtr and DiskPtrOutput values.
// You can construct a concrete instance of `DiskPtrInput` via:
//
//	        DiskArgs{...}
//
//	or:
//
//	        nil
type DiskPtrInput interface {
	pulumi.Input

	ToDiskPtrOutput() DiskPtrOutput
	ToDiskPtrOutputWithContext(context.Context) DiskPtrOutput
}

type diskPtrType DiskArgs

func DiskPtr(v *DiskArgs) DiskPtrInput {
	return (*diskPtrType)(v)
}

func (*diskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Disk)(nil)).Elem()
}

func (i *diskPtrType) ToDiskPtrOutput() DiskPtrOutput {
	return i.ToDiskPtrOutputWithContext(context.Background())
}

func (i *diskPtrType) ToDiskPtrOutputWithContext(ctx context.Context) DiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPtrOutput)
}

type DiskOutput struct{ *pulumi.OutputState }

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

func (o DiskOutput) ToDiskPtrOutput() DiskPtrOutput {
	return o.ToDiskPtrOutputWithContext(context.Background())
}

func (o DiskOutput) ToDiskPtrOutputWithContext(ctx context.Context) DiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Disk) *Disk {
		return &v
	}).(DiskPtrOutput)
}

func (o DiskOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v Disk) string { return v.MountPath }).(pulumi.StringOutput)
}

func (o DiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Disk) string { return v.Name }).(pulumi.StringOutput)
}

func (o DiskOutput) SizeGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Disk) *float64 { return v.SizeGB }).(pulumi.Float64PtrOutput)
}

type DiskPtrOutput struct{ *pulumi.OutputState }

func (DiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Disk)(nil)).Elem()
}

func (o DiskPtrOutput) ToDiskPtrOutput() DiskPtrOutput {
	return o
}

func (o DiskPtrOutput) ToDiskPtrOutputWithContext(ctx context.Context) DiskPtrOutput {
	return o
}

func (o DiskPtrOutput) Elem() DiskOutput {
	return o.ApplyT(func(v *Disk) Disk {
		if v != nil {
			return *v
		}
		var ret Disk
		return ret
	}).(DiskOutput)
}

func (o DiskPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

func (o DiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DiskPtrOutput) SizeGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Disk) *float64 {
		if v == nil {
			return nil
		}
		return v.SizeGB
	}).(pulumi.Float64PtrOutput)
}

type DockerDetails struct {
	DockerCommand  string  `pulumi:"dockerCommand"`
	DockerContext  string  `pulumi:"dockerContext"`
	DockerfilePath *string `pulumi:"dockerfilePath"`
}

// DockerDetailsInput is an input type that accepts DockerDetailsArgs and DockerDetailsOutput values.
// You can construct a concrete instance of `DockerDetailsInput` via:
//
//	DockerDetailsArgs{...}
type DockerDetailsInput interface {
	pulumi.Input

	ToDockerDetailsOutput() DockerDetailsOutput
	ToDockerDetailsOutputWithContext(context.Context) DockerDetailsOutput
}

type DockerDetailsArgs struct {
	DockerCommand  pulumi.StringInput    `pulumi:"dockerCommand"`
	DockerContext  pulumi.StringInput    `pulumi:"dockerContext"`
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
}

func (DockerDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerDetails)(nil)).Elem()
}

func (i DockerDetailsArgs) ToDockerDetailsOutput() DockerDetailsOutput {
	return i.ToDockerDetailsOutputWithContext(context.Background())
}

func (i DockerDetailsArgs) ToDockerDetailsOutputWithContext(ctx context.Context) DockerDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerDetailsOutput)
}

func (i DockerDetailsArgs) ToDockerDetailsPtrOutput() DockerDetailsPtrOutput {
	return i.ToDockerDetailsPtrOutputWithContext(context.Background())
}

func (i DockerDetailsArgs) ToDockerDetailsPtrOutputWithContext(ctx context.Context) DockerDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerDetailsOutput).ToDockerDetailsPtrOutputWithContext(ctx)
}

// DockerDetailsPtrInput is an input type that accepts DockerDetailsArgs, DockerDetailsPtr and DockerDetailsPtrOutput values.
// You can construct a concrete instance of `DockerDetailsPtrInput` via:
//
//	        DockerDetailsArgs{...}
//
//	or:
//
//	        nil
type DockerDetailsPtrInput interface {
	pulumi.Input

	ToDockerDetailsPtrOutput() DockerDetailsPtrOutput
	ToDockerDetailsPtrOutputWithContext(context.Context) DockerDetailsPtrOutput
}

type dockerDetailsPtrType DockerDetailsArgs

func DockerDetailsPtr(v *DockerDetailsArgs) DockerDetailsPtrInput {
	return (*dockerDetailsPtrType)(v)
}

func (*dockerDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerDetails)(nil)).Elem()
}

func (i *dockerDetailsPtrType) ToDockerDetailsPtrOutput() DockerDetailsPtrOutput {
	return i.ToDockerDetailsPtrOutputWithContext(context.Background())
}

func (i *dockerDetailsPtrType) ToDockerDetailsPtrOutputWithContext(ctx context.Context) DockerDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerDetailsPtrOutput)
}

type DockerDetailsOutput struct{ *pulumi.OutputState }

func (DockerDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerDetails)(nil)).Elem()
}

func (o DockerDetailsOutput) ToDockerDetailsOutput() DockerDetailsOutput {
	return o
}

func (o DockerDetailsOutput) ToDockerDetailsOutputWithContext(ctx context.Context) DockerDetailsOutput {
	return o
}

func (o DockerDetailsOutput) ToDockerDetailsPtrOutput() DockerDetailsPtrOutput {
	return o.ToDockerDetailsPtrOutputWithContext(context.Background())
}

func (o DockerDetailsOutput) ToDockerDetailsPtrOutputWithContext(ctx context.Context) DockerDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerDetails) *DockerDetails {
		return &v
	}).(DockerDetailsPtrOutput)
}

func (o DockerDetailsOutput) DockerCommand() pulumi.StringOutput {
	return o.ApplyT(func(v DockerDetails) string { return v.DockerCommand }).(pulumi.StringOutput)
}

func (o DockerDetailsOutput) DockerContext() pulumi.StringOutput {
	return o.ApplyT(func(v DockerDetails) string { return v.DockerContext }).(pulumi.StringOutput)
}

func (o DockerDetailsOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerDetails) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

type DockerDetailsPtrOutput struct{ *pulumi.OutputState }

func (DockerDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerDetails)(nil)).Elem()
}

func (o DockerDetailsPtrOutput) ToDockerDetailsPtrOutput() DockerDetailsPtrOutput {
	return o
}

func (o DockerDetailsPtrOutput) ToDockerDetailsPtrOutputWithContext(ctx context.Context) DockerDetailsPtrOutput {
	return o
}

func (o DockerDetailsPtrOutput) Elem() DockerDetailsOutput {
	return o.ApplyT(func(v *DockerDetails) DockerDetails {
		if v != nil {
			return *v
		}
		var ret DockerDetails
		return ret
	}).(DockerDetailsOutput)
}

func (o DockerDetailsPtrOutput) DockerCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DockerCommand
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) DockerContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DockerContext
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return v.DockerfilePath
	}).(pulumi.StringPtrOutput)
}

type EnvVarKeyValue struct {
	GenerateValue *EnvVarKeyValueGenerateValue `pulumi:"generateValue"`
	Key           string                       `pulumi:"key"`
	Value         *string                      `pulumi:"value"`
}

// EnvVarKeyValueInput is an input type that accepts EnvVarKeyValueArgs and EnvVarKeyValueOutput values.
// You can construct a concrete instance of `EnvVarKeyValueInput` via:
//
//	EnvVarKeyValueArgs{...}
type EnvVarKeyValueInput interface {
	pulumi.Input

	ToEnvVarKeyValueOutput() EnvVarKeyValueOutput
	ToEnvVarKeyValueOutputWithContext(context.Context) EnvVarKeyValueOutput
}

type EnvVarKeyValueArgs struct {
	GenerateValue EnvVarKeyValueGenerateValuePtrInput `pulumi:"generateValue"`
	Key           pulumi.StringInput                  `pulumi:"key"`
	Value         pulumi.StringPtrInput               `pulumi:"value"`
}

func (EnvVarKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyValue)(nil)).Elem()
}

func (i EnvVarKeyValueArgs) ToEnvVarKeyValueOutput() EnvVarKeyValueOutput {
	return i.ToEnvVarKeyValueOutputWithContext(context.Background())
}

func (i EnvVarKeyValueArgs) ToEnvVarKeyValueOutputWithContext(ctx context.Context) EnvVarKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarKeyValueOutput)
}

// EnvVarKeyValueArrayInput is an input type that accepts EnvVarKeyValueArray and EnvVarKeyValueArrayOutput values.
// You can construct a concrete instance of `EnvVarKeyValueArrayInput` via:
//
//	EnvVarKeyValueArray{ EnvVarKeyValueArgs{...} }
type EnvVarKeyValueArrayInput interface {
	pulumi.Input

	ToEnvVarKeyValueArrayOutput() EnvVarKeyValueArrayOutput
	ToEnvVarKeyValueArrayOutputWithContext(context.Context) EnvVarKeyValueArrayOutput
}

type EnvVarKeyValueArray []EnvVarKeyValueInput

func (EnvVarKeyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVarKeyValue)(nil)).Elem()
}

func (i EnvVarKeyValueArray) ToEnvVarKeyValueArrayOutput() EnvVarKeyValueArrayOutput {
	return i.ToEnvVarKeyValueArrayOutputWithContext(context.Background())
}

func (i EnvVarKeyValueArray) ToEnvVarKeyValueArrayOutputWithContext(ctx context.Context) EnvVarKeyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarKeyValueArrayOutput)
}

type EnvVarKeyValueOutput struct{ *pulumi.OutputState }

func (EnvVarKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyValue)(nil)).Elem()
}

func (o EnvVarKeyValueOutput) ToEnvVarKeyValueOutput() EnvVarKeyValueOutput {
	return o
}

func (o EnvVarKeyValueOutput) ToEnvVarKeyValueOutputWithContext(ctx context.Context) EnvVarKeyValueOutput {
	return o
}

func (o EnvVarKeyValueOutput) GenerateValue() EnvVarKeyValueGenerateValuePtrOutput {
	return o.ApplyT(func(v EnvVarKeyValue) *EnvVarKeyValueGenerateValue { return v.GenerateValue }).(EnvVarKeyValueGenerateValuePtrOutput)
}

func (o EnvVarKeyValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVarKeyValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o EnvVarKeyValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvVarKeyValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvVarKeyValuePtrOutput struct{ *pulumi.OutputState }

func (EnvVarKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvVarKeyValue)(nil)).Elem()
}

func (o EnvVarKeyValuePtrOutput) ToEnvVarKeyValuePtrOutput() EnvVarKeyValuePtrOutput {
	return o
}

func (o EnvVarKeyValuePtrOutput) ToEnvVarKeyValuePtrOutputWithContext(ctx context.Context) EnvVarKeyValuePtrOutput {
	return o
}

func (o EnvVarKeyValuePtrOutput) Elem() EnvVarKeyValueOutput {
	return o.ApplyT(func(v *EnvVarKeyValue) EnvVarKeyValue {
		if v != nil {
			return *v
		}
		var ret EnvVarKeyValue
		return ret
	}).(EnvVarKeyValueOutput)
}

func (o EnvVarKeyValuePtrOutput) GenerateValue() EnvVarKeyValueGenerateValuePtrOutput {
	return o.ApplyT(func(v *EnvVarKeyValue) *EnvVarKeyValueGenerateValue {
		if v == nil {
			return nil
		}
		return v.GenerateValue
	}).(EnvVarKeyValueGenerateValuePtrOutput)
}

func (o EnvVarKeyValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvVarKeyValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o EnvVarKeyValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvVarKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type EnvVarKeyValueArrayOutput struct{ *pulumi.OutputState }

func (EnvVarKeyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVarKeyValue)(nil)).Elem()
}

func (o EnvVarKeyValueArrayOutput) ToEnvVarKeyValueArrayOutput() EnvVarKeyValueArrayOutput {
	return o
}

func (o EnvVarKeyValueArrayOutput) ToEnvVarKeyValueArrayOutputWithContext(ctx context.Context) EnvVarKeyValueArrayOutput {
	return o
}

func (o EnvVarKeyValueArrayOutput) Index(i pulumi.IntInput) EnvVarKeyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvVarKeyValue {
		return vs[0].([]EnvVarKeyValue)[vs[1].(int)]
	}).(EnvVarKeyValueOutput)
}

// A background worker service
type GetBackgroundWorker struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                          `pulumi:"repo"`
	SecretFiles    []SecretFile                    `pulumi:"secretFiles"`
	ServiceDetails *BackgroundWorkerServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                         `pulumi:"slug"`
	Suspended      *ServiceSuspended               `pulumi:"suspended"`
	Suspenders     []string                        `pulumi:"suspenders"`
	Type           *string                         `pulumi:"type"`
	UpdatedAt      *string                         `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for GetBackgroundWorker
func (val *GetBackgroundWorker) Defaults() *GetBackgroundWorker {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "background_worker"
		tmp.Type = &type_
	}
	return &tmp
}

// A background worker service
type GetBackgroundWorkerOutput struct{ *pulumi.OutputState }

func (GetBackgroundWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackgroundWorker)(nil)).Elem()
}

func (o GetBackgroundWorkerOutput) ToGetBackgroundWorkerOutput() GetBackgroundWorkerOutput {
	return o
}

func (o GetBackgroundWorkerOutput) ToGetBackgroundWorkerOutputWithContext(ctx context.Context) GetBackgroundWorkerOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o GetBackgroundWorkerOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o GetBackgroundWorkerOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o GetBackgroundWorkerOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o GetBackgroundWorkerOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v GetBackgroundWorker) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o GetBackgroundWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackgroundWorker) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o GetBackgroundWorkerOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o GetBackgroundWorkerOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackgroundWorker) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o GetBackgroundWorkerOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackgroundWorker) string { return v.Repo }).(pulumi.StringOutput)
}

func (o GetBackgroundWorkerOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v GetBackgroundWorker) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o GetBackgroundWorkerOutput) ServiceDetails() BackgroundWorkerServiceDetailsPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *BackgroundWorkerServiceDetails { return v.ServiceDetails }).(BackgroundWorkerServiceDetailsPtrOutput)
}

func (o GetBackgroundWorkerOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetBackgroundWorkerOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o GetBackgroundWorkerOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackgroundWorker) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o GetBackgroundWorkerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetBackgroundWorkerOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackgroundWorker) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A cron job
type GetCronJob struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                 `pulumi:"repo"`
	SecretFiles    []SecretFile           `pulumi:"secretFiles"`
	ServiceDetails *CronJobServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                `pulumi:"slug"`
	Suspended      *ServiceSuspended      `pulumi:"suspended"`
	Suspenders     []string               `pulumi:"suspenders"`
	Type           *string                `pulumi:"type"`
	UpdatedAt      *string                `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for GetCronJob
func (val *GetCronJob) Defaults() *GetCronJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "cron_job"
		tmp.Type = &type_
	}
	return &tmp
}

// A cron job
type GetCronJobOutput struct{ *pulumi.OutputState }

func (GetCronJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCronJob)(nil)).Elem()
}

func (o GetCronJobOutput) ToGetCronJobOutput() GetCronJobOutput {
	return o
}

func (o GetCronJobOutput) ToGetCronJobOutputWithContext(ctx context.Context) GetCronJobOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o GetCronJobOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v GetCronJob) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o GetCronJobOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCronJob) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o GetCronJobOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCronJob) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o GetCronJobOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v GetCronJob) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o GetCronJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCronJob) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o GetCronJobOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v GetCronJob) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o GetCronJobOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCronJob) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o GetCronJobOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetCronJob) string { return v.Repo }).(pulumi.StringOutput)
}

func (o GetCronJobOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v GetCronJob) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o GetCronJobOutput) ServiceDetails() CronJobServiceDetailsPtrOutput {
	return o.ApplyT(func(v GetCronJob) *CronJobServiceDetails { return v.ServiceDetails }).(CronJobServiceDetailsPtrOutput)
}

func (o GetCronJobOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCronJob) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetCronJobOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v GetCronJob) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o GetCronJobOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCronJob) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o GetCronJobOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCronJob) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetCronJobOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCronJob) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A private service
type GetPrivateService struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                 `pulumi:"repo"`
	SecretFiles    []SecretFile           `pulumi:"secretFiles"`
	ServiceDetails *PrivateServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                `pulumi:"slug"`
	Suspended      *ServiceSuspended      `pulumi:"suspended"`
	Suspenders     []string               `pulumi:"suspenders"`
	Type           *string                `pulumi:"type"`
	UpdatedAt      *string                `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for GetPrivateService
func (val *GetPrivateService) Defaults() *GetPrivateService {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "private_service"
		tmp.Type = &type_
	}
	return &tmp
}

// A private service
type GetPrivateServiceOutput struct{ *pulumi.OutputState }

func (GetPrivateServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateService)(nil)).Elem()
}

func (o GetPrivateServiceOutput) ToGetPrivateServiceOutput() GetPrivateServiceOutput {
	return o
}

func (o GetPrivateServiceOutput) ToGetPrivateServiceOutputWithContext(ctx context.Context) GetPrivateServiceOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o GetPrivateServiceOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o GetPrivateServiceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o GetPrivateServiceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o GetPrivateServiceOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v GetPrivateService) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o GetPrivateServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateService) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o GetPrivateServiceOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o GetPrivateServiceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateService) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o GetPrivateServiceOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateService) string { return v.Repo }).(pulumi.StringOutput)
}

func (o GetPrivateServiceOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v GetPrivateService) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o GetPrivateServiceOutput) ServiceDetails() PrivateServiceDetailsPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *PrivateServiceDetails { return v.ServiceDetails }).(PrivateServiceDetailsPtrOutput)
}

func (o GetPrivateServiceOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetPrivateServiceOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o GetPrivateServiceOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateService) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o GetPrivateServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetPrivateServiceOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateService) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A static website service
type GetStaticSite struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                    `pulumi:"repo"`
	SecretFiles    []SecretFile              `pulumi:"secretFiles"`
	ServiceDetails *StaticSiteServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                   `pulumi:"slug"`
	Suspended      *ServiceSuspended         `pulumi:"suspended"`
	Suspenders     []string                  `pulumi:"suspenders"`
	Type           *string                   `pulumi:"type"`
	UpdatedAt      *string                   `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for GetStaticSite
func (val *GetStaticSite) Defaults() *GetStaticSite {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "static_site"
		tmp.Type = &type_
	}
	return &tmp
}

// A static website service
type GetStaticSiteOutput struct{ *pulumi.OutputState }

func (GetStaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStaticSite)(nil)).Elem()
}

func (o GetStaticSiteOutput) ToGetStaticSiteOutput() GetStaticSiteOutput {
	return o
}

func (o GetStaticSiteOutput) ToGetStaticSiteOutputWithContext(ctx context.Context) GetStaticSiteOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o GetStaticSiteOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o GetStaticSiteOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o GetStaticSiteOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o GetStaticSiteOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v GetStaticSite) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o GetStaticSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticSite) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o GetStaticSiteOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o GetStaticSiteOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticSite) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o GetStaticSiteOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticSite) string { return v.Repo }).(pulumi.StringOutput)
}

func (o GetStaticSiteOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v GetStaticSite) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o GetStaticSiteOutput) ServiceDetails() StaticSiteServiceDetailsPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *StaticSiteServiceDetails { return v.ServiceDetails }).(StaticSiteServiceDetailsPtrOutput)
}

func (o GetStaticSiteOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetStaticSiteOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o GetStaticSiteOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStaticSite) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o GetStaticSiteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetStaticSiteOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticSite) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A web service
type GetWebService struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                    `pulumi:"repo"`
	SecretFiles    []SecretFile              `pulumi:"secretFiles"`
	ServiceDetails *WebServiceServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                   `pulumi:"slug"`
	Suspended      *ServiceSuspended         `pulumi:"suspended"`
	Suspenders     []string                  `pulumi:"suspenders"`
	Type           *string                   `pulumi:"type"`
	UpdatedAt      *string                   `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for GetWebService
func (val *GetWebService) Defaults() *GetWebService {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "web_service"
		tmp.Type = &type_
	}
	return &tmp
}

// A web service
type GetWebServiceOutput struct{ *pulumi.OutputState }

func (GetWebServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebService)(nil)).Elem()
}

func (o GetWebServiceOutput) ToGetWebServiceOutput() GetWebServiceOutput {
	return o
}

func (o GetWebServiceOutput) ToGetWebServiceOutputWithContext(ctx context.Context) GetWebServiceOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o GetWebServiceOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v GetWebService) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o GetWebServiceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebService) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o GetWebServiceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebService) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o GetWebServiceOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v GetWebService) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o GetWebServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebService) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o GetWebServiceOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v GetWebService) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o GetWebServiceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebService) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o GetWebServiceOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebService) string { return v.Repo }).(pulumi.StringOutput)
}

func (o GetWebServiceOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v GetWebService) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o GetWebServiceOutput) ServiceDetails() WebServiceServiceDetailsPtrOutput {
	return o.ApplyT(func(v GetWebService) *WebServiceServiceDetails { return v.ServiceDetails }).(WebServiceServiceDetailsPtrOutput)
}

func (o GetWebServiceOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebService) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetWebServiceOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v GetWebService) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o GetWebServiceOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWebService) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o GetWebServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetWebServiceOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebService) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type Job struct {
	CreatedAt    *string `pulumi:"createdAt"`
	FinishedAt   *string `pulumi:"finishedAt"`
	PlanId       string  `pulumi:"planId"`
	StartCommand string  `pulumi:"startCommand"`
	StartedAt    *string `pulumi:"startedAt"`
	Status       *string `pulumi:"status"`
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

func (o JobOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Job) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o JobOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Job) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o JobOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v Job) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o JobOutput) StartCommand() pulumi.StringOutput {
	return o.ApplyT(func(v Job) string { return v.StartCommand }).(pulumi.StringOutput)
}

func (o JobOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Job) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

func (o JobOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Job) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type JobPtrOutput struct{ *pulumi.OutputState }

func (JobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobPtrOutput) ToJobPtrOutput() JobPtrOutput {
	return o
}

func (o JobPtrOutput) ToJobPtrOutputWithContext(ctx context.Context) JobPtrOutput {
	return o
}

func (o JobPtrOutput) Elem() JobOutput {
	return o.ApplyT(func(v *Job) Job {
		if v != nil {
			return *v
		}
		var ret Job
		return ret
	}).(JobOutput)
}

func (o JobPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobPtrOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return &v.PlanId
	}).(pulumi.StringPtrOutput)
}

func (o JobPtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return &v.StartCommand
	}).(pulumi.StringPtrOutput)
}

func (o JobPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ListCustomDomainsResponse struct {
	Cursor       *string       `pulumi:"cursor"`
	CustomDomain *CustomDomain `pulumi:"customDomain"`
}

type ListCustomDomainsResponseOutput struct{ *pulumi.OutputState }

func (ListCustomDomainsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCustomDomainsResponse)(nil)).Elem()
}

func (o ListCustomDomainsResponseOutput) ToListCustomDomainsResponseOutput() ListCustomDomainsResponseOutput {
	return o
}

func (o ListCustomDomainsResponseOutput) ToListCustomDomainsResponseOutputWithContext(ctx context.Context) ListCustomDomainsResponseOutput {
	return o
}

func (o ListCustomDomainsResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListCustomDomainsResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListCustomDomainsResponseOutput) CustomDomain() CustomDomainPtrOutput {
	return o.ApplyT(func(v ListCustomDomainsResponse) *CustomDomain { return v.CustomDomain }).(CustomDomainPtrOutput)
}

type ListCustomDomainsResponseArrayOutput struct{ *pulumi.OutputState }

func (ListCustomDomainsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListCustomDomainsResponse)(nil)).Elem()
}

func (o ListCustomDomainsResponseArrayOutput) ToListCustomDomainsResponseArrayOutput() ListCustomDomainsResponseArrayOutput {
	return o
}

func (o ListCustomDomainsResponseArrayOutput) ToListCustomDomainsResponseArrayOutputWithContext(ctx context.Context) ListCustomDomainsResponseArrayOutput {
	return o
}

func (o ListCustomDomainsResponseArrayOutput) Index(i pulumi.IntInput) ListCustomDomainsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListCustomDomainsResponse {
		return vs[0].([]ListCustomDomainsResponse)[vs[1].(int)]
	}).(ListCustomDomainsResponseOutput)
}

type ListDeploysResponse struct {
	Cursor       *string `pulumi:"cursor"`
	CustomDomain *Deploy `pulumi:"customDomain"`
}

// Defaults sets the appropriate defaults for ListDeploysResponse
func (val *ListDeploysResponse) Defaults() *ListDeploysResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CustomDomain = tmp.CustomDomain.Defaults()

	return &tmp
}

type ListDeploysResponseOutput struct{ *pulumi.OutputState }

func (ListDeploysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDeploysResponse)(nil)).Elem()
}

func (o ListDeploysResponseOutput) ToListDeploysResponseOutput() ListDeploysResponseOutput {
	return o
}

func (o ListDeploysResponseOutput) ToListDeploysResponseOutputWithContext(ctx context.Context) ListDeploysResponseOutput {
	return o
}

func (o ListDeploysResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDeploysResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListDeploysResponseOutput) CustomDomain() DeployPtrOutput {
	return o.ApplyT(func(v ListDeploysResponse) *Deploy { return v.CustomDomain }).(DeployPtrOutput)
}

type ListDeploysResponseArrayOutput struct{ *pulumi.OutputState }

func (ListDeploysResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListDeploysResponse)(nil)).Elem()
}

func (o ListDeploysResponseArrayOutput) ToListDeploysResponseArrayOutput() ListDeploysResponseArrayOutput {
	return o
}

func (o ListDeploysResponseArrayOutput) ToListDeploysResponseArrayOutputWithContext(ctx context.Context) ListDeploysResponseArrayOutput {
	return o
}

func (o ListDeploysResponseArrayOutput) Index(i pulumi.IntInput) ListDeploysResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListDeploysResponse {
		return vs[0].([]ListDeploysResponse)[vs[1].(int)]
	}).(ListDeploysResponseOutput)
}

type ListEnvVarsResponse struct {
	Cursor *string         `pulumi:"cursor"`
	EnvVar *EnvVarKeyValue `pulumi:"envVar"`
}

type ListEnvVarsResponseOutput struct{ *pulumi.OutputState }

func (ListEnvVarsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEnvVarsResponse)(nil)).Elem()
}

func (o ListEnvVarsResponseOutput) ToListEnvVarsResponseOutput() ListEnvVarsResponseOutput {
	return o
}

func (o ListEnvVarsResponseOutput) ToListEnvVarsResponseOutputWithContext(ctx context.Context) ListEnvVarsResponseOutput {
	return o
}

func (o ListEnvVarsResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListEnvVarsResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListEnvVarsResponseOutput) EnvVar() EnvVarKeyValuePtrOutput {
	return o.ApplyT(func(v ListEnvVarsResponse) *EnvVarKeyValue { return v.EnvVar }).(EnvVarKeyValuePtrOutput)
}

type ListEnvVarsResponseArrayOutput struct{ *pulumi.OutputState }

func (ListEnvVarsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListEnvVarsResponse)(nil)).Elem()
}

func (o ListEnvVarsResponseArrayOutput) ToListEnvVarsResponseArrayOutput() ListEnvVarsResponseArrayOutput {
	return o
}

func (o ListEnvVarsResponseArrayOutput) ToListEnvVarsResponseArrayOutputWithContext(ctx context.Context) ListEnvVarsResponseArrayOutput {
	return o
}

func (o ListEnvVarsResponseArrayOutput) Index(i pulumi.IntInput) ListEnvVarsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListEnvVarsResponse {
		return vs[0].([]ListEnvVarsResponse)[vs[1].(int)]
	}).(ListEnvVarsResponseOutput)
}

type ListJobsResponse struct {
	Cursor *string `pulumi:"cursor"`
	Job    *Job    `pulumi:"job"`
}

type ListJobsResponseOutput struct{ *pulumi.OutputState }

func (ListJobsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListJobsResponse)(nil)).Elem()
}

func (o ListJobsResponseOutput) ToListJobsResponseOutput() ListJobsResponseOutput {
	return o
}

func (o ListJobsResponseOutput) ToListJobsResponseOutputWithContext(ctx context.Context) ListJobsResponseOutput {
	return o
}

func (o ListJobsResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListJobsResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListJobsResponseOutput) Job() JobPtrOutput {
	return o.ApplyT(func(v ListJobsResponse) *Job { return v.Job }).(JobPtrOutput)
}

type ListJobsResponseArrayOutput struct{ *pulumi.OutputState }

func (ListJobsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListJobsResponse)(nil)).Elem()
}

func (o ListJobsResponseArrayOutput) ToListJobsResponseArrayOutput() ListJobsResponseArrayOutput {
	return o
}

func (o ListJobsResponseArrayOutput) ToListJobsResponseArrayOutputWithContext(ctx context.Context) ListJobsResponseArrayOutput {
	return o
}

func (o ListJobsResponseArrayOutput) Index(i pulumi.IntInput) ListJobsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListJobsResponse {
		return vs[0].([]ListJobsResponse)[vs[1].(int)]
	}).(ListJobsResponseOutput)
}

type ListServiceHeadersResponse struct {
	Cursor *string `pulumi:"cursor"`
	// A service header object
	Header *ServiceHeader `pulumi:"header"`
}

type ListServiceHeadersResponseOutput struct{ *pulumi.OutputState }

func (ListServiceHeadersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceHeadersResponse)(nil)).Elem()
}

func (o ListServiceHeadersResponseOutput) ToListServiceHeadersResponseOutput() ListServiceHeadersResponseOutput {
	return o
}

func (o ListServiceHeadersResponseOutput) ToListServiceHeadersResponseOutputWithContext(ctx context.Context) ListServiceHeadersResponseOutput {
	return o
}

func (o ListServiceHeadersResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListServiceHeadersResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

// A service header object
func (o ListServiceHeadersResponseOutput) Header() ServiceHeaderPtrOutput {
	return o.ApplyT(func(v ListServiceHeadersResponse) *ServiceHeader { return v.Header }).(ServiceHeaderPtrOutput)
}

type ListServiceHeadersResponseArrayOutput struct{ *pulumi.OutputState }

func (ListServiceHeadersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListServiceHeadersResponse)(nil)).Elem()
}

func (o ListServiceHeadersResponseArrayOutput) ToListServiceHeadersResponseArrayOutput() ListServiceHeadersResponseArrayOutput {
	return o
}

func (o ListServiceHeadersResponseArrayOutput) ToListServiceHeadersResponseArrayOutputWithContext(ctx context.Context) ListServiceHeadersResponseArrayOutput {
	return o
}

func (o ListServiceHeadersResponseArrayOutput) Index(i pulumi.IntInput) ListServiceHeadersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListServiceHeadersResponse {
		return vs[0].([]ListServiceHeadersResponse)[vs[1].(int)]
	}).(ListServiceHeadersResponseOutput)
}

type ListServiceResponse struct {
	Cursor  *string     `pulumi:"cursor"`
	Service interface{} `pulumi:"service"`
}

type ListServiceResponseOutput struct{ *pulumi.OutputState }

func (ListServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceResponse)(nil)).Elem()
}

func (o ListServiceResponseOutput) ToListServiceResponseOutput() ListServiceResponseOutput {
	return o
}

func (o ListServiceResponseOutput) ToListServiceResponseOutputWithContext(ctx context.Context) ListServiceResponseOutput {
	return o
}

func (o ListServiceResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListServiceResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListServiceResponseOutput) Service() pulumi.AnyOutput {
	return o.ApplyT(func(v ListServiceResponse) interface{} { return v.Service }).(pulumi.AnyOutput)
}

type ListServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (ListServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListServiceResponse)(nil)).Elem()
}

func (o ListServiceResponseArrayOutput) ToListServiceResponseArrayOutput() ListServiceResponseArrayOutput {
	return o
}

func (o ListServiceResponseArrayOutput) ToListServiceResponseArrayOutputWithContext(ctx context.Context) ListServiceResponseArrayOutput {
	return o
}

func (o ListServiceResponseArrayOutput) Index(i pulumi.IntInput) ListServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListServiceResponse {
		return vs[0].([]ListServiceResponse)[vs[1].(int)]
	}).(ListServiceResponseOutput)
}

type ListStaticSiteRoutesResponse struct {
	Cursor *string `pulumi:"cursor"`
	// A route object for a static site
	Route *StaticSiteRoute `pulumi:"route"`
}

type ListStaticSiteRoutesResponseOutput struct{ *pulumi.OutputState }

func (ListStaticSiteRoutesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListStaticSiteRoutesResponse)(nil)).Elem()
}

func (o ListStaticSiteRoutesResponseOutput) ToListStaticSiteRoutesResponseOutput() ListStaticSiteRoutesResponseOutput {
	return o
}

func (o ListStaticSiteRoutesResponseOutput) ToListStaticSiteRoutesResponseOutputWithContext(ctx context.Context) ListStaticSiteRoutesResponseOutput {
	return o
}

func (o ListStaticSiteRoutesResponseOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListStaticSiteRoutesResponse) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

// A route object for a static site
func (o ListStaticSiteRoutesResponseOutput) Route() StaticSiteRoutePtrOutput {
	return o.ApplyT(func(v ListStaticSiteRoutesResponse) *StaticSiteRoute { return v.Route }).(StaticSiteRoutePtrOutput)
}

type ListStaticSiteRoutesResponseArrayOutput struct{ *pulumi.OutputState }

func (ListStaticSiteRoutesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListStaticSiteRoutesResponse)(nil)).Elem()
}

func (o ListStaticSiteRoutesResponseArrayOutput) ToListStaticSiteRoutesResponseArrayOutput() ListStaticSiteRoutesResponseArrayOutput {
	return o
}

func (o ListStaticSiteRoutesResponseArrayOutput) ToListStaticSiteRoutesResponseArrayOutputWithContext(ctx context.Context) ListStaticSiteRoutesResponseArrayOutput {
	return o
}

func (o ListStaticSiteRoutesResponseArrayOutput) Index(i pulumi.IntInput) ListStaticSiteRoutesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListStaticSiteRoutesResponse {
		return vs[0].([]ListStaticSiteRoutesResponse)[vs[1].(int)]
	}).(ListStaticSiteRoutesResponseOutput)
}

type NativeEnvironmentDetails struct {
	BuildCommand string `pulumi:"buildCommand"`
	StartCommand string `pulumi:"startCommand"`
}

// NativeEnvironmentDetailsInput is an input type that accepts NativeEnvironmentDetailsArgs and NativeEnvironmentDetailsOutput values.
// You can construct a concrete instance of `NativeEnvironmentDetailsInput` via:
//
//	NativeEnvironmentDetailsArgs{...}
type NativeEnvironmentDetailsInput interface {
	pulumi.Input

	ToNativeEnvironmentDetailsOutput() NativeEnvironmentDetailsOutput
	ToNativeEnvironmentDetailsOutputWithContext(context.Context) NativeEnvironmentDetailsOutput
}

type NativeEnvironmentDetailsArgs struct {
	BuildCommand pulumi.StringInput `pulumi:"buildCommand"`
	StartCommand pulumi.StringInput `pulumi:"startCommand"`
}

func (NativeEnvironmentDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeEnvironmentDetails)(nil)).Elem()
}

func (i NativeEnvironmentDetailsArgs) ToNativeEnvironmentDetailsOutput() NativeEnvironmentDetailsOutput {
	return i.ToNativeEnvironmentDetailsOutputWithContext(context.Background())
}

func (i NativeEnvironmentDetailsArgs) ToNativeEnvironmentDetailsOutputWithContext(ctx context.Context) NativeEnvironmentDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NativeEnvironmentDetailsOutput)
}

func (i NativeEnvironmentDetailsArgs) ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput {
	return i.ToNativeEnvironmentDetailsPtrOutputWithContext(context.Background())
}

func (i NativeEnvironmentDetailsArgs) ToNativeEnvironmentDetailsPtrOutputWithContext(ctx context.Context) NativeEnvironmentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NativeEnvironmentDetailsOutput).ToNativeEnvironmentDetailsPtrOutputWithContext(ctx)
}

// NativeEnvironmentDetailsPtrInput is an input type that accepts NativeEnvironmentDetailsArgs, NativeEnvironmentDetailsPtr and NativeEnvironmentDetailsPtrOutput values.
// You can construct a concrete instance of `NativeEnvironmentDetailsPtrInput` via:
//
//	        NativeEnvironmentDetailsArgs{...}
//
//	or:
//
//	        nil
type NativeEnvironmentDetailsPtrInput interface {
	pulumi.Input

	ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput
	ToNativeEnvironmentDetailsPtrOutputWithContext(context.Context) NativeEnvironmentDetailsPtrOutput
}

type nativeEnvironmentDetailsPtrType NativeEnvironmentDetailsArgs

func NativeEnvironmentDetailsPtr(v *NativeEnvironmentDetailsArgs) NativeEnvironmentDetailsPtrInput {
	return (*nativeEnvironmentDetailsPtrType)(v)
}

func (*nativeEnvironmentDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NativeEnvironmentDetails)(nil)).Elem()
}

func (i *nativeEnvironmentDetailsPtrType) ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput {
	return i.ToNativeEnvironmentDetailsPtrOutputWithContext(context.Background())
}

func (i *nativeEnvironmentDetailsPtrType) ToNativeEnvironmentDetailsPtrOutputWithContext(ctx context.Context) NativeEnvironmentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NativeEnvironmentDetailsPtrOutput)
}

type NativeEnvironmentDetailsOutput struct{ *pulumi.OutputState }

func (NativeEnvironmentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeEnvironmentDetails)(nil)).Elem()
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsOutput() NativeEnvironmentDetailsOutput {
	return o
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsOutputWithContext(ctx context.Context) NativeEnvironmentDetailsOutput {
	return o
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput {
	return o.ToNativeEnvironmentDetailsPtrOutputWithContext(context.Background())
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsPtrOutputWithContext(ctx context.Context) NativeEnvironmentDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NativeEnvironmentDetails) *NativeEnvironmentDetails {
		return &v
	}).(NativeEnvironmentDetailsPtrOutput)
}

func (o NativeEnvironmentDetailsOutput) BuildCommand() pulumi.StringOutput {
	return o.ApplyT(func(v NativeEnvironmentDetails) string { return v.BuildCommand }).(pulumi.StringOutput)
}

func (o NativeEnvironmentDetailsOutput) StartCommand() pulumi.StringOutput {
	return o.ApplyT(func(v NativeEnvironmentDetails) string { return v.StartCommand }).(pulumi.StringOutput)
}

type NativeEnvironmentDetailsPtrOutput struct{ *pulumi.OutputState }

func (NativeEnvironmentDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NativeEnvironmentDetails)(nil)).Elem()
}

func (o NativeEnvironmentDetailsPtrOutput) ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput {
	return o
}

func (o NativeEnvironmentDetailsPtrOutput) ToNativeEnvironmentDetailsPtrOutputWithContext(ctx context.Context) NativeEnvironmentDetailsPtrOutput {
	return o
}

func (o NativeEnvironmentDetailsPtrOutput) Elem() NativeEnvironmentDetailsOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) NativeEnvironmentDetails {
		if v != nil {
			return *v
		}
		var ret NativeEnvironmentDetails
		return ret
	}).(NativeEnvironmentDetailsOutput)
}

func (o NativeEnvironmentDetailsPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

func (o NativeEnvironmentDetailsPtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartCommand
	}).(pulumi.StringPtrOutput)
}

type OpenPorts struct {
	Port     *float64           `pulumi:"port"`
	Protocol *OpenPortsProtocol `pulumi:"protocol"`
}

// OpenPortsInput is an input type that accepts OpenPortsArgs and OpenPortsOutput values.
// You can construct a concrete instance of `OpenPortsInput` via:
//
//	OpenPortsArgs{...}
type OpenPortsInput interface {
	pulumi.Input

	ToOpenPortsOutput() OpenPortsOutput
	ToOpenPortsOutputWithContext(context.Context) OpenPortsOutput
}

type OpenPortsArgs struct {
	Port     pulumi.Float64PtrInput    `pulumi:"port"`
	Protocol OpenPortsProtocolPtrInput `pulumi:"protocol"`
}

func (OpenPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenPorts)(nil)).Elem()
}

func (i OpenPortsArgs) ToOpenPortsOutput() OpenPortsOutput {
	return i.ToOpenPortsOutputWithContext(context.Background())
}

func (i OpenPortsArgs) ToOpenPortsOutputWithContext(ctx context.Context) OpenPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenPortsOutput)
}

// OpenPortsArrayInput is an input type that accepts OpenPortsArray and OpenPortsArrayOutput values.
// You can construct a concrete instance of `OpenPortsArrayInput` via:
//
//	OpenPortsArray{ OpenPortsArgs{...} }
type OpenPortsArrayInput interface {
	pulumi.Input

	ToOpenPortsArrayOutput() OpenPortsArrayOutput
	ToOpenPortsArrayOutputWithContext(context.Context) OpenPortsArrayOutput
}

type OpenPortsArray []OpenPortsInput

func (OpenPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenPorts)(nil)).Elem()
}

func (i OpenPortsArray) ToOpenPortsArrayOutput() OpenPortsArrayOutput {
	return i.ToOpenPortsArrayOutputWithContext(context.Background())
}

func (i OpenPortsArray) ToOpenPortsArrayOutputWithContext(ctx context.Context) OpenPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenPortsArrayOutput)
}

type OpenPortsOutput struct{ *pulumi.OutputState }

func (OpenPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenPorts)(nil)).Elem()
}

func (o OpenPortsOutput) ToOpenPortsOutput() OpenPortsOutput {
	return o
}

func (o OpenPortsOutput) ToOpenPortsOutputWithContext(ctx context.Context) OpenPortsOutput {
	return o
}

func (o OpenPortsOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OpenPorts) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

func (o OpenPortsOutput) Protocol() OpenPortsProtocolPtrOutput {
	return o.ApplyT(func(v OpenPorts) *OpenPortsProtocol { return v.Protocol }).(OpenPortsProtocolPtrOutput)
}

type OpenPortsArrayOutput struct{ *pulumi.OutputState }

func (OpenPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenPorts)(nil)).Elem()
}

func (o OpenPortsArrayOutput) ToOpenPortsArrayOutput() OpenPortsArrayOutput {
	return o
}

func (o OpenPortsArrayOutput) ToOpenPortsArrayOutputWithContext(ctx context.Context) OpenPortsArrayOutput {
	return o
}

func (o OpenPortsArrayOutput) Index(i pulumi.IntInput) OpenPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenPorts {
		return vs[0].([]OpenPorts)[vs[1].(int)]
	}).(OpenPortsOutput)
}

// A private service
type PrivateService struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                 `pulumi:"repo"`
	SecretFiles    []SecretFile           `pulumi:"secretFiles"`
	ServiceDetails *PrivateServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                `pulumi:"slug"`
	Suspended      *ServiceSuspended      `pulumi:"suspended"`
	Suspenders     []string               `pulumi:"suspenders"`
	Type           *string                `pulumi:"type"`
	UpdatedAt      *string                `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for PrivateService
func (val *PrivateService) Defaults() *PrivateService {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "private_service"
		tmp.Type = &type_
	}
	return &tmp
}

// A private service
type PrivateServiceOutput struct{ *pulumi.OutputState }

func (PrivateServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateService)(nil)).Elem()
}

func (o PrivateServiceOutput) ToPrivateServiceOutput() PrivateServiceOutput {
	return o
}

func (o PrivateServiceOutput) ToPrivateServiceOutputWithContext(ctx context.Context) PrivateServiceOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o PrivateServiceOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v PrivateService) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o PrivateServiceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateService) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o PrivateServiceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateService) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o PrivateServiceOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v PrivateService) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o PrivateServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateService) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o PrivateServiceOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v PrivateService) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o PrivateServiceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateService) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o PrivateServiceOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateService) string { return v.Repo }).(pulumi.StringOutput)
}

func (o PrivateServiceOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v PrivateService) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o PrivateServiceOutput) ServiceDetails() PrivateServiceDetailsPtrOutput {
	return o.ApplyT(func(v PrivateService) *PrivateServiceDetails { return v.ServiceDetails }).(PrivateServiceDetailsPtrOutput)
}

func (o PrivateServiceOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateService) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o PrivateServiceOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v PrivateService) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o PrivateServiceOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateService) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o PrivateServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o PrivateServiceOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateService) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type PrivateServicePtrOutput struct{ *pulumi.OutputState }

func (PrivateServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateService)(nil)).Elem()
}

func (o PrivateServicePtrOutput) ToPrivateServicePtrOutput() PrivateServicePtrOutput {
	return o
}

func (o PrivateServicePtrOutput) ToPrivateServicePtrOutputWithContext(ctx context.Context) PrivateServicePtrOutput {
	return o
}

func (o PrivateServicePtrOutput) Elem() PrivateServiceOutput {
	return o.ApplyT(func(v *PrivateService) PrivateService {
		if v != nil {
			return *v
		}
		var ret PrivateService
		return ret
	}).(PrivateServiceOutput)
}

// Whether to auto deploy the service or not upon git push.
func (o PrivateServicePtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *PrivateService) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o PrivateServicePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServicePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServicePtrOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v *PrivateService) []EnvVarKeyValue {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(EnvVarKeyValueArrayOutput)
}

func (o PrivateServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification setting for this service upon deployment failure.
func (o PrivateServicePtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *PrivateService) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o PrivateServicePtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o PrivateServicePtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServicePtrOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *PrivateService) []SecretFile {
		if v == nil {
			return nil
		}
		return v.SecretFiles
	}).(SecretFileArrayOutput)
}

func (o PrivateServicePtrOutput) ServiceDetails() PrivateServiceDetailsPtrOutput {
	return o.ApplyT(func(v *PrivateService) *PrivateServiceDetails {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(PrivateServiceDetailsPtrOutput)
}

func (o PrivateServicePtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServicePtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *PrivateService) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o PrivateServicePtrOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateService) []string {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(pulumi.StringArrayOutput)
}

func (o PrivateServicePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServicePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateService) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type PrivateServiceDetails struct {
	Disk                       *Disk                                            `pulumi:"disk"`
	Env                        PrivateServiceDetailsEnv                         `pulumi:"env"`
	EnvSpecificDetails         interface{}                                      `pulumi:"envSpecificDetails"`
	NumInstances               *float64                                         `pulumi:"numInstances"`
	OpenPorts                  []OpenPorts                                      `pulumi:"openPorts"`
	ParentServer               *PrivateServiceDetailsParentServerProperties     `pulumi:"parentServer"`
	Plan                       *PrivateServiceDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled *PrivateServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     *PrivateServiceDetailsRegion                     `pulumi:"region"`
	Url                        *string                                          `pulumi:"url"`
}

// Defaults sets the appropriate defaults for PrivateServiceDetails
func (val *PrivateServiceDetails) Defaults() *PrivateServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Disk = tmp.Disk.Defaults()

	if tmp.NumInstances == nil {
		numInstances_ := 1.0
		tmp.NumInstances = &numInstances_
	}
	if tmp.Plan == nil {
		plan_ := PrivateServiceDetailsPlan("starter")
		tmp.Plan = &plan_
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		pullRequestPreviewsEnabled_ := PrivateServiceDetailsPullRequestPreviewsEnabled("no")
		tmp.PullRequestPreviewsEnabled = &pullRequestPreviewsEnabled_
	}
	if tmp.Region == nil {
		region_ := PrivateServiceDetailsRegion("oregon")
		tmp.Region = &region_
	}
	return &tmp
}

// PrivateServiceDetailsInput is an input type that accepts PrivateServiceDetailsArgs and PrivateServiceDetailsOutput values.
// You can construct a concrete instance of `PrivateServiceDetailsInput` via:
//
//	PrivateServiceDetailsArgs{...}
type PrivateServiceDetailsInput interface {
	pulumi.Input

	ToPrivateServiceDetailsOutput() PrivateServiceDetailsOutput
	ToPrivateServiceDetailsOutputWithContext(context.Context) PrivateServiceDetailsOutput
}

type PrivateServiceDetailsArgs struct {
	Disk                       DiskPtrInput                                            `pulumi:"disk"`
	Env                        PrivateServiceDetailsEnvInput                           `pulumi:"env"`
	EnvSpecificDetails         pulumi.Input                                            `pulumi:"envSpecificDetails"`
	NumInstances               pulumi.Float64PtrInput                                  `pulumi:"numInstances"`
	OpenPorts                  OpenPortsArrayInput                                     `pulumi:"openPorts"`
	ParentServer               PrivateServiceDetailsParentServerPropertiesPtrInput     `pulumi:"parentServer"`
	Plan                       PrivateServiceDetailsPlanPtrInput                       `pulumi:"plan"`
	PullRequestPreviewsEnabled PrivateServiceDetailsPullRequestPreviewsEnabledPtrInput `pulumi:"pullRequestPreviewsEnabled"`
	Region                     PrivateServiceDetailsRegionPtrInput                     `pulumi:"region"`
	Url                        pulumi.StringPtrInput                                   `pulumi:"url"`
}

// Defaults sets the appropriate defaults for PrivateServiceDetailsArgs
func (val *PrivateServiceDetailsArgs) Defaults() *PrivateServiceDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.NumInstances == nil {
		tmp.NumInstances = pulumi.Float64Ptr(1.0)
	}
	if tmp.Plan == nil {
		tmp.Plan = PrivateServiceDetailsPlan("starter")
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		tmp.PullRequestPreviewsEnabled = PrivateServiceDetailsPullRequestPreviewsEnabled("no")
	}
	if tmp.Region == nil {
		tmp.Region = PrivateServiceDetailsRegion("oregon")
	}
	return &tmp
}
func (PrivateServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateServiceDetails)(nil)).Elem()
}

func (i PrivateServiceDetailsArgs) ToPrivateServiceDetailsOutput() PrivateServiceDetailsOutput {
	return i.ToPrivateServiceDetailsOutputWithContext(context.Background())
}

func (i PrivateServiceDetailsArgs) ToPrivateServiceDetailsOutputWithContext(ctx context.Context) PrivateServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsOutput)
}

func (i PrivateServiceDetailsArgs) ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput {
	return i.ToPrivateServiceDetailsPtrOutputWithContext(context.Background())
}

func (i PrivateServiceDetailsArgs) ToPrivateServiceDetailsPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsOutput).ToPrivateServiceDetailsPtrOutputWithContext(ctx)
}

// PrivateServiceDetailsPtrInput is an input type that accepts PrivateServiceDetailsArgs, PrivateServiceDetailsPtr and PrivateServiceDetailsPtrOutput values.
// You can construct a concrete instance of `PrivateServiceDetailsPtrInput` via:
//
//	        PrivateServiceDetailsArgs{...}
//
//	or:
//
//	        nil
type PrivateServiceDetailsPtrInput interface {
	pulumi.Input

	ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput
	ToPrivateServiceDetailsPtrOutputWithContext(context.Context) PrivateServiceDetailsPtrOutput
}

type privateServiceDetailsPtrType PrivateServiceDetailsArgs

func PrivateServiceDetailsPtr(v *PrivateServiceDetailsArgs) PrivateServiceDetailsPtrInput {
	return (*privateServiceDetailsPtrType)(v)
}

func (*privateServiceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateServiceDetails)(nil)).Elem()
}

func (i *privateServiceDetailsPtrType) ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput {
	return i.ToPrivateServiceDetailsPtrOutputWithContext(context.Background())
}

func (i *privateServiceDetailsPtrType) ToPrivateServiceDetailsPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsPtrOutput)
}

type PrivateServiceDetailsOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateServiceDetails)(nil)).Elem()
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsOutput() PrivateServiceDetailsOutput {
	return o
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsOutputWithContext(ctx context.Context) PrivateServiceDetailsOutput {
	return o
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput {
	return o.ToPrivateServiceDetailsPtrOutputWithContext(context.Background())
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateServiceDetails) *PrivateServiceDetails {
		return &v
	}).(PrivateServiceDetailsPtrOutput)
}

func (o PrivateServiceDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

func (o PrivateServiceDetailsOutput) Env() PrivateServiceDetailsEnvOutput {
	return o.ApplyT(func(v PrivateServiceDetails) PrivateServiceDetailsEnv { return v.Env }).(PrivateServiceDetailsEnvOutput)
}

func (o PrivateServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PrivateServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o PrivateServiceDetailsOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *float64 { return v.NumInstances }).(pulumi.Float64PtrOutput)
}

func (o PrivateServiceDetailsOutput) OpenPorts() OpenPortsArrayOutput {
	return o.ApplyT(func(v PrivateServiceDetails) []OpenPorts { return v.OpenPorts }).(OpenPortsArrayOutput)
}

func (o PrivateServiceDetailsOutput) ParentServer() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *PrivateServiceDetailsParentServerProperties { return v.ParentServer }).(PrivateServiceDetailsParentServerPropertiesPtrOutput)
}

func (o PrivateServiceDetailsOutput) Plan() PrivateServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *PrivateServiceDetailsPlan { return v.Plan }).(PrivateServiceDetailsPlanPtrOutput)
}

func (o PrivateServiceDetailsOutput) PullRequestPreviewsEnabled() PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *PrivateServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o PrivateServiceDetailsOutput) Region() PrivateServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *PrivateServiceDetailsRegion { return v.Region }).(PrivateServiceDetailsRegionPtrOutput)
}

func (o PrivateServiceDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type PrivateServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateServiceDetails)(nil)).Elem()
}

func (o PrivateServiceDetailsPtrOutput) ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput {
	return o
}

func (o PrivateServiceDetailsPtrOutput) ToPrivateServiceDetailsPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsPtrOutput {
	return o
}

func (o PrivateServiceDetailsPtrOutput) Elem() PrivateServiceDetailsOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) PrivateServiceDetails {
		if v != nil {
			return *v
		}
		var ret PrivateServiceDetails
		return ret
	}).(PrivateServiceDetailsOutput)
}

func (o PrivateServiceDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Env() PrivateServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(PrivateServiceDetailsEnvPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o PrivateServiceDetailsPtrOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *float64 {
		if v == nil {
			return nil
		}
		return v.NumInstances
	}).(pulumi.Float64PtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) OpenPorts() OpenPortsArrayOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) []OpenPorts {
		if v == nil {
			return nil
		}
		return v.OpenPorts
	}).(OpenPortsArrayOutput)
}

func (o PrivateServiceDetailsPtrOutput) ParentServer() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsParentServerProperties {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(PrivateServiceDetailsParentServerPropertiesPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Plan() PrivateServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(PrivateServiceDetailsPlanPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) PullRequestPreviewsEnabled() PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return v.PullRequestPreviewsEnabled
	}).(PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Region() PrivateServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(PrivateServiceDetailsRegionPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type PrivateServiceDetailsParentServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// PrivateServiceDetailsParentServerPropertiesInput is an input type that accepts PrivateServiceDetailsParentServerPropertiesArgs and PrivateServiceDetailsParentServerPropertiesOutput values.
// You can construct a concrete instance of `PrivateServiceDetailsParentServerPropertiesInput` via:
//
//	PrivateServiceDetailsParentServerPropertiesArgs{...}
type PrivateServiceDetailsParentServerPropertiesInput interface {
	pulumi.Input

	ToPrivateServiceDetailsParentServerPropertiesOutput() PrivateServiceDetailsParentServerPropertiesOutput
	ToPrivateServiceDetailsParentServerPropertiesOutputWithContext(context.Context) PrivateServiceDetailsParentServerPropertiesOutput
}

type PrivateServiceDetailsParentServerPropertiesArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PrivateServiceDetailsParentServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i PrivateServiceDetailsParentServerPropertiesArgs) ToPrivateServiceDetailsParentServerPropertiesOutput() PrivateServiceDetailsParentServerPropertiesOutput {
	return i.ToPrivateServiceDetailsParentServerPropertiesOutputWithContext(context.Background())
}

func (i PrivateServiceDetailsParentServerPropertiesArgs) ToPrivateServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsParentServerPropertiesOutput)
}

func (i PrivateServiceDetailsParentServerPropertiesArgs) ToPrivateServiceDetailsParentServerPropertiesPtrOutput() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateServiceDetailsParentServerPropertiesArgs) ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsParentServerPropertiesOutput).ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx)
}

// PrivateServiceDetailsParentServerPropertiesPtrInput is an input type that accepts PrivateServiceDetailsParentServerPropertiesArgs, PrivateServiceDetailsParentServerPropertiesPtr and PrivateServiceDetailsParentServerPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateServiceDetailsParentServerPropertiesPtrInput` via:
//
//	        PrivateServiceDetailsParentServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type PrivateServiceDetailsParentServerPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateServiceDetailsParentServerPropertiesPtrOutput() PrivateServiceDetailsParentServerPropertiesPtrOutput
	ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Context) PrivateServiceDetailsParentServerPropertiesPtrOutput
}

type privateServiceDetailsParentServerPropertiesPtrType PrivateServiceDetailsParentServerPropertiesArgs

func PrivateServiceDetailsParentServerPropertiesPtr(v *PrivateServiceDetailsParentServerPropertiesArgs) PrivateServiceDetailsParentServerPropertiesPtrInput {
	return (*privateServiceDetailsParentServerPropertiesPtrType)(v)
}

func (*privateServiceDetailsParentServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i *privateServiceDetailsParentServerPropertiesPtrType) ToPrivateServiceDetailsParentServerPropertiesPtrOutput() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateServiceDetailsParentServerPropertiesPtrType) ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateServiceDetailsParentServerPropertiesPtrOutput)
}

type PrivateServiceDetailsParentServerPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsParentServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) ToPrivateServiceDetailsParentServerPropertiesOutput() PrivateServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) ToPrivateServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) ToPrivateServiceDetailsParentServerPropertiesPtrOutput() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o.ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateServiceDetailsParentServerProperties) *PrivateServiceDetailsParentServerProperties {
		return &v
	}).(PrivateServiceDetailsParentServerPropertiesPtrOutput)
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetailsParentServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PrivateServiceDetailsParentServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetailsParentServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PrivateServiceDetailsParentServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsParentServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o PrivateServiceDetailsParentServerPropertiesPtrOutput) ToPrivateServiceDetailsParentServerPropertiesPtrOutput() PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o PrivateServiceDetailsParentServerPropertiesPtrOutput) ToPrivateServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o PrivateServiceDetailsParentServerPropertiesPtrOutput) Elem() PrivateServiceDetailsParentServerPropertiesOutput {
	return o.ApplyT(func(v *PrivateServiceDetailsParentServerProperties) PrivateServiceDetailsParentServerProperties {
		if v != nil {
			return *v
		}
		var ret PrivateServiceDetailsParentServerProperties
		return ret
	}).(PrivateServiceDetailsParentServerPropertiesOutput)
}

func (o PrivateServiceDetailsParentServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServiceDetailsParentServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type SecretFile struct {
	Contents string `pulumi:"contents"`
	Name     string `pulumi:"name"`
}

// SecretFileInput is an input type that accepts SecretFileArgs and SecretFileOutput values.
// You can construct a concrete instance of `SecretFileInput` via:
//
//	SecretFileArgs{...}
type SecretFileInput interface {
	pulumi.Input

	ToSecretFileOutput() SecretFileOutput
	ToSecretFileOutputWithContext(context.Context) SecretFileOutput
}

type SecretFileArgs struct {
	Contents pulumi.StringInput `pulumi:"contents"`
	Name     pulumi.StringInput `pulumi:"name"`
}

func (SecretFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretFile)(nil)).Elem()
}

func (i SecretFileArgs) ToSecretFileOutput() SecretFileOutput {
	return i.ToSecretFileOutputWithContext(context.Background())
}

func (i SecretFileArgs) ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFileOutput)
}

// SecretFileArrayInput is an input type that accepts SecretFileArray and SecretFileArrayOutput values.
// You can construct a concrete instance of `SecretFileArrayInput` via:
//
//	SecretFileArray{ SecretFileArgs{...} }
type SecretFileArrayInput interface {
	pulumi.Input

	ToSecretFileArrayOutput() SecretFileArrayOutput
	ToSecretFileArrayOutputWithContext(context.Context) SecretFileArrayOutput
}

type SecretFileArray []SecretFileInput

func (SecretFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretFile)(nil)).Elem()
}

func (i SecretFileArray) ToSecretFileArrayOutput() SecretFileArrayOutput {
	return i.ToSecretFileArrayOutputWithContext(context.Background())
}

func (i SecretFileArray) ToSecretFileArrayOutputWithContext(ctx context.Context) SecretFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFileArrayOutput)
}

type SecretFileOutput struct{ *pulumi.OutputState }

func (SecretFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretFile)(nil)).Elem()
}

func (o SecretFileOutput) ToSecretFileOutput() SecretFileOutput {
	return o
}

func (o SecretFileOutput) ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput {
	return o
}

func (o SecretFileOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFile) string { return v.Contents }).(pulumi.StringOutput)
}

func (o SecretFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretFile) string { return v.Name }).(pulumi.StringOutput)
}

type SecretFileArrayOutput struct{ *pulumi.OutputState }

func (SecretFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretFile)(nil)).Elem()
}

func (o SecretFileArrayOutput) ToSecretFileArrayOutput() SecretFileArrayOutput {
	return o
}

func (o SecretFileArrayOutput) ToSecretFileArrayOutputWithContext(ctx context.Context) SecretFileArrayOutput {
	return o
}

func (o SecretFileArrayOutput) Index(i pulumi.IntInput) SecretFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretFile {
		return vs[0].([]SecretFile)[vs[1].(int)]
	}).(SecretFileOutput)
}

type ServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type ServerPropertiesOutput struct{ *pulumi.OutputState }

func (ServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProperties)(nil)).Elem()
}

func (o ServerPropertiesOutput) ToServerPropertiesOutput() ServerPropertiesOutput {
	return o
}

func (o ServerPropertiesOutput) ToServerPropertiesOutputWithContext(ctx context.Context) ServerPropertiesOutput {
	return o
}

func (o ServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A service header object
type ServiceHeader struct {
	Name  string `pulumi:"name"`
	Path  string `pulumi:"path"`
	Value string `pulumi:"value"`
}

// ServiceHeaderInput is an input type that accepts ServiceHeaderArgs and ServiceHeaderOutput values.
// You can construct a concrete instance of `ServiceHeaderInput` via:
//
//	ServiceHeaderArgs{...}
type ServiceHeaderInput interface {
	pulumi.Input

	ToServiceHeaderOutput() ServiceHeaderOutput
	ToServiceHeaderOutputWithContext(context.Context) ServiceHeaderOutput
}

// A service header object
type ServiceHeaderArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Path  pulumi.StringInput `pulumi:"path"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHeader)(nil)).Elem()
}

func (i ServiceHeaderArgs) ToServiceHeaderOutput() ServiceHeaderOutput {
	return i.ToServiceHeaderOutputWithContext(context.Background())
}

func (i ServiceHeaderArgs) ToServiceHeaderOutputWithContext(ctx context.Context) ServiceHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHeaderOutput)
}

// ServiceHeaderArrayInput is an input type that accepts ServiceHeaderArray and ServiceHeaderArrayOutput values.
// You can construct a concrete instance of `ServiceHeaderArrayInput` via:
//
//	ServiceHeaderArray{ ServiceHeaderArgs{...} }
type ServiceHeaderArrayInput interface {
	pulumi.Input

	ToServiceHeaderArrayOutput() ServiceHeaderArrayOutput
	ToServiceHeaderArrayOutputWithContext(context.Context) ServiceHeaderArrayOutput
}

type ServiceHeaderArray []ServiceHeaderInput

func (ServiceHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHeader)(nil)).Elem()
}

func (i ServiceHeaderArray) ToServiceHeaderArrayOutput() ServiceHeaderArrayOutput {
	return i.ToServiceHeaderArrayOutputWithContext(context.Background())
}

func (i ServiceHeaderArray) ToServiceHeaderArrayOutputWithContext(ctx context.Context) ServiceHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHeaderArrayOutput)
}

// A service header object
type ServiceHeaderOutput struct{ *pulumi.OutputState }

func (ServiceHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHeader)(nil)).Elem()
}

func (o ServiceHeaderOutput) ToServiceHeaderOutput() ServiceHeaderOutput {
	return o
}

func (o ServiceHeaderOutput) ToServiceHeaderOutputWithContext(ctx context.Context) ServiceHeaderOutput {
	return o
}

func (o ServiceHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceHeaderOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHeader) string { return v.Path }).(pulumi.StringOutput)
}

func (o ServiceHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceHeaderPtrOutput struct{ *pulumi.OutputState }

func (ServiceHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHeader)(nil)).Elem()
}

func (o ServiceHeaderPtrOutput) ToServiceHeaderPtrOutput() ServiceHeaderPtrOutput {
	return o
}

func (o ServiceHeaderPtrOutput) ToServiceHeaderPtrOutputWithContext(ctx context.Context) ServiceHeaderPtrOutput {
	return o
}

func (o ServiceHeaderPtrOutput) Elem() ServiceHeaderOutput {
	return o.ApplyT(func(v *ServiceHeader) ServiceHeader {
		if v != nil {
			return *v
		}
		var ret ServiceHeader
		return ret
	}).(ServiceHeaderOutput)
}

func (o ServiceHeaderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServiceHeaderPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ServiceHeaderPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceHeaderArrayOutput struct{ *pulumi.OutputState }

func (ServiceHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHeader)(nil)).Elem()
}

func (o ServiceHeaderArrayOutput) ToServiceHeaderArrayOutput() ServiceHeaderArrayOutput {
	return o
}

func (o ServiceHeaderArrayOutput) ToServiceHeaderArrayOutputWithContext(ctx context.Context) ServiceHeaderArrayOutput {
	return o
}

func (o ServiceHeaderArrayOutput) Index(i pulumi.IntInput) ServiceHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHeader {
		return vs[0].([]ServiceHeader)[vs[1].(int)]
	}).(ServiceHeaderOutput)
}

// A static website service
type StaticSite struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                    `pulumi:"repo"`
	SecretFiles    []SecretFile              `pulumi:"secretFiles"`
	ServiceDetails *StaticSiteServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                   `pulumi:"slug"`
	Suspended      *ServiceSuspended         `pulumi:"suspended"`
	Suspenders     []string                  `pulumi:"suspenders"`
	Type           *string                   `pulumi:"type"`
	UpdatedAt      *string                   `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for StaticSite
func (val *StaticSite) Defaults() *StaticSite {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "static_site"
		tmp.Type = &type_
	}
	return &tmp
}

// A static website service
type StaticSiteOutput struct{ *pulumi.OutputState }

func (StaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSite)(nil)).Elem()
}

func (o StaticSiteOutput) ToStaticSiteOutput() StaticSiteOutput {
	return o
}

func (o StaticSiteOutput) ToStaticSiteOutputWithContext(ctx context.Context) StaticSiteOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o StaticSiteOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v StaticSite) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o StaticSiteOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSite) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o StaticSiteOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSite) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o StaticSiteOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v StaticSite) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o StaticSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSite) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o StaticSiteOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v StaticSite) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o StaticSiteOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSite) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o StaticSiteOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSite) string { return v.Repo }).(pulumi.StringOutput)
}

func (o StaticSiteOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v StaticSite) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o StaticSiteOutput) ServiceDetails() StaticSiteServiceDetailsPtrOutput {
	return o.ApplyT(func(v StaticSite) *StaticSiteServiceDetails { return v.ServiceDetails }).(StaticSiteServiceDetailsPtrOutput)
}

func (o StaticSiteOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSite) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o StaticSiteOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v StaticSite) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o StaticSiteOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticSite) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o StaticSiteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSite) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o StaticSiteOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSite) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type StaticSitePtrOutput struct{ *pulumi.OutputState }

func (StaticSitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSite)(nil)).Elem()
}

func (o StaticSitePtrOutput) ToStaticSitePtrOutput() StaticSitePtrOutput {
	return o
}

func (o StaticSitePtrOutput) ToStaticSitePtrOutputWithContext(ctx context.Context) StaticSitePtrOutput {
	return o
}

func (o StaticSitePtrOutput) Elem() StaticSiteOutput {
	return o.ApplyT(func(v *StaticSite) StaticSite {
		if v != nil {
			return *v
		}
		var ret StaticSite
		return ret
	}).(StaticSiteOutput)
}

// Whether to auto deploy the service or not upon git push.
func (o StaticSitePtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *StaticSite) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o StaticSitePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o StaticSitePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o StaticSitePtrOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v *StaticSite) []EnvVarKeyValue {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(EnvVarKeyValueArrayOutput)
}

func (o StaticSitePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification setting for this service upon deployment failure.
func (o StaticSitePtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *StaticSite) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o StaticSitePtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o StaticSitePtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o StaticSitePtrOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *StaticSite) []SecretFile {
		if v == nil {
			return nil
		}
		return v.SecretFiles
	}).(SecretFileArrayOutput)
}

func (o StaticSitePtrOutput) ServiceDetails() StaticSiteServiceDetailsPtrOutput {
	return o.ApplyT(func(v *StaticSite) *StaticSiteServiceDetails {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(StaticSiteServiceDetailsPtrOutput)
}

func (o StaticSitePtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o StaticSitePtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *StaticSite) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o StaticSitePtrOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StaticSite) []string {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(pulumi.StringArrayOutput)
}

func (o StaticSitePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o StaticSitePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// A route object for a static site
type StaticSiteRoute struct {
	Destination string              `pulumi:"destination"`
	Source      string              `pulumi:"source"`
	Type        StaticSiteRouteType `pulumi:"type"`
}

// StaticSiteRouteInput is an input type that accepts StaticSiteRouteArgs and StaticSiteRouteOutput values.
// You can construct a concrete instance of `StaticSiteRouteInput` via:
//
//	StaticSiteRouteArgs{...}
type StaticSiteRouteInput interface {
	pulumi.Input

	ToStaticSiteRouteOutput() StaticSiteRouteOutput
	ToStaticSiteRouteOutputWithContext(context.Context) StaticSiteRouteOutput
}

// A route object for a static site
type StaticSiteRouteArgs struct {
	Destination pulumi.StringInput       `pulumi:"destination"`
	Source      pulumi.StringInput       `pulumi:"source"`
	Type        StaticSiteRouteTypeInput `pulumi:"type"`
}

func (StaticSiteRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteRoute)(nil)).Elem()
}

func (i StaticSiteRouteArgs) ToStaticSiteRouteOutput() StaticSiteRouteOutput {
	return i.ToStaticSiteRouteOutputWithContext(context.Background())
}

func (i StaticSiteRouteArgs) ToStaticSiteRouteOutputWithContext(ctx context.Context) StaticSiteRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteRouteOutput)
}

// StaticSiteRouteArrayInput is an input type that accepts StaticSiteRouteArray and StaticSiteRouteArrayOutput values.
// You can construct a concrete instance of `StaticSiteRouteArrayInput` via:
//
//	StaticSiteRouteArray{ StaticSiteRouteArgs{...} }
type StaticSiteRouteArrayInput interface {
	pulumi.Input

	ToStaticSiteRouteArrayOutput() StaticSiteRouteArrayOutput
	ToStaticSiteRouteArrayOutputWithContext(context.Context) StaticSiteRouteArrayOutput
}

type StaticSiteRouteArray []StaticSiteRouteInput

func (StaticSiteRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteRoute)(nil)).Elem()
}

func (i StaticSiteRouteArray) ToStaticSiteRouteArrayOutput() StaticSiteRouteArrayOutput {
	return i.ToStaticSiteRouteArrayOutputWithContext(context.Background())
}

func (i StaticSiteRouteArray) ToStaticSiteRouteArrayOutputWithContext(ctx context.Context) StaticSiteRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteRouteArrayOutput)
}

// A route object for a static site
type StaticSiteRouteOutput struct{ *pulumi.OutputState }

func (StaticSiteRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteRoute)(nil)).Elem()
}

func (o StaticSiteRouteOutput) ToStaticSiteRouteOutput() StaticSiteRouteOutput {
	return o
}

func (o StaticSiteRouteOutput) ToStaticSiteRouteOutputWithContext(ctx context.Context) StaticSiteRouteOutput {
	return o
}

func (o StaticSiteRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteRoute) string { return v.Destination }).(pulumi.StringOutput)
}

func (o StaticSiteRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteRoute) string { return v.Source }).(pulumi.StringOutput)
}

func (o StaticSiteRouteOutput) Type() StaticSiteRouteTypeOutput {
	return o.ApplyT(func(v StaticSiteRoute) StaticSiteRouteType { return v.Type }).(StaticSiteRouteTypeOutput)
}

type StaticSiteRoutePtrOutput struct{ *pulumi.OutputState }

func (StaticSiteRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteRoute)(nil)).Elem()
}

func (o StaticSiteRoutePtrOutput) ToStaticSiteRoutePtrOutput() StaticSiteRoutePtrOutput {
	return o
}

func (o StaticSiteRoutePtrOutput) ToStaticSiteRoutePtrOutputWithContext(ctx context.Context) StaticSiteRoutePtrOutput {
	return o
}

func (o StaticSiteRoutePtrOutput) Elem() StaticSiteRouteOutput {
	return o.ApplyT(func(v *StaticSiteRoute) StaticSiteRoute {
		if v != nil {
			return *v
		}
		var ret StaticSiteRoute
		return ret
	}).(StaticSiteRouteOutput)
}

func (o StaticSiteRoutePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteRoute) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteRoutePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteRoute) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteRoutePtrOutput) Type() StaticSiteRouteTypePtrOutput {
	return o.ApplyT(func(v *StaticSiteRoute) *StaticSiteRouteType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(StaticSiteRouteTypePtrOutput)
}

type StaticSiteRouteArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteRoute)(nil)).Elem()
}

func (o StaticSiteRouteArrayOutput) ToStaticSiteRouteArrayOutput() StaticSiteRouteArrayOutput {
	return o
}

func (o StaticSiteRouteArrayOutput) ToStaticSiteRouteArrayOutputWithContext(ctx context.Context) StaticSiteRouteArrayOutput {
	return o
}

func (o StaticSiteRouteArrayOutput) Index(i pulumi.IntInput) StaticSiteRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSiteRoute {
		return vs[0].([]StaticSiteRoute)[vs[1].(int)]
	}).(StaticSiteRouteOutput)
}

type StaticSiteServiceDetails struct {
	BuildCommand               *string                                             `pulumi:"buildCommand"`
	Headers                    []ServiceHeader                                     `pulumi:"headers"`
	ParentServer               *StaticSiteServiceDetailsParentServerProperties     `pulumi:"parentServer"`
	PublishPath                *string                                             `pulumi:"publishPath"`
	PullRequestPreviewsEnabled *StaticSiteServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Routes                     []StaticSiteRoute                                   `pulumi:"routes"`
	// The HTTPS service URL. A subdomain of onrender.com, by default.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for StaticSiteServiceDetails
func (val *StaticSiteServiceDetails) Defaults() *StaticSiteServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PublishPath == nil {
		publishPath_ := "public"
		tmp.PublishPath = &publishPath_
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		pullRequestPreviewsEnabled_ := StaticSiteServiceDetailsPullRequestPreviewsEnabled("no")
		tmp.PullRequestPreviewsEnabled = &pullRequestPreviewsEnabled_
	}
	return &tmp
}

// StaticSiteServiceDetailsInput is an input type that accepts StaticSiteServiceDetailsArgs and StaticSiteServiceDetailsOutput values.
// You can construct a concrete instance of `StaticSiteServiceDetailsInput` via:
//
//	StaticSiteServiceDetailsArgs{...}
type StaticSiteServiceDetailsInput interface {
	pulumi.Input

	ToStaticSiteServiceDetailsOutput() StaticSiteServiceDetailsOutput
	ToStaticSiteServiceDetailsOutputWithContext(context.Context) StaticSiteServiceDetailsOutput
}

type StaticSiteServiceDetailsArgs struct {
	BuildCommand               pulumi.StringPtrInput                                      `pulumi:"buildCommand"`
	Headers                    ServiceHeaderArrayInput                                    `pulumi:"headers"`
	ParentServer               StaticSiteServiceDetailsParentServerPropertiesPtrInput     `pulumi:"parentServer"`
	PublishPath                pulumi.StringPtrInput                                      `pulumi:"publishPath"`
	PullRequestPreviewsEnabled StaticSiteServiceDetailsPullRequestPreviewsEnabledPtrInput `pulumi:"pullRequestPreviewsEnabled"`
	Routes                     StaticSiteRouteArrayInput                                  `pulumi:"routes"`
	// The HTTPS service URL. A subdomain of onrender.com, by default.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for StaticSiteServiceDetailsArgs
func (val *StaticSiteServiceDetailsArgs) Defaults() *StaticSiteServiceDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PublishPath == nil {
		tmp.PublishPath = pulumi.StringPtr("public")
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		tmp.PullRequestPreviewsEnabled = StaticSiteServiceDetailsPullRequestPreviewsEnabled("no")
	}
	return &tmp
}
func (StaticSiteServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteServiceDetails)(nil)).Elem()
}

func (i StaticSiteServiceDetailsArgs) ToStaticSiteServiceDetailsOutput() StaticSiteServiceDetailsOutput {
	return i.ToStaticSiteServiceDetailsOutputWithContext(context.Background())
}

func (i StaticSiteServiceDetailsArgs) ToStaticSiteServiceDetailsOutputWithContext(ctx context.Context) StaticSiteServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsOutput)
}

func (i StaticSiteServiceDetailsArgs) ToStaticSiteServiceDetailsPtrOutput() StaticSiteServiceDetailsPtrOutput {
	return i.ToStaticSiteServiceDetailsPtrOutputWithContext(context.Background())
}

func (i StaticSiteServiceDetailsArgs) ToStaticSiteServiceDetailsPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsOutput).ToStaticSiteServiceDetailsPtrOutputWithContext(ctx)
}

// StaticSiteServiceDetailsPtrInput is an input type that accepts StaticSiteServiceDetailsArgs, StaticSiteServiceDetailsPtr and StaticSiteServiceDetailsPtrOutput values.
// You can construct a concrete instance of `StaticSiteServiceDetailsPtrInput` via:
//
//	        StaticSiteServiceDetailsArgs{...}
//
//	or:
//
//	        nil
type StaticSiteServiceDetailsPtrInput interface {
	pulumi.Input

	ToStaticSiteServiceDetailsPtrOutput() StaticSiteServiceDetailsPtrOutput
	ToStaticSiteServiceDetailsPtrOutputWithContext(context.Context) StaticSiteServiceDetailsPtrOutput
}

type staticSiteServiceDetailsPtrType StaticSiteServiceDetailsArgs

func StaticSiteServiceDetailsPtr(v *StaticSiteServiceDetailsArgs) StaticSiteServiceDetailsPtrInput {
	return (*staticSiteServiceDetailsPtrType)(v)
}

func (*staticSiteServiceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteServiceDetails)(nil)).Elem()
}

func (i *staticSiteServiceDetailsPtrType) ToStaticSiteServiceDetailsPtrOutput() StaticSiteServiceDetailsPtrOutput {
	return i.ToStaticSiteServiceDetailsPtrOutputWithContext(context.Background())
}

func (i *staticSiteServiceDetailsPtrType) ToStaticSiteServiceDetailsPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsPtrOutput)
}

type StaticSiteServiceDetailsOutput struct{ *pulumi.OutputState }

func (StaticSiteServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteServiceDetails)(nil)).Elem()
}

func (o StaticSiteServiceDetailsOutput) ToStaticSiteServiceDetailsOutput() StaticSiteServiceDetailsOutput {
	return o
}

func (o StaticSiteServiceDetailsOutput) ToStaticSiteServiceDetailsOutputWithContext(ctx context.Context) StaticSiteServiceDetailsOutput {
	return o
}

func (o StaticSiteServiceDetailsOutput) ToStaticSiteServiceDetailsPtrOutput() StaticSiteServiceDetailsPtrOutput {
	return o.ToStaticSiteServiceDetailsPtrOutputWithContext(context.Background())
}

func (o StaticSiteServiceDetailsOutput) ToStaticSiteServiceDetailsPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticSiteServiceDetails) *StaticSiteServiceDetails {
		return &v
	}).(StaticSiteServiceDetailsPtrOutput)
}

func (o StaticSiteServiceDetailsOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsOutput) Headers() ServiceHeaderArrayOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) []ServiceHeader { return v.Headers }).(ServiceHeaderArrayOutput)
}

func (o StaticSiteServiceDetailsOutput) ParentServer() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) *StaticSiteServiceDetailsParentServerProperties {
		return v.ParentServer
	}).(StaticSiteServiceDetailsParentServerPropertiesPtrOutput)
}

func (o StaticSiteServiceDetailsOutput) PublishPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) *string { return v.PublishPath }).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsOutput) PullRequestPreviewsEnabled() StaticSiteServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) *StaticSiteServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(StaticSiteServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o StaticSiteServiceDetailsOutput) Routes() StaticSiteRouteArrayOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) []StaticSiteRoute { return v.Routes }).(StaticSiteRouteArrayOutput)
}

// The HTTPS service URL. A subdomain of onrender.com, by default.
func (o StaticSiteServiceDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type StaticSiteServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteServiceDetails)(nil)).Elem()
}

func (o StaticSiteServiceDetailsPtrOutput) ToStaticSiteServiceDetailsPtrOutput() StaticSiteServiceDetailsPtrOutput {
	return o
}

func (o StaticSiteServiceDetailsPtrOutput) ToStaticSiteServiceDetailsPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsPtrOutput {
	return o
}

func (o StaticSiteServiceDetailsPtrOutput) Elem() StaticSiteServiceDetailsOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) StaticSiteServiceDetails {
		if v != nil {
			return *v
		}
		var ret StaticSiteServiceDetails
		return ret
	}).(StaticSiteServiceDetailsOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) Headers() ServiceHeaderArrayOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) []ServiceHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ServiceHeaderArrayOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) ParentServer() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) *StaticSiteServiceDetailsParentServerProperties {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(StaticSiteServiceDetailsParentServerPropertiesPtrOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) PublishPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.PublishPath
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) PullRequestPreviewsEnabled() StaticSiteServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) *StaticSiteServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return v.PullRequestPreviewsEnabled
	}).(StaticSiteServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o StaticSiteServiceDetailsPtrOutput) Routes() StaticSiteRouteArrayOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) []StaticSiteRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(StaticSiteRouteArrayOutput)
}

// The HTTPS service URL. A subdomain of onrender.com, by default.
func (o StaticSiteServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type StaticSiteServiceDetailsParentServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// StaticSiteServiceDetailsParentServerPropertiesInput is an input type that accepts StaticSiteServiceDetailsParentServerPropertiesArgs and StaticSiteServiceDetailsParentServerPropertiesOutput values.
// You can construct a concrete instance of `StaticSiteServiceDetailsParentServerPropertiesInput` via:
//
//	StaticSiteServiceDetailsParentServerPropertiesArgs{...}
type StaticSiteServiceDetailsParentServerPropertiesInput interface {
	pulumi.Input

	ToStaticSiteServiceDetailsParentServerPropertiesOutput() StaticSiteServiceDetailsParentServerPropertiesOutput
	ToStaticSiteServiceDetailsParentServerPropertiesOutputWithContext(context.Context) StaticSiteServiceDetailsParentServerPropertiesOutput
}

type StaticSiteServiceDetailsParentServerPropertiesArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StaticSiteServiceDetailsParentServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i StaticSiteServiceDetailsParentServerPropertiesArgs) ToStaticSiteServiceDetailsParentServerPropertiesOutput() StaticSiteServiceDetailsParentServerPropertiesOutput {
	return i.ToStaticSiteServiceDetailsParentServerPropertiesOutputWithContext(context.Background())
}

func (i StaticSiteServiceDetailsParentServerPropertiesArgs) ToStaticSiteServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsParentServerPropertiesOutput)
}

func (i StaticSiteServiceDetailsParentServerPropertiesArgs) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutput() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i StaticSiteServiceDetailsParentServerPropertiesArgs) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsParentServerPropertiesOutput).ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx)
}

// StaticSiteServiceDetailsParentServerPropertiesPtrInput is an input type that accepts StaticSiteServiceDetailsParentServerPropertiesArgs, StaticSiteServiceDetailsParentServerPropertiesPtr and StaticSiteServiceDetailsParentServerPropertiesPtrOutput values.
// You can construct a concrete instance of `StaticSiteServiceDetailsParentServerPropertiesPtrInput` via:
//
//	        StaticSiteServiceDetailsParentServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type StaticSiteServiceDetailsParentServerPropertiesPtrInput interface {
	pulumi.Input

	ToStaticSiteServiceDetailsParentServerPropertiesPtrOutput() StaticSiteServiceDetailsParentServerPropertiesPtrOutput
	ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Context) StaticSiteServiceDetailsParentServerPropertiesPtrOutput
}

type staticSiteServiceDetailsParentServerPropertiesPtrType StaticSiteServiceDetailsParentServerPropertiesArgs

func StaticSiteServiceDetailsParentServerPropertiesPtr(v *StaticSiteServiceDetailsParentServerPropertiesArgs) StaticSiteServiceDetailsParentServerPropertiesPtrInput {
	return (*staticSiteServiceDetailsParentServerPropertiesPtrType)(v)
}

func (*staticSiteServiceDetailsParentServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i *staticSiteServiceDetailsParentServerPropertiesPtrType) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutput() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *staticSiteServiceDetailsParentServerPropertiesPtrType) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteServiceDetailsParentServerPropertiesPtrOutput)
}

type StaticSiteServiceDetailsParentServerPropertiesOutput struct{ *pulumi.OutputState }

func (StaticSiteServiceDetailsParentServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) ToStaticSiteServiceDetailsParentServerPropertiesOutput() StaticSiteServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) ToStaticSiteServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutput() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o.ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticSiteServiceDetailsParentServerProperties) *StaticSiteServiceDetailsParentServerProperties {
		return &v
	}).(StaticSiteServiceDetailsParentServerPropertiesPtrOutput)
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetailsParentServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsParentServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteServiceDetailsParentServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StaticSiteServiceDetailsParentServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteServiceDetailsParentServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o StaticSiteServiceDetailsParentServerPropertiesPtrOutput) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutput() StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o StaticSiteServiceDetailsParentServerPropertiesPtrOutput) ToStaticSiteServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o StaticSiteServiceDetailsParentServerPropertiesPtrOutput) Elem() StaticSiteServiceDetailsParentServerPropertiesOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetailsParentServerProperties) StaticSiteServiceDetailsParentServerProperties {
		if v != nil {
			return *v
		}
		var ret StaticSiteServiceDetailsParentServerProperties
		return ret
	}).(StaticSiteServiceDetailsParentServerPropertiesOutput)
}

func (o StaticSiteServiceDetailsParentServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteServiceDetailsParentServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A web service
type WebService struct {
	// Whether to auto deploy the service or not upon git push.
	AutoDeploy *ServiceAutoDeploy `pulumi:"autoDeploy"`
	// If left empty, this will fall back to the default branch of the repository.
	Branch    *string          `pulumi:"branch"`
	CreatedAt *string          `pulumi:"createdAt"`
	EnvVars   []EnvVarKeyValue `pulumi:"envVars"`
	Name      string           `pulumi:"name"`
	// The notification setting for this service upon deployment failure.
	NotifyOnFail *ServiceNotifyOnFail `pulumi:"notifyOnFail"`
	// The id of the owner (user/team).
	OwnerId string `pulumi:"ownerId"`
	// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           string                    `pulumi:"repo"`
	SecretFiles    []SecretFile              `pulumi:"secretFiles"`
	ServiceDetails *WebServiceServiceDetails `pulumi:"serviceDetails"`
	Slug           *string                   `pulumi:"slug"`
	Suspended      *ServiceSuspended         `pulumi:"suspended"`
	Suspenders     []string                  `pulumi:"suspenders"`
	Type           *string                   `pulumi:"type"`
	UpdatedAt      *string                   `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for WebService
func (val *WebService) Defaults() *WebService {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoDeploy == nil {
		autoDeploy_ := ServiceAutoDeploy("no")
		tmp.AutoDeploy = &autoDeploy_
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "web_service"
		tmp.Type = &type_
	}
	return &tmp
}

// A web service
type WebServiceOutput struct{ *pulumi.OutputState }

func (WebServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebService)(nil)).Elem()
}

func (o WebServiceOutput) ToWebServiceOutput() WebServiceOutput {
	return o
}

func (o WebServiceOutput) ToWebServiceOutputWithContext(ctx context.Context) WebServiceOutput {
	return o
}

// Whether to auto deploy the service or not upon git push.
func (o WebServiceOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v WebService) *ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o WebServiceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebService) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o WebServiceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebService) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o WebServiceOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v WebService) []EnvVarKeyValue { return v.EnvVars }).(EnvVarKeyValueArrayOutput)
}

func (o WebServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebService) string { return v.Name }).(pulumi.StringOutput)
}

// The notification setting for this service upon deployment failure.
func (o WebServiceOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v WebService) *ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o WebServiceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v WebService) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o WebServiceOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v WebService) string { return v.Repo }).(pulumi.StringOutput)
}

func (o WebServiceOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v WebService) []SecretFile { return v.SecretFiles }).(SecretFileArrayOutput)
}

func (o WebServiceOutput) ServiceDetails() WebServiceServiceDetailsPtrOutput {
	return o.ApplyT(func(v WebService) *WebServiceServiceDetails { return v.ServiceDetails }).(WebServiceServiceDetailsPtrOutput)
}

func (o WebServiceOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebService) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o WebServiceOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v WebService) *ServiceSuspended { return v.Suspended }).(ServiceSuspendedPtrOutput)
}

func (o WebServiceOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebService) []string { return v.Suspenders }).(pulumi.StringArrayOutput)
}

func (o WebServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o WebServiceOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebService) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type WebServicePtrOutput struct{ *pulumi.OutputState }

func (WebServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebService)(nil)).Elem()
}

func (o WebServicePtrOutput) ToWebServicePtrOutput() WebServicePtrOutput {
	return o
}

func (o WebServicePtrOutput) ToWebServicePtrOutputWithContext(ctx context.Context) WebServicePtrOutput {
	return o
}

func (o WebServicePtrOutput) Elem() WebServiceOutput {
	return o.ApplyT(func(v *WebService) WebService {
		if v != nil {
			return *v
		}
		var ret WebService
		return ret
	}).(WebServiceOutput)
}

// Whether to auto deploy the service or not upon git push.
func (o WebServicePtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *WebService) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

// If left empty, this will fall back to the default branch of the repository.
func (o WebServicePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o WebServicePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o WebServicePtrOutput) EnvVars() EnvVarKeyValueArrayOutput {
	return o.ApplyT(func(v *WebService) []EnvVarKeyValue {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(EnvVarKeyValueArrayOutput)
}

func (o WebServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification setting for this service upon deployment failure.
func (o WebServicePtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *WebService) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

// The id of the owner (user/team).
func (o WebServicePtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
func (o WebServicePtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o WebServicePtrOutput) SecretFiles() SecretFileArrayOutput {
	return o.ApplyT(func(v *WebService) []SecretFile {
		if v == nil {
			return nil
		}
		return v.SecretFiles
	}).(SecretFileArrayOutput)
}

func (o WebServicePtrOutput) ServiceDetails() WebServiceServiceDetailsPtrOutput {
	return o.ApplyT(func(v *WebService) *WebServiceServiceDetails {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(WebServiceServiceDetailsPtrOutput)
}

func (o WebServicePtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o WebServicePtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *WebService) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o WebServicePtrOutput) Suspenders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebService) []string {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(pulumi.StringArrayOutput)
}

func (o WebServicePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o WebServicePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebService) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type WebServiceServiceDetails struct {
	Disk                       *Disk                                               `pulumi:"disk"`
	Env                        WebServiceServiceDetailsEnv                         `pulumi:"env"`
	EnvSpecificDetails         interface{}                                         `pulumi:"envSpecificDetails"`
	HealthCheckPath            *string                                             `pulumi:"healthCheckPath"`
	NumInstances               *float64                                            `pulumi:"numInstances"`
	OpenPorts                  []OpenPorts                                         `pulumi:"openPorts"`
	ParentServer               *WebServiceServiceDetailsParentServerProperties     `pulumi:"parentServer"`
	Plan                       *WebServiceServiceDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled *WebServiceServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     *WebServiceServiceDetailsRegion                     `pulumi:"region"`
	Url                        *string                                             `pulumi:"url"`
}

// Defaults sets the appropriate defaults for WebServiceServiceDetails
func (val *WebServiceServiceDetails) Defaults() *WebServiceServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Disk = tmp.Disk.Defaults()

	if tmp.NumInstances == nil {
		numInstances_ := 1.0
		tmp.NumInstances = &numInstances_
	}
	if tmp.Plan == nil {
		plan_ := WebServiceServiceDetailsPlan("starter")
		tmp.Plan = &plan_
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		pullRequestPreviewsEnabled_ := WebServiceServiceDetailsPullRequestPreviewsEnabled("no")
		tmp.PullRequestPreviewsEnabled = &pullRequestPreviewsEnabled_
	}
	if tmp.Region == nil {
		region_ := WebServiceServiceDetailsRegion("oregon")
		tmp.Region = &region_
	}
	return &tmp
}

// WebServiceServiceDetailsInput is an input type that accepts WebServiceServiceDetailsArgs and WebServiceServiceDetailsOutput values.
// You can construct a concrete instance of `WebServiceServiceDetailsInput` via:
//
//	WebServiceServiceDetailsArgs{...}
type WebServiceServiceDetailsInput interface {
	pulumi.Input

	ToWebServiceServiceDetailsOutput() WebServiceServiceDetailsOutput
	ToWebServiceServiceDetailsOutputWithContext(context.Context) WebServiceServiceDetailsOutput
}

type WebServiceServiceDetailsArgs struct {
	Disk                       DiskPtrInput                                               `pulumi:"disk"`
	Env                        WebServiceServiceDetailsEnvInput                           `pulumi:"env"`
	EnvSpecificDetails         pulumi.Input                                               `pulumi:"envSpecificDetails"`
	HealthCheckPath            pulumi.StringPtrInput                                      `pulumi:"healthCheckPath"`
	NumInstances               pulumi.Float64PtrInput                                     `pulumi:"numInstances"`
	OpenPorts                  OpenPortsArrayInput                                        `pulumi:"openPorts"`
	ParentServer               WebServiceServiceDetailsParentServerPropertiesPtrInput     `pulumi:"parentServer"`
	Plan                       WebServiceServiceDetailsPlanPtrInput                       `pulumi:"plan"`
	PullRequestPreviewsEnabled WebServiceServiceDetailsPullRequestPreviewsEnabledPtrInput `pulumi:"pullRequestPreviewsEnabled"`
	Region                     WebServiceServiceDetailsRegionPtrInput                     `pulumi:"region"`
	Url                        pulumi.StringPtrInput                                      `pulumi:"url"`
}

// Defaults sets the appropriate defaults for WebServiceServiceDetailsArgs
func (val *WebServiceServiceDetailsArgs) Defaults() *WebServiceServiceDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.NumInstances == nil {
		tmp.NumInstances = pulumi.Float64Ptr(1.0)
	}
	if tmp.Plan == nil {
		tmp.Plan = WebServiceServiceDetailsPlan("starter")
	}
	if tmp.PullRequestPreviewsEnabled == nil {
		tmp.PullRequestPreviewsEnabled = WebServiceServiceDetailsPullRequestPreviewsEnabled("no")
	}
	if tmp.Region == nil {
		tmp.Region = WebServiceServiceDetailsRegion("oregon")
	}
	return &tmp
}
func (WebServiceServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceServiceDetails)(nil)).Elem()
}

func (i WebServiceServiceDetailsArgs) ToWebServiceServiceDetailsOutput() WebServiceServiceDetailsOutput {
	return i.ToWebServiceServiceDetailsOutputWithContext(context.Background())
}

func (i WebServiceServiceDetailsArgs) ToWebServiceServiceDetailsOutputWithContext(ctx context.Context) WebServiceServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsOutput)
}

func (i WebServiceServiceDetailsArgs) ToWebServiceServiceDetailsPtrOutput() WebServiceServiceDetailsPtrOutput {
	return i.ToWebServiceServiceDetailsPtrOutputWithContext(context.Background())
}

func (i WebServiceServiceDetailsArgs) ToWebServiceServiceDetailsPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsOutput).ToWebServiceServiceDetailsPtrOutputWithContext(ctx)
}

// WebServiceServiceDetailsPtrInput is an input type that accepts WebServiceServiceDetailsArgs, WebServiceServiceDetailsPtr and WebServiceServiceDetailsPtrOutput values.
// You can construct a concrete instance of `WebServiceServiceDetailsPtrInput` via:
//
//	        WebServiceServiceDetailsArgs{...}
//
//	or:
//
//	        nil
type WebServiceServiceDetailsPtrInput interface {
	pulumi.Input

	ToWebServiceServiceDetailsPtrOutput() WebServiceServiceDetailsPtrOutput
	ToWebServiceServiceDetailsPtrOutputWithContext(context.Context) WebServiceServiceDetailsPtrOutput
}

type webServiceServiceDetailsPtrType WebServiceServiceDetailsArgs

func WebServiceServiceDetailsPtr(v *WebServiceServiceDetailsArgs) WebServiceServiceDetailsPtrInput {
	return (*webServiceServiceDetailsPtrType)(v)
}

func (*webServiceServiceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceServiceDetails)(nil)).Elem()
}

func (i *webServiceServiceDetailsPtrType) ToWebServiceServiceDetailsPtrOutput() WebServiceServiceDetailsPtrOutput {
	return i.ToWebServiceServiceDetailsPtrOutputWithContext(context.Background())
}

func (i *webServiceServiceDetailsPtrType) ToWebServiceServiceDetailsPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsPtrOutput)
}

type WebServiceServiceDetailsOutput struct{ *pulumi.OutputState }

func (WebServiceServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceServiceDetails)(nil)).Elem()
}

func (o WebServiceServiceDetailsOutput) ToWebServiceServiceDetailsOutput() WebServiceServiceDetailsOutput {
	return o
}

func (o WebServiceServiceDetailsOutput) ToWebServiceServiceDetailsOutputWithContext(ctx context.Context) WebServiceServiceDetailsOutput {
	return o
}

func (o WebServiceServiceDetailsOutput) ToWebServiceServiceDetailsPtrOutput() WebServiceServiceDetailsPtrOutput {
	return o.ToWebServiceServiceDetailsPtrOutputWithContext(context.Background())
}

func (o WebServiceServiceDetailsOutput) ToWebServiceServiceDetailsPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebServiceServiceDetails) *WebServiceServiceDetails {
		return &v
	}).(WebServiceServiceDetailsPtrOutput)
}

func (o WebServiceServiceDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

func (o WebServiceServiceDetailsOutput) Env() WebServiceServiceDetailsEnvOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) WebServiceServiceDetailsEnv { return v.Env }).(WebServiceServiceDetailsEnvOutput)
}

func (o WebServiceServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o WebServiceServiceDetailsOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

func (o WebServiceServiceDetailsOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *float64 { return v.NumInstances }).(pulumi.Float64PtrOutput)
}

func (o WebServiceServiceDetailsOutput) OpenPorts() OpenPortsArrayOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) []OpenPorts { return v.OpenPorts }).(OpenPortsArrayOutput)
}

func (o WebServiceServiceDetailsOutput) ParentServer() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *WebServiceServiceDetailsParentServerProperties {
		return v.ParentServer
	}).(WebServiceServiceDetailsParentServerPropertiesPtrOutput)
}

func (o WebServiceServiceDetailsOutput) Plan() WebServiceServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *WebServiceServiceDetailsPlan { return v.Plan }).(WebServiceServiceDetailsPlanPtrOutput)
}

func (o WebServiceServiceDetailsOutput) PullRequestPreviewsEnabled() WebServiceServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *WebServiceServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(WebServiceServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o WebServiceServiceDetailsOutput) Region() WebServiceServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *WebServiceServiceDetailsRegion { return v.Region }).(WebServiceServiceDetailsRegionPtrOutput)
}

func (o WebServiceServiceDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebServiceServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (WebServiceServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceServiceDetails)(nil)).Elem()
}

func (o WebServiceServiceDetailsPtrOutput) ToWebServiceServiceDetailsPtrOutput() WebServiceServiceDetailsPtrOutput {
	return o
}

func (o WebServiceServiceDetailsPtrOutput) ToWebServiceServiceDetailsPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsPtrOutput {
	return o
}

func (o WebServiceServiceDetailsPtrOutput) Elem() WebServiceServiceDetailsOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) WebServiceServiceDetails {
		if v != nil {
			return *v
		}
		var ret WebServiceServiceDetails
		return ret
	}).(WebServiceServiceDetailsOutput)
}

func (o WebServiceServiceDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) Env() WebServiceServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *WebServiceServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(WebServiceServiceDetailsEnvPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o WebServiceServiceDetailsPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) NumInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *float64 {
		if v == nil {
			return nil
		}
		return v.NumInstances
	}).(pulumi.Float64PtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) OpenPorts() OpenPortsArrayOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) []OpenPorts {
		if v == nil {
			return nil
		}
		return v.OpenPorts
	}).(OpenPortsArrayOutput)
}

func (o WebServiceServiceDetailsPtrOutput) ParentServer() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *WebServiceServiceDetailsParentServerProperties {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(WebServiceServiceDetailsParentServerPropertiesPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) Plan() WebServiceServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *WebServiceServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(WebServiceServiceDetailsPlanPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) PullRequestPreviewsEnabled() WebServiceServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *WebServiceServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return v.PullRequestPreviewsEnabled
	}).(WebServiceServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) Region() WebServiceServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *WebServiceServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(WebServiceServiceDetailsRegionPtrOutput)
}

func (o WebServiceServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type WebServiceServiceDetailsParentServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// WebServiceServiceDetailsParentServerPropertiesInput is an input type that accepts WebServiceServiceDetailsParentServerPropertiesArgs and WebServiceServiceDetailsParentServerPropertiesOutput values.
// You can construct a concrete instance of `WebServiceServiceDetailsParentServerPropertiesInput` via:
//
//	WebServiceServiceDetailsParentServerPropertiesArgs{...}
type WebServiceServiceDetailsParentServerPropertiesInput interface {
	pulumi.Input

	ToWebServiceServiceDetailsParentServerPropertiesOutput() WebServiceServiceDetailsParentServerPropertiesOutput
	ToWebServiceServiceDetailsParentServerPropertiesOutputWithContext(context.Context) WebServiceServiceDetailsParentServerPropertiesOutput
}

type WebServiceServiceDetailsParentServerPropertiesArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebServiceServiceDetailsParentServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i WebServiceServiceDetailsParentServerPropertiesArgs) ToWebServiceServiceDetailsParentServerPropertiesOutput() WebServiceServiceDetailsParentServerPropertiesOutput {
	return i.ToWebServiceServiceDetailsParentServerPropertiesOutputWithContext(context.Background())
}

func (i WebServiceServiceDetailsParentServerPropertiesArgs) ToWebServiceServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsParentServerPropertiesOutput)
}

func (i WebServiceServiceDetailsParentServerPropertiesArgs) ToWebServiceServiceDetailsParentServerPropertiesPtrOutput() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i WebServiceServiceDetailsParentServerPropertiesArgs) ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsParentServerPropertiesOutput).ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx)
}

// WebServiceServiceDetailsParentServerPropertiesPtrInput is an input type that accepts WebServiceServiceDetailsParentServerPropertiesArgs, WebServiceServiceDetailsParentServerPropertiesPtr and WebServiceServiceDetailsParentServerPropertiesPtrOutput values.
// You can construct a concrete instance of `WebServiceServiceDetailsParentServerPropertiesPtrInput` via:
//
//	        WebServiceServiceDetailsParentServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type WebServiceServiceDetailsParentServerPropertiesPtrInput interface {
	pulumi.Input

	ToWebServiceServiceDetailsParentServerPropertiesPtrOutput() WebServiceServiceDetailsParentServerPropertiesPtrOutput
	ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Context) WebServiceServiceDetailsParentServerPropertiesPtrOutput
}

type webServiceServiceDetailsParentServerPropertiesPtrType WebServiceServiceDetailsParentServerPropertiesArgs

func WebServiceServiceDetailsParentServerPropertiesPtr(v *WebServiceServiceDetailsParentServerPropertiesArgs) WebServiceServiceDetailsParentServerPropertiesPtrInput {
	return (*webServiceServiceDetailsParentServerPropertiesPtrType)(v)
}

func (*webServiceServiceDetailsParentServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceServiceDetailsParentServerProperties)(nil)).Elem()
}

func (i *webServiceServiceDetailsParentServerPropertiesPtrType) ToWebServiceServiceDetailsParentServerPropertiesPtrOutput() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return i.ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *webServiceServiceDetailsParentServerPropertiesPtrType) ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceServiceDetailsParentServerPropertiesPtrOutput)
}

type WebServiceServiceDetailsParentServerPropertiesOutput struct{ *pulumi.OutputState }

func (WebServiceServiceDetailsParentServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) ToWebServiceServiceDetailsParentServerPropertiesOutput() WebServiceServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) ToWebServiceServiceDetailsParentServerPropertiesOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesOutput {
	return o
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) ToWebServiceServiceDetailsParentServerPropertiesPtrOutput() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o.ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(context.Background())
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebServiceServiceDetailsParentServerProperties) *WebServiceServiceDetailsParentServerProperties {
		return &v
	}).(WebServiceServiceDetailsParentServerPropertiesPtrOutput)
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetailsParentServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o WebServiceServiceDetailsParentServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceServiceDetailsParentServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebServiceServiceDetailsParentServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebServiceServiceDetailsParentServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceServiceDetailsParentServerProperties)(nil)).Elem()
}

func (o WebServiceServiceDetailsParentServerPropertiesPtrOutput) ToWebServiceServiceDetailsParentServerPropertiesPtrOutput() WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o WebServiceServiceDetailsParentServerPropertiesPtrOutput) ToWebServiceServiceDetailsParentServerPropertiesPtrOutputWithContext(ctx context.Context) WebServiceServiceDetailsParentServerPropertiesPtrOutput {
	return o
}

func (o WebServiceServiceDetailsParentServerPropertiesPtrOutput) Elem() WebServiceServiceDetailsParentServerPropertiesOutput {
	return o.ApplyT(func(v *WebServiceServiceDetailsParentServerProperties) WebServiceServiceDetailsParentServerProperties {
		if v != nil {
			return *v
		}
		var ret WebServiceServiceDetailsParentServerProperties
		return ret
	}).(WebServiceServiceDetailsParentServerPropertiesOutput)
}

func (o WebServiceServiceDetailsParentServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o WebServiceServiceDetailsParentServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceServiceDetailsParentServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerServiceDetailsInput)(nil)).Elem(), BackgroundWorkerServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerServiceDetailsPtrInput)(nil)).Elem(), BackgroundWorkerServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerServiceDetailsParentServerPropertiesInput)(nil)).Elem(), BackgroundWorkerServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerServiceDetailsParentServerPropertiesPtrInput)(nil)).Elem(), BackgroundWorkerServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CronJobServiceDetailsInput)(nil)).Elem(), CronJobServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CronJobServiceDetailsPtrInput)(nil)).Elem(), CronJobServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInput)(nil)).Elem(), DiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskPtrInput)(nil)).Elem(), DiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerDetailsInput)(nil)).Elem(), DockerDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerDetailsPtrInput)(nil)).Elem(), DockerDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarKeyValueInput)(nil)).Elem(), EnvVarKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarKeyValueArrayInput)(nil)).Elem(), EnvVarKeyValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NativeEnvironmentDetailsInput)(nil)).Elem(), NativeEnvironmentDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NativeEnvironmentDetailsPtrInput)(nil)).Elem(), NativeEnvironmentDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenPortsInput)(nil)).Elem(), OpenPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenPortsArrayInput)(nil)).Elem(), OpenPortsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateServiceDetailsInput)(nil)).Elem(), PrivateServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateServiceDetailsPtrInput)(nil)).Elem(), PrivateServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateServiceDetailsParentServerPropertiesInput)(nil)).Elem(), PrivateServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateServiceDetailsParentServerPropertiesPtrInput)(nil)).Elem(), PrivateServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFileInput)(nil)).Elem(), SecretFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFileArrayInput)(nil)).Elem(), SecretFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHeaderInput)(nil)).Elem(), ServiceHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHeaderArrayInput)(nil)).Elem(), ServiceHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteRouteInput)(nil)).Elem(), StaticSiteRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteRouteArrayInput)(nil)).Elem(), StaticSiteRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteServiceDetailsInput)(nil)).Elem(), StaticSiteServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteServiceDetailsPtrInput)(nil)).Elem(), StaticSiteServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteServiceDetailsParentServerPropertiesInput)(nil)).Elem(), StaticSiteServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteServiceDetailsParentServerPropertiesPtrInput)(nil)).Elem(), StaticSiteServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebServiceServiceDetailsInput)(nil)).Elem(), WebServiceServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebServiceServiceDetailsPtrInput)(nil)).Elem(), WebServiceServiceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebServiceServiceDetailsParentServerPropertiesInput)(nil)).Elem(), WebServiceServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebServiceServiceDetailsParentServerPropertiesPtrInput)(nil)).Elem(), WebServiceServiceDetailsParentServerPropertiesArgs{})
	pulumi.RegisterOutputType(BackgroundWorkerOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerPtrOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerServiceDetailsOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerServiceDetailsParentServerPropertiesOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerServiceDetailsParentServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CommitOutput{})
	pulumi.RegisterOutputType(CommitPtrOutput{})
	pulumi.RegisterOutputType(CronJobOutput{})
	pulumi.RegisterOutputType(CronJobPtrOutput{})
	pulumi.RegisterOutputType(CronJobServiceDetailsOutput{})
	pulumi.RegisterOutputType(CronJobServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainServerPropertiesOutput{})
	pulumi.RegisterOutputType(CustomDomainServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeployOutput{})
	pulumi.RegisterOutputType(DeployPtrOutput{})
	pulumi.RegisterOutputType(DiskOutput{})
	pulumi.RegisterOutputType(DiskPtrOutput{})
	pulumi.RegisterOutputType(DockerDetailsOutput{})
	pulumi.RegisterOutputType(DockerDetailsPtrOutput{})
	pulumi.RegisterOutputType(EnvVarKeyValueOutput{})
	pulumi.RegisterOutputType(EnvVarKeyValuePtrOutput{})
	pulumi.RegisterOutputType(EnvVarKeyValueArrayOutput{})
	pulumi.RegisterOutputType(GetBackgroundWorkerOutput{})
	pulumi.RegisterOutputType(GetCronJobOutput{})
	pulumi.RegisterOutputType(GetPrivateServiceOutput{})
	pulumi.RegisterOutputType(GetStaticSiteOutput{})
	pulumi.RegisterOutputType(GetWebServiceOutput{})
	pulumi.RegisterOutputType(JobOutput{})
	pulumi.RegisterOutputType(JobPtrOutput{})
	pulumi.RegisterOutputType(ListCustomDomainsResponseOutput{})
	pulumi.RegisterOutputType(ListCustomDomainsResponseArrayOutput{})
	pulumi.RegisterOutputType(ListDeploysResponseOutput{})
	pulumi.RegisterOutputType(ListDeploysResponseArrayOutput{})
	pulumi.RegisterOutputType(ListEnvVarsResponseOutput{})
	pulumi.RegisterOutputType(ListEnvVarsResponseArrayOutput{})
	pulumi.RegisterOutputType(ListJobsResponseOutput{})
	pulumi.RegisterOutputType(ListJobsResponseArrayOutput{})
	pulumi.RegisterOutputType(ListServiceHeadersResponseOutput{})
	pulumi.RegisterOutputType(ListServiceHeadersResponseArrayOutput{})
	pulumi.RegisterOutputType(ListServiceResponseOutput{})
	pulumi.RegisterOutputType(ListServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(ListStaticSiteRoutesResponseOutput{})
	pulumi.RegisterOutputType(ListStaticSiteRoutesResponseArrayOutput{})
	pulumi.RegisterOutputType(NativeEnvironmentDetailsOutput{})
	pulumi.RegisterOutputType(NativeEnvironmentDetailsPtrOutput{})
	pulumi.RegisterOutputType(OpenPortsOutput{})
	pulumi.RegisterOutputType(OpenPortsArrayOutput{})
	pulumi.RegisterOutputType(PrivateServiceOutput{})
	pulumi.RegisterOutputType(PrivateServicePtrOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsParentServerPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsParentServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SecretFileOutput{})
	pulumi.RegisterOutputType(SecretFileArrayOutput{})
	pulumi.RegisterOutputType(ServerPropertiesOutput{})
	pulumi.RegisterOutputType(ServiceHeaderOutput{})
	pulumi.RegisterOutputType(ServiceHeaderPtrOutput{})
	pulumi.RegisterOutputType(ServiceHeaderArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteOutput{})
	pulumi.RegisterOutputType(StaticSitePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteRouteOutput{})
	pulumi.RegisterOutputType(StaticSiteRoutePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteRouteArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteServiceDetailsOutput{})
	pulumi.RegisterOutputType(StaticSiteServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(StaticSiteServiceDetailsParentServerPropertiesOutput{})
	pulumi.RegisterOutputType(StaticSiteServiceDetailsParentServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebServiceOutput{})
	pulumi.RegisterOutputType(WebServicePtrOutput{})
	pulumi.RegisterOutputType(WebServiceServiceDetailsOutput{})
	pulumi.RegisterOutputType(WebServiceServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(WebServiceServiceDetailsParentServerPropertiesOutput{})
	pulumi.RegisterOutputType(WebServiceServiceDetailsParentServerPropertiesPtrOutput{})
}
