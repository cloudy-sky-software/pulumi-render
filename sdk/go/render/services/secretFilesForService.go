// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretFilesForService struct {
	pulumi.CustomResourceState

	SecretFiles SecretFileInputTypeArrayOutput `pulumi:"secretFiles"`
}

// NewSecretFilesForService registers a new resource with the given unique name, arguments, and options.
func NewSecretFilesForService(ctx *pulumi.Context,
	name string, args *SecretFilesForServiceArgs, opts ...pulumi.ResourceOption) (*SecretFilesForService, error) {
	if args == nil {
		args = &SecretFilesForServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretFilesForService
	err := ctx.RegisterResource("render:services:SecretFilesForService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretFilesForService gets an existing SecretFilesForService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretFilesForService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretFilesForServiceState, opts ...pulumi.ResourceOption) (*SecretFilesForService, error) {
	var resource SecretFilesForService
	err := ctx.ReadResource("render:services:SecretFilesForService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretFilesForService resources.
type secretFilesForServiceState struct {
}

type SecretFilesForServiceState struct {
}

func (SecretFilesForServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretFilesForServiceState)(nil)).Elem()
}

type secretFilesForServiceArgs struct {
	SecretFiles []SecretFileInputType `pulumi:"secretFiles"`
	// The ID of the service
	ServiceId *string `pulumi:"serviceId"`
}

// The set of arguments for constructing a SecretFilesForService resource.
type SecretFilesForServiceArgs struct {
	SecretFiles SecretFileInputTypeArrayInput
	// The ID of the service
	ServiceId pulumi.StringPtrInput
}

func (SecretFilesForServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretFilesForServiceArgs)(nil)).Elem()
}

type SecretFilesForServiceInput interface {
	pulumi.Input

	ToSecretFilesForServiceOutput() SecretFilesForServiceOutput
	ToSecretFilesForServiceOutputWithContext(ctx context.Context) SecretFilesForServiceOutput
}

func (*SecretFilesForService) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretFilesForService)(nil)).Elem()
}

func (i *SecretFilesForService) ToSecretFilesForServiceOutput() SecretFilesForServiceOutput {
	return i.ToSecretFilesForServiceOutputWithContext(context.Background())
}

func (i *SecretFilesForService) ToSecretFilesForServiceOutputWithContext(ctx context.Context) SecretFilesForServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFilesForServiceOutput)
}

type SecretFilesForServiceOutput struct{ *pulumi.OutputState }

func (SecretFilesForServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretFilesForService)(nil)).Elem()
}

func (o SecretFilesForServiceOutput) ToSecretFilesForServiceOutput() SecretFilesForServiceOutput {
	return o
}

func (o SecretFilesForServiceOutput) ToSecretFilesForServiceOutputWithContext(ctx context.Context) SecretFilesForServiceOutput {
	return o
}

func (o SecretFilesForServiceOutput) SecretFiles() SecretFileInputTypeArrayOutput {
	return o.ApplyT(func(v *SecretFilesForService) SecretFileInputTypeArrayOutput { return v.SecretFiles }).(SecretFileInputTypeArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFilesForServiceInput)(nil)).Elem(), &SecretFilesForService{})
	pulumi.RegisterOutputType(SecretFilesForServiceOutput{})
}
