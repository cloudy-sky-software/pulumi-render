// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.EnvGroups
{
    [RenderResourceType("render:env-groups:LinkServiceToEnvGroup")]
    public partial class LinkServiceToEnvGroup : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        [Output("envVars")]
        public Output<ImmutableArray<Outputs.EnvVar>> EnvVars { get; private set; } = null!;

        [Output("environmentId")]
        public Output<string?> EnvironmentId { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string?> OwnerId { get; private set; } = null!;

        [Output("secretFiles")]
        public Output<ImmutableArray<Outputs.SecretFile>> SecretFiles { get; private set; } = null!;

        /// <summary>
        /// List of serviceIds linked to the envGroup
        /// </summary>
        [Output("serviceLinks")]
        public Output<ImmutableArray<Outputs.ServiceLink>> ServiceLinks { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string?> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a LinkServiceToEnvGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LinkServiceToEnvGroup(string name, LinkServiceToEnvGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("render:env-groups:LinkServiceToEnvGroup", name, args ?? new LinkServiceToEnvGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LinkServiceToEnvGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("render:env-groups:LinkServiceToEnvGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-render",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LinkServiceToEnvGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LinkServiceToEnvGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LinkServiceToEnvGroup(name, id, options);
        }
    }

    public sealed class LinkServiceToEnvGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Filter for resources that belong to an environment group
        /// </summary>
        [Input("envGroupId")]
        public Input<string>? EnvGroupId { get; set; }

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public LinkServiceToEnvGroupArgs()
        {
        }
        public static new LinkServiceToEnvGroupArgs Empty => new LinkServiceToEnvGroupArgs();
    }
}
