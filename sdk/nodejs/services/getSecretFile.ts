// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getSecretFile(args: GetSecretFileArgs, opts?: pulumi.InvokeOptions): Promise<outputs.services.SecretFile> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:getSecretFile", {
        "secretFileName": args.secretFileName,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetSecretFileArgs {
    /**
     * The file name of the secret file
     */
    secretFileName: string;
    /**
     * The ID of the service
     */
    serviceId: string;
}
export function getSecretFileOutput(args: GetSecretFileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.services.SecretFile> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:services:getSecretFile", {
        "secretFileName": args.secretFileName,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetSecretFileOutputArgs {
    /**
     * The file name of the secret file
     */
    secretFileName: pulumi.Input<string>;
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
