// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEnvVar(ctx *pulumi.Context, args *LookupEnvVarArgs, opts ...pulumi.InvokeOption) (*LookupEnvVarResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnvVarResult
	err := ctx.Invoke("render:services:getEnvVar", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvVarArgs struct {
	// The name of the environment variable
	EnvVarKey string `pulumi:"envVarKey"`
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type LookupEnvVarResult struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func LookupEnvVarOutput(ctx *pulumi.Context, args LookupEnvVarOutputArgs, opts ...pulumi.InvokeOption) LookupEnvVarResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnvVarResultOutput, error) {
			args := v.(LookupEnvVarArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:services:getEnvVar", args, LookupEnvVarResultOutput{}, options).(LookupEnvVarResultOutput), nil
		}).(LookupEnvVarResultOutput)
}

type LookupEnvVarOutputArgs struct {
	// The name of the environment variable
	EnvVarKey pulumi.StringInput `pulumi:"envVarKey"`
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupEnvVarOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvVarArgs)(nil)).Elem()
}

type LookupEnvVarResultOutput struct{ *pulumi.OutputState }

func (LookupEnvVarResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvVarResult)(nil)).Elem()
}

func (o LookupEnvVarResultOutput) ToLookupEnvVarResultOutput() LookupEnvVarResultOutput {
	return o
}

func (o LookupEnvVarResultOutput) ToLookupEnvVarResultOutputWithContext(ctx context.Context) LookupEnvVarResultOutput {
	return o
}

func (o LookupEnvVarResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvVarResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupEnvVarResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvVarResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvVarResultOutput{})
}
