// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Deploy extends pulumi.CustomResource {
    /**
     * Get an existing Deploy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deploy {
        return new Deploy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'render:services:Deploy';

    /**
     * Returns true if the given object is an instance of Deploy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deploy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deploy.__pulumiType;
    }

    /**
     * Defaults to "do_not_clear"
     */
    public readonly clearCache!: pulumi.Output<enums.services.ClearCache | undefined>;
    public /*out*/ readonly commit!: pulumi.Output<outputs.services.CommitProperties | undefined>;
    /**
     * Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys.
     */
    public readonly commitId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdAt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly finishedAt!: pulumi.Output<string | undefined>;
    /**
     * Image information used when creating the deploy. Not present for Git-backed deploys
     */
    public /*out*/ readonly image!: pulumi.Output<outputs.services.ImageProperties | undefined>;
    /**
     * URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service.
     */
    public readonly imageUrl!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<enums.services.Status | undefined>;
    public /*out*/ readonly trigger!: pulumi.Output<enums.services.Trigger | undefined>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string | undefined>;

    /**
     * Create a Deploy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DeployArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["clearCache"] = (args ? args.clearCache : undefined) ?? "do_not_clear";
            resourceInputs["commitId"] = args ? args.commitId : undefined;
            resourceInputs["imageUrl"] = args ? args.imageUrl : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["commit"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["finishedAt"] = undefined /*out*/;
            resourceInputs["image"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["trigger"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["clearCache"] = undefined /*out*/;
            resourceInputs["commit"] = undefined /*out*/;
            resourceInputs["commitId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["finishedAt"] = undefined /*out*/;
            resourceInputs["image"] = undefined /*out*/;
            resourceInputs["imageUrl"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["trigger"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deploy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deploy resource.
 */
export interface DeployArgs {
    /**
     * Defaults to "do_not_clear"
     */
    clearCache?: pulumi.Input<enums.services.ClearCache>;
    /**
     * Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys.
     */
    commitId?: pulumi.Input<string>;
    /**
     * URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service.
     */
    imageUrl?: pulumi.Input<string>;
    /**
     * The ID of the service
     */
    serviceId?: pulumi.Input<string>;
}
