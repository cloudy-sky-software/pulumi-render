// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webhooks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EventFilterItem string

const (
	EventFilterItemAutoscalingConfigChanged     = EventFilterItem("autoscaling_config_changed")
	EventFilterItemAutoscalingEnded             = EventFilterItem("autoscaling_ended")
	EventFilterItemAutoscalingStarted           = EventFilterItem("autoscaling_started")
	EventFilterItemBranchDeleted                = EventFilterItem("branch_deleted")
	EventFilterItemBuildEnded                   = EventFilterItem("build_ended")
	EventFilterItemBuildStarted                 = EventFilterItem("build_started")
	EventFilterItemCommitIgnored                = EventFilterItem("commit_ignored")
	EventFilterItemCronJobRunEnded              = EventFilterItem("cron_job_run_ended")
	EventFilterItemCronJobRunStarted            = EventFilterItem("cron_job_run_started")
	EventFilterItemDeployEnded                  = EventFilterItem("deploy_ended")
	EventFilterItemDeployStarted                = EventFilterItem("deploy_started")
	EventFilterItemDiskCreated                  = EventFilterItem("disk_created")
	EventFilterItemDiskUpdated                  = EventFilterItem("disk_updated")
	EventFilterItemDiskDeleted                  = EventFilterItem("disk_deleted")
	EventFilterItemImagePullFailed              = EventFilterItem("image_pull_failed")
	EventFilterItemInstanceCountChanged         = EventFilterItem("instance_count_changed")
	EventFilterItemJobRunEnded                  = EventFilterItem("job_run_ended")
	EventFilterItemMaintenanceModeEnabled       = EventFilterItem("maintenance_mode_enabled")
	EventFilterItemMaintenanceModeUriUpdated    = EventFilterItem("maintenance_mode_uri_updated")
	EventFilterItemMaintenanceEnded             = EventFilterItem("maintenance_ended")
	EventFilterItemMaintenanceStarted           = EventFilterItem("maintenance_started")
	EventFilterItemPlanChanged                  = EventFilterItem("plan_changed")
	EventFilterItemPreDeployEnded               = EventFilterItem("pre_deploy_ended")
	EventFilterItemPreDeployStarted             = EventFilterItem("pre_deploy_started")
	EventFilterItemServerAvailable              = EventFilterItem("server_available")
	EventFilterItemServerFailed                 = EventFilterItem("server_failed")
	EventFilterItemServerHardwareFailure        = EventFilterItem("server_hardware_failure")
	EventFilterItemServerRestarted              = EventFilterItem("server_restarted")
	EventFilterItemServerUnhealthy              = EventFilterItem("server_unhealthy")
	EventFilterItemServiceResumed               = EventFilterItem("service_resumed")
	EventFilterItemServiceSuspended             = EventFilterItem("service_suspended")
	EventFilterItemZeroDowntimeRedeployEnded    = EventFilterItem("zero_downtime_redeploy_ended")
	EventFilterItemZeroDowntimeRedeployStarted  = EventFilterItem("zero_downtime_redeploy_started")
	EventFilterItemPostgresAvailable            = EventFilterItem("postgres_available")
	EventFilterItemPostgresBackupCompleted      = EventFilterItem("postgres_backup_completed")
	EventFilterItemPostgresBackupStarted        = EventFilterItem("postgres_backup_started")
	EventFilterItemPostgresClusterLeaderChanged = EventFilterItem("postgres_cluster_leader_changed")
	EventFilterItemPostgresCreated              = EventFilterItem("postgres_created")
	EventFilterItemPostgresDiskSizeChanged      = EventFilterItem("postgres_disk_size_changed")
	EventFilterItemPostgresHaStatusChanged      = EventFilterItem("postgres_ha_status_changed")
	EventFilterItemPostgresRestarted            = EventFilterItem("postgres_restarted")
	EventFilterItemPostgresUnavailable          = EventFilterItem("postgres_unavailable")
	EventFilterItemPostgresUpgradeFailed        = EventFilterItem("postgres_upgrade_failed")
	EventFilterItemPostgresUpgradeStarted       = EventFilterItem("postgres_upgrade_started")
	EventFilterItemPostgresUpgradeSucceeded     = EventFilterItem("postgres_upgrade_succeeded")
	EventFilterItemPostgresReadReplicasChanged  = EventFilterItem("postgres_read_replicas_changed")
	EventFilterItemKeyValueAvailable            = EventFilterItem("key_value_available")
	EventFilterItemKeyValueConfigRestart        = EventFilterItem("key_value_config_restart")
	EventFilterItemKeyValueUnhealthy            = EventFilterItem("key_value_unhealthy")
)

func (EventFilterItem) ElementType() reflect.Type {
	return reflect.TypeOf((*EventFilterItem)(nil)).Elem()
}

func (e EventFilterItem) ToEventFilterItemOutput() EventFilterItemOutput {
	return pulumi.ToOutput(e).(EventFilterItemOutput)
}

func (e EventFilterItem) ToEventFilterItemOutputWithContext(ctx context.Context) EventFilterItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventFilterItemOutput)
}

func (e EventFilterItem) ToEventFilterItemPtrOutput() EventFilterItemPtrOutput {
	return e.ToEventFilterItemPtrOutputWithContext(context.Background())
}

func (e EventFilterItem) ToEventFilterItemPtrOutputWithContext(ctx context.Context) EventFilterItemPtrOutput {
	return EventFilterItem(e).ToEventFilterItemOutputWithContext(ctx).ToEventFilterItemPtrOutputWithContext(ctx)
}

func (e EventFilterItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventFilterItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventFilterItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventFilterItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventFilterItemOutput struct{ *pulumi.OutputState }

func (EventFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventFilterItem)(nil)).Elem()
}

func (o EventFilterItemOutput) ToEventFilterItemOutput() EventFilterItemOutput {
	return o
}

func (o EventFilterItemOutput) ToEventFilterItemOutputWithContext(ctx context.Context) EventFilterItemOutput {
	return o
}

func (o EventFilterItemOutput) ToEventFilterItemPtrOutput() EventFilterItemPtrOutput {
	return o.ToEventFilterItemPtrOutputWithContext(context.Background())
}

func (o EventFilterItemOutput) ToEventFilterItemPtrOutputWithContext(ctx context.Context) EventFilterItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventFilterItem) *EventFilterItem {
		return &v
	}).(EventFilterItemPtrOutput)
}

func (o EventFilterItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventFilterItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventFilterItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventFilterItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventFilterItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventFilterItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventFilterItemPtrOutput struct{ *pulumi.OutputState }

func (EventFilterItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventFilterItem)(nil)).Elem()
}

func (o EventFilterItemPtrOutput) ToEventFilterItemPtrOutput() EventFilterItemPtrOutput {
	return o
}

func (o EventFilterItemPtrOutput) ToEventFilterItemPtrOutputWithContext(ctx context.Context) EventFilterItemPtrOutput {
	return o
}

func (o EventFilterItemPtrOutput) Elem() EventFilterItemOutput {
	return o.ApplyT(func(v *EventFilterItem) EventFilterItem {
		if v != nil {
			return *v
		}
		var ret EventFilterItem
		return ret
	}).(EventFilterItemOutput)
}

func (o EventFilterItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventFilterItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventFilterItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventFilterItemInput is an input type that accepts values of the EventFilterItem enum
// A concrete instance of `EventFilterItemInput` can be one of the following:
//
//	EventFilterItemAutoscalingConfigChanged
//	EventFilterItemAutoscalingEnded
//	EventFilterItemAutoscalingStarted
//	EventFilterItemBranchDeleted
//	EventFilterItemBuildEnded
//	EventFilterItemBuildStarted
//	EventFilterItemCommitIgnored
//	EventFilterItemCronJobRunEnded
//	EventFilterItemCronJobRunStarted
//	EventFilterItemDeployEnded
//	EventFilterItemDeployStarted
//	EventFilterItemDiskCreated
//	EventFilterItemDiskUpdated
//	EventFilterItemDiskDeleted
//	EventFilterItemImagePullFailed
//	EventFilterItemInstanceCountChanged
//	EventFilterItemJobRunEnded
//	EventFilterItemMaintenanceModeEnabled
//	EventFilterItemMaintenanceModeUriUpdated
//	EventFilterItemMaintenanceEnded
//	EventFilterItemMaintenanceStarted
//	EventFilterItemPlanChanged
//	EventFilterItemPreDeployEnded
//	EventFilterItemPreDeployStarted
//	EventFilterItemServerAvailable
//	EventFilterItemServerFailed
//	EventFilterItemServerHardwareFailure
//	EventFilterItemServerRestarted
//	EventFilterItemServerUnhealthy
//	EventFilterItemServiceResumed
//	EventFilterItemServiceSuspended
//	EventFilterItemZeroDowntimeRedeployEnded
//	EventFilterItemZeroDowntimeRedeployStarted
//	EventFilterItemPostgresAvailable
//	EventFilterItemPostgresBackupCompleted
//	EventFilterItemPostgresBackupStarted
//	EventFilterItemPostgresClusterLeaderChanged
//	EventFilterItemPostgresCreated
//	EventFilterItemPostgresDiskSizeChanged
//	EventFilterItemPostgresHaStatusChanged
//	EventFilterItemPostgresRestarted
//	EventFilterItemPostgresUnavailable
//	EventFilterItemPostgresUpgradeFailed
//	EventFilterItemPostgresUpgradeStarted
//	EventFilterItemPostgresUpgradeSucceeded
//	EventFilterItemPostgresReadReplicasChanged
//	EventFilterItemKeyValueAvailable
//	EventFilterItemKeyValueConfigRestart
//	EventFilterItemKeyValueUnhealthy
type EventFilterItemInput interface {
	pulumi.Input

	ToEventFilterItemOutput() EventFilterItemOutput
	ToEventFilterItemOutputWithContext(context.Context) EventFilterItemOutput
}

var eventFilterItemPtrType = reflect.TypeOf((**EventFilterItem)(nil)).Elem()

type EventFilterItemPtrInput interface {
	pulumi.Input

	ToEventFilterItemPtrOutput() EventFilterItemPtrOutput
	ToEventFilterItemPtrOutputWithContext(context.Context) EventFilterItemPtrOutput
}

type eventFilterItemPtr string

func EventFilterItemPtr(v string) EventFilterItemPtrInput {
	return (*eventFilterItemPtr)(&v)
}

func (*eventFilterItemPtr) ElementType() reflect.Type {
	return eventFilterItemPtrType
}

func (in *eventFilterItemPtr) ToEventFilterItemPtrOutput() EventFilterItemPtrOutput {
	return pulumi.ToOutput(in).(EventFilterItemPtrOutput)
}

func (in *eventFilterItemPtr) ToEventFilterItemPtrOutputWithContext(ctx context.Context) EventFilterItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventFilterItemPtrOutput)
}

// EventFilterItemArrayInput is an input type that accepts EventFilterItemArray and EventFilterItemArrayOutput values.
// You can construct a concrete instance of `EventFilterItemArrayInput` via:
//
//	EventFilterItemArray{ EventFilterItemArgs{...} }
type EventFilterItemArrayInput interface {
	pulumi.Input

	ToEventFilterItemArrayOutput() EventFilterItemArrayOutput
	ToEventFilterItemArrayOutputWithContext(context.Context) EventFilterItemArrayOutput
}

type EventFilterItemArray []EventFilterItem

func (EventFilterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventFilterItem)(nil)).Elem()
}

func (i EventFilterItemArray) ToEventFilterItemArrayOutput() EventFilterItemArrayOutput {
	return i.ToEventFilterItemArrayOutputWithContext(context.Background())
}

func (i EventFilterItemArray) ToEventFilterItemArrayOutputWithContext(ctx context.Context) EventFilterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventFilterItemArrayOutput)
}

type EventFilterItemArrayOutput struct{ *pulumi.OutputState }

func (EventFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventFilterItem)(nil)).Elem()
}

func (o EventFilterItemArrayOutput) ToEventFilterItemArrayOutput() EventFilterItemArrayOutput {
	return o
}

func (o EventFilterItemArrayOutput) ToEventFilterItemArrayOutputWithContext(ctx context.Context) EventFilterItemArrayOutput {
	return o
}

func (o EventFilterItemArrayOutput) Index(i pulumi.IntInput) EventFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventFilterItem {
		return vs[0].([]EventFilterItem)[vs[1].(int)]
	}).(EventFilterItemOutput)
}

type WebhookEventWithCursorWebhookEventPropertiesEventType string

const (
	WebhookEventWithCursorWebhookEventPropertiesEventTypeAutoscalingConfigChanged     = WebhookEventWithCursorWebhookEventPropertiesEventType("autoscaling_config_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeAutoscalingEnded             = WebhookEventWithCursorWebhookEventPropertiesEventType("autoscaling_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeAutoscalingStarted           = WebhookEventWithCursorWebhookEventPropertiesEventType("autoscaling_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeBranchDeleted                = WebhookEventWithCursorWebhookEventPropertiesEventType("branch_deleted")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeBuildEnded                   = WebhookEventWithCursorWebhookEventPropertiesEventType("build_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeBuildStarted                 = WebhookEventWithCursorWebhookEventPropertiesEventType("build_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeCommitIgnored                = WebhookEventWithCursorWebhookEventPropertiesEventType("commit_ignored")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeCronJobRunEnded              = WebhookEventWithCursorWebhookEventPropertiesEventType("cron_job_run_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeCronJobRunStarted            = WebhookEventWithCursorWebhookEventPropertiesEventType("cron_job_run_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeDeployEnded                  = WebhookEventWithCursorWebhookEventPropertiesEventType("deploy_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeDeployStarted                = WebhookEventWithCursorWebhookEventPropertiesEventType("deploy_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeDiskCreated                  = WebhookEventWithCursorWebhookEventPropertiesEventType("disk_created")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeDiskUpdated                  = WebhookEventWithCursorWebhookEventPropertiesEventType("disk_updated")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeDiskDeleted                  = WebhookEventWithCursorWebhookEventPropertiesEventType("disk_deleted")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeImagePullFailed              = WebhookEventWithCursorWebhookEventPropertiesEventType("image_pull_failed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeInstanceCountChanged         = WebhookEventWithCursorWebhookEventPropertiesEventType("instance_count_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeJobRunEnded                  = WebhookEventWithCursorWebhookEventPropertiesEventType("job_run_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeMaintenanceModeEnabled       = WebhookEventWithCursorWebhookEventPropertiesEventType("maintenance_mode_enabled")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeMaintenanceModeUriUpdated    = WebhookEventWithCursorWebhookEventPropertiesEventType("maintenance_mode_uri_updated")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeMaintenanceEnded             = WebhookEventWithCursorWebhookEventPropertiesEventType("maintenance_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeMaintenanceStarted           = WebhookEventWithCursorWebhookEventPropertiesEventType("maintenance_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePlanChanged                  = WebhookEventWithCursorWebhookEventPropertiesEventType("plan_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePreDeployEnded               = WebhookEventWithCursorWebhookEventPropertiesEventType("pre_deploy_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePreDeployStarted             = WebhookEventWithCursorWebhookEventPropertiesEventType("pre_deploy_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServerAvailable              = WebhookEventWithCursorWebhookEventPropertiesEventType("server_available")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServerFailed                 = WebhookEventWithCursorWebhookEventPropertiesEventType("server_failed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServerHardwareFailure        = WebhookEventWithCursorWebhookEventPropertiesEventType("server_hardware_failure")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServerRestarted              = WebhookEventWithCursorWebhookEventPropertiesEventType("server_restarted")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServerUnhealthy              = WebhookEventWithCursorWebhookEventPropertiesEventType("server_unhealthy")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServiceResumed               = WebhookEventWithCursorWebhookEventPropertiesEventType("service_resumed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeServiceSuspended             = WebhookEventWithCursorWebhookEventPropertiesEventType("service_suspended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeZeroDowntimeRedeployEnded    = WebhookEventWithCursorWebhookEventPropertiesEventType("zero_downtime_redeploy_ended")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeZeroDowntimeRedeployStarted  = WebhookEventWithCursorWebhookEventPropertiesEventType("zero_downtime_redeploy_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresAvailable            = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_available")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresBackupCompleted      = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_backup_completed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresBackupStarted        = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_backup_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresClusterLeaderChanged = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_cluster_leader_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresCreated              = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_created")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresDiskSizeChanged      = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_disk_size_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresHaStatusChanged      = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_ha_status_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresRestarted            = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_restarted")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresUnavailable          = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_unavailable")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresUpgradeFailed        = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_upgrade_failed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresUpgradeStarted       = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_upgrade_started")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresUpgradeSucceeded     = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_upgrade_succeeded")
	WebhookEventWithCursorWebhookEventPropertiesEventTypePostgresReadReplicasChanged  = WebhookEventWithCursorWebhookEventPropertiesEventType("postgres_read_replicas_changed")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeKeyValueAvailable            = WebhookEventWithCursorWebhookEventPropertiesEventType("key_value_available")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeKeyValueConfigRestart        = WebhookEventWithCursorWebhookEventPropertiesEventType("key_value_config_restart")
	WebhookEventWithCursorWebhookEventPropertiesEventTypeKeyValueUnhealthy            = WebhookEventWithCursorWebhookEventPropertiesEventType("key_value_unhealthy")
)

type WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput struct{ *pulumi.OutputState }

func (WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookEventWithCursorWebhookEventPropertiesEventType)(nil)).Elem()
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypeOutput() WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput {
	return o
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypeOutputWithContext(ctx context.Context) WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput {
	return o
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput() WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput {
	return o.ToWebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutputWithContext(context.Background())
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutputWithContext(ctx context.Context) WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookEventWithCursorWebhookEventPropertiesEventType) *WebhookEventWithCursorWebhookEventPropertiesEventType {
		return &v
	}).(WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookEventWithCursorWebhookEventPropertiesEventType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookEventWithCursorWebhookEventPropertiesEventType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput struct{ *pulumi.OutputState }

func (WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookEventWithCursorWebhookEventPropertiesEventType)(nil)).Elem()
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput() WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput {
	return o
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) ToWebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutputWithContext(ctx context.Context) WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput {
	return o
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) Elem() WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput {
	return o.ApplyT(func(v *WebhookEventWithCursorWebhookEventPropertiesEventType) WebhookEventWithCursorWebhookEventPropertiesEventType {
		if v != nil {
			return *v
		}
		var ret WebhookEventWithCursorWebhookEventPropertiesEventType
		return ret
	}).(WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookEventWithCursorWebhookEventPropertiesEventType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookWithCursorWebhookPropertiesEventFilterItem string

const (
	WebhookWithCursorWebhookPropertiesEventFilterItemAutoscalingConfigChanged     = WebhookWithCursorWebhookPropertiesEventFilterItem("autoscaling_config_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemAutoscalingEnded             = WebhookWithCursorWebhookPropertiesEventFilterItem("autoscaling_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemAutoscalingStarted           = WebhookWithCursorWebhookPropertiesEventFilterItem("autoscaling_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemBranchDeleted                = WebhookWithCursorWebhookPropertiesEventFilterItem("branch_deleted")
	WebhookWithCursorWebhookPropertiesEventFilterItemBuildEnded                   = WebhookWithCursorWebhookPropertiesEventFilterItem("build_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemBuildStarted                 = WebhookWithCursorWebhookPropertiesEventFilterItem("build_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemCommitIgnored                = WebhookWithCursorWebhookPropertiesEventFilterItem("commit_ignored")
	WebhookWithCursorWebhookPropertiesEventFilterItemCronJobRunEnded              = WebhookWithCursorWebhookPropertiesEventFilterItem("cron_job_run_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemCronJobRunStarted            = WebhookWithCursorWebhookPropertiesEventFilterItem("cron_job_run_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemDeployEnded                  = WebhookWithCursorWebhookPropertiesEventFilterItem("deploy_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemDeployStarted                = WebhookWithCursorWebhookPropertiesEventFilterItem("deploy_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemDiskCreated                  = WebhookWithCursorWebhookPropertiesEventFilterItem("disk_created")
	WebhookWithCursorWebhookPropertiesEventFilterItemDiskUpdated                  = WebhookWithCursorWebhookPropertiesEventFilterItem("disk_updated")
	WebhookWithCursorWebhookPropertiesEventFilterItemDiskDeleted                  = WebhookWithCursorWebhookPropertiesEventFilterItem("disk_deleted")
	WebhookWithCursorWebhookPropertiesEventFilterItemImagePullFailed              = WebhookWithCursorWebhookPropertiesEventFilterItem("image_pull_failed")
	WebhookWithCursorWebhookPropertiesEventFilterItemInstanceCountChanged         = WebhookWithCursorWebhookPropertiesEventFilterItem("instance_count_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemJobRunEnded                  = WebhookWithCursorWebhookPropertiesEventFilterItem("job_run_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemMaintenanceModeEnabled       = WebhookWithCursorWebhookPropertiesEventFilterItem("maintenance_mode_enabled")
	WebhookWithCursorWebhookPropertiesEventFilterItemMaintenanceModeUriUpdated    = WebhookWithCursorWebhookPropertiesEventFilterItem("maintenance_mode_uri_updated")
	WebhookWithCursorWebhookPropertiesEventFilterItemMaintenanceEnded             = WebhookWithCursorWebhookPropertiesEventFilterItem("maintenance_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemMaintenanceStarted           = WebhookWithCursorWebhookPropertiesEventFilterItem("maintenance_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemPlanChanged                  = WebhookWithCursorWebhookPropertiesEventFilterItem("plan_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPreDeployEnded               = WebhookWithCursorWebhookPropertiesEventFilterItem("pre_deploy_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemPreDeployStarted             = WebhookWithCursorWebhookPropertiesEventFilterItem("pre_deploy_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemServerAvailable              = WebhookWithCursorWebhookPropertiesEventFilterItem("server_available")
	WebhookWithCursorWebhookPropertiesEventFilterItemServerFailed                 = WebhookWithCursorWebhookPropertiesEventFilterItem("server_failed")
	WebhookWithCursorWebhookPropertiesEventFilterItemServerHardwareFailure        = WebhookWithCursorWebhookPropertiesEventFilterItem("server_hardware_failure")
	WebhookWithCursorWebhookPropertiesEventFilterItemServerRestarted              = WebhookWithCursorWebhookPropertiesEventFilterItem("server_restarted")
	WebhookWithCursorWebhookPropertiesEventFilterItemServerUnhealthy              = WebhookWithCursorWebhookPropertiesEventFilterItem("server_unhealthy")
	WebhookWithCursorWebhookPropertiesEventFilterItemServiceResumed               = WebhookWithCursorWebhookPropertiesEventFilterItem("service_resumed")
	WebhookWithCursorWebhookPropertiesEventFilterItemServiceSuspended             = WebhookWithCursorWebhookPropertiesEventFilterItem("service_suspended")
	WebhookWithCursorWebhookPropertiesEventFilterItemZeroDowntimeRedeployEnded    = WebhookWithCursorWebhookPropertiesEventFilterItem("zero_downtime_redeploy_ended")
	WebhookWithCursorWebhookPropertiesEventFilterItemZeroDowntimeRedeployStarted  = WebhookWithCursorWebhookPropertiesEventFilterItem("zero_downtime_redeploy_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresAvailable            = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_available")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresBackupCompleted      = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_backup_completed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresBackupStarted        = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_backup_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresClusterLeaderChanged = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_cluster_leader_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresCreated              = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_created")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresDiskSizeChanged      = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_disk_size_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresHaStatusChanged      = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_ha_status_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresRestarted            = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_restarted")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresUnavailable          = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_unavailable")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresUpgradeFailed        = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_upgrade_failed")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresUpgradeStarted       = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_upgrade_started")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresUpgradeSucceeded     = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_upgrade_succeeded")
	WebhookWithCursorWebhookPropertiesEventFilterItemPostgresReadReplicasChanged  = WebhookWithCursorWebhookPropertiesEventFilterItem("postgres_read_replicas_changed")
	WebhookWithCursorWebhookPropertiesEventFilterItemKeyValueAvailable            = WebhookWithCursorWebhookPropertiesEventFilterItem("key_value_available")
	WebhookWithCursorWebhookPropertiesEventFilterItemKeyValueConfigRestart        = WebhookWithCursorWebhookPropertiesEventFilterItem("key_value_config_restart")
	WebhookWithCursorWebhookPropertiesEventFilterItemKeyValueUnhealthy            = WebhookWithCursorWebhookPropertiesEventFilterItem("key_value_unhealthy")
)

type WebhookWithCursorWebhookPropertiesEventFilterItemOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursorWebhookPropertiesEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemOutput() WebhookWithCursorWebhookPropertiesEventFilterItemOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesEventFilterItemOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput() WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput {
	return o.ToWebhookWithCursorWebhookPropertiesEventFilterItemPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemPtrOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookWithCursorWebhookPropertiesEventFilterItem) *WebhookWithCursorWebhookPropertiesEventFilterItem {
		return &v
	}).(WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput)
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookWithCursorWebhookPropertiesEventFilterItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookWithCursorWebhookPropertiesEventFilterItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookWithCursorWebhookPropertiesEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput() WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemPtrOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) Elem() WebhookWithCursorWebhookPropertiesEventFilterItemOutput {
	return o.ApplyT(func(v *WebhookWithCursorWebhookPropertiesEventFilterItem) WebhookWithCursorWebhookPropertiesEventFilterItem {
		if v != nil {
			return *v
		}
		var ret WebhookWithCursorWebhookPropertiesEventFilterItem
		return ret
	}).(WebhookWithCursorWebhookPropertiesEventFilterItemOutput)
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookWithCursorWebhookPropertiesEventFilterItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookWithCursorWebhookPropertiesEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput() WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput) ToWebhookWithCursorWebhookPropertiesEventFilterItemArrayOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput) Index(i pulumi.IntInput) WebhookWithCursorWebhookPropertiesEventFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookWithCursorWebhookPropertiesEventFilterItem {
		return vs[0].([]WebhookWithCursorWebhookPropertiesEventFilterItem)[vs[1].(int)]
	}).(WebhookWithCursorWebhookPropertiesEventFilterItemOutput)
}

type WebhookWithCursorpropertieswebhookEventFilterItem string

const (
	WebhookWithCursorpropertieswebhookEventFilterItemAutoscalingConfigChanged     = WebhookWithCursorpropertieswebhookEventFilterItem("autoscaling_config_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemAutoscalingEnded             = WebhookWithCursorpropertieswebhookEventFilterItem("autoscaling_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemAutoscalingStarted           = WebhookWithCursorpropertieswebhookEventFilterItem("autoscaling_started")
	WebhookWithCursorpropertieswebhookEventFilterItemBranchDeleted                = WebhookWithCursorpropertieswebhookEventFilterItem("branch_deleted")
	WebhookWithCursorpropertieswebhookEventFilterItemBuildEnded                   = WebhookWithCursorpropertieswebhookEventFilterItem("build_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemBuildStarted                 = WebhookWithCursorpropertieswebhookEventFilterItem("build_started")
	WebhookWithCursorpropertieswebhookEventFilterItemCommitIgnored                = WebhookWithCursorpropertieswebhookEventFilterItem("commit_ignored")
	WebhookWithCursorpropertieswebhookEventFilterItemCronJobRunEnded              = WebhookWithCursorpropertieswebhookEventFilterItem("cron_job_run_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemCronJobRunStarted            = WebhookWithCursorpropertieswebhookEventFilterItem("cron_job_run_started")
	WebhookWithCursorpropertieswebhookEventFilterItemDeployEnded                  = WebhookWithCursorpropertieswebhookEventFilterItem("deploy_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemDeployStarted                = WebhookWithCursorpropertieswebhookEventFilterItem("deploy_started")
	WebhookWithCursorpropertieswebhookEventFilterItemDiskCreated                  = WebhookWithCursorpropertieswebhookEventFilterItem("disk_created")
	WebhookWithCursorpropertieswebhookEventFilterItemDiskUpdated                  = WebhookWithCursorpropertieswebhookEventFilterItem("disk_updated")
	WebhookWithCursorpropertieswebhookEventFilterItemDiskDeleted                  = WebhookWithCursorpropertieswebhookEventFilterItem("disk_deleted")
	WebhookWithCursorpropertieswebhookEventFilterItemImagePullFailed              = WebhookWithCursorpropertieswebhookEventFilterItem("image_pull_failed")
	WebhookWithCursorpropertieswebhookEventFilterItemInstanceCountChanged         = WebhookWithCursorpropertieswebhookEventFilterItem("instance_count_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemJobRunEnded                  = WebhookWithCursorpropertieswebhookEventFilterItem("job_run_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemMaintenanceModeEnabled       = WebhookWithCursorpropertieswebhookEventFilterItem("maintenance_mode_enabled")
	WebhookWithCursorpropertieswebhookEventFilterItemMaintenanceModeUriUpdated    = WebhookWithCursorpropertieswebhookEventFilterItem("maintenance_mode_uri_updated")
	WebhookWithCursorpropertieswebhookEventFilterItemMaintenanceEnded             = WebhookWithCursorpropertieswebhookEventFilterItem("maintenance_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemMaintenanceStarted           = WebhookWithCursorpropertieswebhookEventFilterItem("maintenance_started")
	WebhookWithCursorpropertieswebhookEventFilterItemPlanChanged                  = WebhookWithCursorpropertieswebhookEventFilterItem("plan_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemPreDeployEnded               = WebhookWithCursorpropertieswebhookEventFilterItem("pre_deploy_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemPreDeployStarted             = WebhookWithCursorpropertieswebhookEventFilterItem("pre_deploy_started")
	WebhookWithCursorpropertieswebhookEventFilterItemServerAvailable              = WebhookWithCursorpropertieswebhookEventFilterItem("server_available")
	WebhookWithCursorpropertieswebhookEventFilterItemServerFailed                 = WebhookWithCursorpropertieswebhookEventFilterItem("server_failed")
	WebhookWithCursorpropertieswebhookEventFilterItemServerHardwareFailure        = WebhookWithCursorpropertieswebhookEventFilterItem("server_hardware_failure")
	WebhookWithCursorpropertieswebhookEventFilterItemServerRestarted              = WebhookWithCursorpropertieswebhookEventFilterItem("server_restarted")
	WebhookWithCursorpropertieswebhookEventFilterItemServerUnhealthy              = WebhookWithCursorpropertieswebhookEventFilterItem("server_unhealthy")
	WebhookWithCursorpropertieswebhookEventFilterItemServiceResumed               = WebhookWithCursorpropertieswebhookEventFilterItem("service_resumed")
	WebhookWithCursorpropertieswebhookEventFilterItemServiceSuspended             = WebhookWithCursorpropertieswebhookEventFilterItem("service_suspended")
	WebhookWithCursorpropertieswebhookEventFilterItemZeroDowntimeRedeployEnded    = WebhookWithCursorpropertieswebhookEventFilterItem("zero_downtime_redeploy_ended")
	WebhookWithCursorpropertieswebhookEventFilterItemZeroDowntimeRedeployStarted  = WebhookWithCursorpropertieswebhookEventFilterItem("zero_downtime_redeploy_started")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresAvailable            = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_available")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresBackupCompleted      = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_backup_completed")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresBackupStarted        = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_backup_started")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresClusterLeaderChanged = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_cluster_leader_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresCreated              = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_created")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresDiskSizeChanged      = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_disk_size_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresHaStatusChanged      = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_ha_status_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresRestarted            = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_restarted")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresUnavailable          = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_unavailable")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresUpgradeFailed        = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_upgrade_failed")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresUpgradeStarted       = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_upgrade_started")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresUpgradeSucceeded     = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_upgrade_succeeded")
	WebhookWithCursorpropertieswebhookEventFilterItemPostgresReadReplicasChanged  = WebhookWithCursorpropertieswebhookEventFilterItem("postgres_read_replicas_changed")
	WebhookWithCursorpropertieswebhookEventFilterItemKeyValueAvailable            = WebhookWithCursorpropertieswebhookEventFilterItem("key_value_available")
	WebhookWithCursorpropertieswebhookEventFilterItemKeyValueConfigRestart        = WebhookWithCursorpropertieswebhookEventFilterItem("key_value_config_restart")
	WebhookWithCursorpropertieswebhookEventFilterItemKeyValueUnhealthy            = WebhookWithCursorpropertieswebhookEventFilterItem("key_value_unhealthy")
)

type WebhookWithCursorpropertieswebhookEventFilterItemOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorpropertieswebhookEventFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursorpropertieswebhookEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemOutput() WebhookWithCursorpropertieswebhookEventFilterItemOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemOutputWithContext(ctx context.Context) WebhookWithCursorpropertieswebhookEventFilterItemOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemPtrOutput() WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput {
	return o.ToWebhookWithCursorpropertieswebhookEventFilterItemPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemPtrOutputWithContext(ctx context.Context) WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookWithCursorpropertieswebhookEventFilterItem) *WebhookWithCursorpropertieswebhookEventFilterItem {
		return &v
	}).(WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput)
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookWithCursorpropertieswebhookEventFilterItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookWithCursorpropertieswebhookEventFilterItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookWithCursorpropertieswebhookEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemPtrOutput() WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemPtrOutputWithContext(ctx context.Context) WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) Elem() WebhookWithCursorpropertieswebhookEventFilterItemOutput {
	return o.ApplyT(func(v *WebhookWithCursorpropertieswebhookEventFilterItem) WebhookWithCursorpropertieswebhookEventFilterItem {
		if v != nil {
			return *v
		}
		var ret WebhookWithCursorpropertieswebhookEventFilterItem
		return ret
	}).(WebhookWithCursorpropertieswebhookEventFilterItemOutput)
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookWithCursorpropertieswebhookEventFilterItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookWithCursorpropertieswebhookEventFilterItem)(nil)).Elem()
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemArrayOutput() WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput) ToWebhookWithCursorpropertieswebhookEventFilterItemArrayOutputWithContext(ctx context.Context) WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput) Index(i pulumi.IntInput) WebhookWithCursorpropertieswebhookEventFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookWithCursorpropertieswebhookEventFilterItem {
		return vs[0].([]WebhookWithCursorpropertieswebhookEventFilterItem)[vs[1].(int)]
	}).(WebhookWithCursorpropertieswebhookEventFilterItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventFilterItemInput)(nil)).Elem(), EventFilterItem("autoscaling_config_changed"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventFilterItemPtrInput)(nil)).Elem(), EventFilterItem("autoscaling_config_changed"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventFilterItemArrayInput)(nil)).Elem(), EventFilterItemArray{})
	pulumi.RegisterOutputType(EventFilterItemOutput{})
	pulumi.RegisterOutputType(EventFilterItemPtrOutput{})
	pulumi.RegisterOutputType(EventFilterItemArrayOutput{})
	pulumi.RegisterOutputType(WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput{})
	pulumi.RegisterOutputType(WebhookEventWithCursorWebhookEventPropertiesEventTypePtrOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorWebhookPropertiesEventFilterItemOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorWebhookPropertiesEventFilterItemPtrOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorpropertieswebhookEventFilterItemOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorpropertieswebhookEventFilterItemPtrOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput{})
}
