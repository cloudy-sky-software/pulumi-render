// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class GetJob
    {
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("render:services:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("render:services:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());

        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("render:services:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the job
        /// </summary>
        [Input("jobId", required: true)]
        public string JobId { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the job
        /// </summary>
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        public readonly string CreatedAt;
        public readonly string? FinishedAt;
        public readonly string Id;
        public readonly string PlanId;
        public readonly string ServiceId;
        public readonly string StartCommand;
        public readonly string? StartedAt;
        public readonly Pulumi.Render.Services.JobStatus? Status;

        [OutputConstructor]
        private GetJobResult(
            string createdAt,

            string? finishedAt,

            string id,

            string planId,

            string serviceId,

            string startCommand,

            string? startedAt,

            Pulumi.Render.Services.JobStatus? status)
        {
            CreatedAt = createdAt;
            FinishedAt = finishedAt;
            Id = id;
            PlanId = planId;
            ServiceId = serviceId;
            StartCommand = startCommand;
            StartedAt = startedAt;
            Status = status;
        }
    }
}
