// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getWebhook(args: GetWebhookArgs, opts?: pulumi.InvokeOptions): Promise<outputs.webhooks.WebhookWithCursorpropertieswebhook> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:webhooks:getWebhook", {
        "webhookId": args.webhookId,
    }, opts);
}

export interface GetWebhookArgs {
    /**
     * Unique identifier for the webhook
     */
    webhookId: string;
}
export function getWebhookOutput(args: GetWebhookOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.webhooks.WebhookWithCursorpropertieswebhook> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:webhooks:getWebhook", {
        "webhookId": args.webhookId,
    }, opts);
}

export interface GetWebhookOutputArgs {
    /**
     * Unique identifier for the webhook
     */
    webhookId: pulumi.Input<string>;
}
