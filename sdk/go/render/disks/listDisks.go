// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package disks

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListDisks(ctx *pulumi.Context, args *ListDisksArgs, opts ...pulumi.InvokeOption) (*ListDisksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListDisksResult
	err := ctx.Invoke("render:disks:listDisks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDisksArgs struct {
}

type ListDisksResult struct {
	Items []DiskWithCursor `pulumi:"items"`
}

func ListDisksOutput(ctx *pulumi.Context, args ListDisksOutputArgs, opts ...pulumi.InvokeOption) ListDisksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListDisksResultOutput, error) {
			args := v.(ListDisksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:disks:listDisks", args, ListDisksResultOutput{}, options).(ListDisksResultOutput), nil
		}).(ListDisksResultOutput)
}

type ListDisksOutputArgs struct {
}

func (ListDisksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDisksArgs)(nil)).Elem()
}

type ListDisksResultOutput struct{ *pulumi.OutputState }

func (ListDisksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDisksResult)(nil)).Elem()
}

func (o ListDisksResultOutput) ToListDisksResultOutput() ListDisksResultOutput {
	return o
}

func (o ListDisksResultOutput) ToListDisksResultOutputWithContext(ctx context.Context) ListDisksResultOutput {
	return o
}

func (o ListDisksResultOutput) Items() DiskWithCursorArrayOutput {
	return o.ApplyT(func(v ListDisksResult) []DiskWithCursor { return v.Items }).(DiskWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDisksResultOutput{})
}
