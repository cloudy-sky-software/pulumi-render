// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvalue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KeyValueDetailPlan string

const (
	KeyValueDetailPlanFree     = KeyValueDetailPlan("free")
	KeyValueDetailPlanStarter  = KeyValueDetailPlan("starter")
	KeyValueDetailPlanStandard = KeyValueDetailPlan("standard")
	KeyValueDetailPlanPro      = KeyValueDetailPlan("pro")
	KeyValueDetailPlanProPlus  = KeyValueDetailPlan("pro_plus")
	KeyValueDetailPlanCustom   = KeyValueDetailPlan("custom")
)

type KeyValueDetailPlanOutput struct{ *pulumi.OutputState }

func (KeyValueDetailPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueDetailPlan)(nil)).Elem()
}

func (o KeyValueDetailPlanOutput) ToKeyValueDetailPlanOutput() KeyValueDetailPlanOutput {
	return o
}

func (o KeyValueDetailPlanOutput) ToKeyValueDetailPlanOutputWithContext(ctx context.Context) KeyValueDetailPlanOutput {
	return o
}

func (o KeyValueDetailPlanOutput) ToKeyValueDetailPlanPtrOutput() KeyValueDetailPlanPtrOutput {
	return o.ToKeyValueDetailPlanPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailPlanOutput) ToKeyValueDetailPlanPtrOutputWithContext(ctx context.Context) KeyValueDetailPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueDetailPlan) *KeyValueDetailPlan {
		return &v
	}).(KeyValueDetailPlanPtrOutput)
}

func (o KeyValueDetailPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValueDetailPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValueDetailPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueDetailPlanPtrOutput struct{ *pulumi.OutputState }

func (KeyValueDetailPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueDetailPlan)(nil)).Elem()
}

func (o KeyValueDetailPlanPtrOutput) ToKeyValueDetailPlanPtrOutput() KeyValueDetailPlanPtrOutput {
	return o
}

func (o KeyValueDetailPlanPtrOutput) ToKeyValueDetailPlanPtrOutputWithContext(ctx context.Context) KeyValueDetailPlanPtrOutput {
	return o
}

func (o KeyValueDetailPlanPtrOutput) Elem() KeyValueDetailPlanOutput {
	return o.ApplyT(func(v *KeyValueDetailPlan) KeyValueDetailPlan {
		if v != nil {
			return *v
		}
		var ret KeyValueDetailPlan
		return ret
	}).(KeyValueDetailPlanOutput)
}

func (o KeyValueDetailPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValueDetailPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type KeyValueDetailRegion string

const (
	KeyValueDetailRegionFrankfurt = KeyValueDetailRegion("frankfurt")
	KeyValueDetailRegionOregon    = KeyValueDetailRegion("oregon")
	KeyValueDetailRegionOhio      = KeyValueDetailRegion("ohio")
	KeyValueDetailRegionSingapore = KeyValueDetailRegion("singapore")
	KeyValueDetailRegionVirginia  = KeyValueDetailRegion("virginia")
)

type KeyValueDetailRegionOutput struct{ *pulumi.OutputState }

func (KeyValueDetailRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueDetailRegion)(nil)).Elem()
}

func (o KeyValueDetailRegionOutput) ToKeyValueDetailRegionOutput() KeyValueDetailRegionOutput {
	return o
}

func (o KeyValueDetailRegionOutput) ToKeyValueDetailRegionOutputWithContext(ctx context.Context) KeyValueDetailRegionOutput {
	return o
}

func (o KeyValueDetailRegionOutput) ToKeyValueDetailRegionPtrOutput() KeyValueDetailRegionPtrOutput {
	return o.ToKeyValueDetailRegionPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailRegionOutput) ToKeyValueDetailRegionPtrOutputWithContext(ctx context.Context) KeyValueDetailRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueDetailRegion) *KeyValueDetailRegion {
		return &v
	}).(KeyValueDetailRegionPtrOutput)
}

func (o KeyValueDetailRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValueDetailRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValueDetailRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueDetailRegionPtrOutput struct{ *pulumi.OutputState }

func (KeyValueDetailRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueDetailRegion)(nil)).Elem()
}

func (o KeyValueDetailRegionPtrOutput) ToKeyValueDetailRegionPtrOutput() KeyValueDetailRegionPtrOutput {
	return o
}

func (o KeyValueDetailRegionPtrOutput) ToKeyValueDetailRegionPtrOutputWithContext(ctx context.Context) KeyValueDetailRegionPtrOutput {
	return o
}

func (o KeyValueDetailRegionPtrOutput) Elem() KeyValueDetailRegionOutput {
	return o.ApplyT(func(v *KeyValueDetailRegion) KeyValueDetailRegion {
		if v != nil {
			return *v
		}
		var ret KeyValueDetailRegion
		return ret
	}).(KeyValueDetailRegionOutput)
}

func (o KeyValueDetailRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValueDetailRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueDetailStatus string

const (
	KeyValueDetailStatusCreating              = KeyValueDetailStatus("creating")
	KeyValueDetailStatusAvailable             = KeyValueDetailStatus("available")
	KeyValueDetailStatusUnavailable           = KeyValueDetailStatus("unavailable")
	KeyValueDetailStatusConfigRestart         = KeyValueDetailStatus("config_restart")
	KeyValueDetailStatusSuspended             = KeyValueDetailStatus("suspended")
	KeyValueDetailStatusMaintenanceScheduled  = KeyValueDetailStatus("maintenance_scheduled")
	KeyValueDetailStatusMaintenanceInProgress = KeyValueDetailStatus("maintenance_in_progress")
	KeyValueDetailStatusRecoveryFailed        = KeyValueDetailStatus("recovery_failed")
	KeyValueDetailStatusRecoveryInProgress    = KeyValueDetailStatus("recovery_in_progress")
	KeyValueDetailStatusUnknown               = KeyValueDetailStatus("unknown")
	KeyValueDetailStatusUpdatingInstance      = KeyValueDetailStatus("updating_instance")
)

type KeyValueDetailStatusOutput struct{ *pulumi.OutputState }

func (KeyValueDetailStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueDetailStatus)(nil)).Elem()
}

func (o KeyValueDetailStatusOutput) ToKeyValueDetailStatusOutput() KeyValueDetailStatusOutput {
	return o
}

func (o KeyValueDetailStatusOutput) ToKeyValueDetailStatusOutputWithContext(ctx context.Context) KeyValueDetailStatusOutput {
	return o
}

func (o KeyValueDetailStatusOutput) ToKeyValueDetailStatusPtrOutput() KeyValueDetailStatusPtrOutput {
	return o.ToKeyValueDetailStatusPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailStatusOutput) ToKeyValueDetailStatusPtrOutputWithContext(ctx context.Context) KeyValueDetailStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueDetailStatus) *KeyValueDetailStatus {
		return &v
	}).(KeyValueDetailStatusPtrOutput)
}

func (o KeyValueDetailStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValueDetailStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValueDetailStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueDetailStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueDetailStatusPtrOutput struct{ *pulumi.OutputState }

func (KeyValueDetailStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueDetailStatus)(nil)).Elem()
}

func (o KeyValueDetailStatusPtrOutput) ToKeyValueDetailStatusPtrOutput() KeyValueDetailStatusPtrOutput {
	return o
}

func (o KeyValueDetailStatusPtrOutput) ToKeyValueDetailStatusPtrOutputWithContext(ctx context.Context) KeyValueDetailStatusPtrOutput {
	return o
}

func (o KeyValueDetailStatusPtrOutput) Elem() KeyValueDetailStatusOutput {
	return o.ApplyT(func(v *KeyValueDetailStatus) KeyValueDetailStatus {
		if v != nil {
			return *v
		}
		var ret KeyValueDetailStatus
		return ret
	}).(KeyValueDetailStatusOutput)
}

func (o KeyValueDetailStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueDetailStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValueDetailStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValuePlan string

const (
	KeyValuePlanFree     = KeyValuePlan("free")
	KeyValuePlanStarter  = KeyValuePlan("starter")
	KeyValuePlanStandard = KeyValuePlan("standard")
	KeyValuePlanPro      = KeyValuePlan("pro")
	KeyValuePlanProPlus  = KeyValuePlan("pro_plus")
	KeyValuePlanCustom   = KeyValuePlan("custom")
)

type KeyValuePlanOutput struct{ *pulumi.OutputState }

func (KeyValuePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValuePlan)(nil)).Elem()
}

func (o KeyValuePlanOutput) ToKeyValuePlanOutput() KeyValuePlanOutput {
	return o
}

func (o KeyValuePlanOutput) ToKeyValuePlanOutputWithContext(ctx context.Context) KeyValuePlanOutput {
	return o
}

func (o KeyValuePlanOutput) ToKeyValuePlanPtrOutput() KeyValuePlanPtrOutput {
	return o.ToKeyValuePlanPtrOutputWithContext(context.Background())
}

func (o KeyValuePlanOutput) ToKeyValuePlanPtrOutputWithContext(ctx context.Context) KeyValuePlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValuePlan) *KeyValuePlan {
		return &v
	}).(KeyValuePlanPtrOutput)
}

func (o KeyValuePlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValuePlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValuePlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValuePlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValuePlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValuePlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValuePlanPtrOutput struct{ *pulumi.OutputState }

func (KeyValuePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValuePlan)(nil)).Elem()
}

func (o KeyValuePlanPtrOutput) ToKeyValuePlanPtrOutput() KeyValuePlanPtrOutput {
	return o
}

func (o KeyValuePlanPtrOutput) ToKeyValuePlanPtrOutputWithContext(ctx context.Context) KeyValuePlanPtrOutput {
	return o
}

func (o KeyValuePlanPtrOutput) Elem() KeyValuePlanOutput {
	return o.ApplyT(func(v *KeyValuePlan) KeyValuePlan {
		if v != nil {
			return *v
		}
		var ret KeyValuePlan
		return ret
	}).(KeyValuePlanOutput)
}

func (o KeyValuePlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValuePlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValuePlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type KeyValueRegion string

const (
	KeyValueRegionFrankfurt = KeyValueRegion("frankfurt")
	KeyValueRegionOregon    = KeyValueRegion("oregon")
	KeyValueRegionOhio      = KeyValueRegion("ohio")
	KeyValueRegionSingapore = KeyValueRegion("singapore")
	KeyValueRegionVirginia  = KeyValueRegion("virginia")
)

type KeyValueRegionOutput struct{ *pulumi.OutputState }

func (KeyValueRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueRegion)(nil)).Elem()
}

func (o KeyValueRegionOutput) ToKeyValueRegionOutput() KeyValueRegionOutput {
	return o
}

func (o KeyValueRegionOutput) ToKeyValueRegionOutputWithContext(ctx context.Context) KeyValueRegionOutput {
	return o
}

func (o KeyValueRegionOutput) ToKeyValueRegionPtrOutput() KeyValueRegionPtrOutput {
	return o.ToKeyValueRegionPtrOutputWithContext(context.Background())
}

func (o KeyValueRegionOutput) ToKeyValueRegionPtrOutputWithContext(ctx context.Context) KeyValueRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueRegion) *KeyValueRegion {
		return &v
	}).(KeyValueRegionPtrOutput)
}

func (o KeyValueRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValueRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValueRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueRegionPtrOutput struct{ *pulumi.OutputState }

func (KeyValueRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueRegion)(nil)).Elem()
}

func (o KeyValueRegionPtrOutput) ToKeyValueRegionPtrOutput() KeyValueRegionPtrOutput {
	return o
}

func (o KeyValueRegionPtrOutput) ToKeyValueRegionPtrOutputWithContext(ctx context.Context) KeyValueRegionPtrOutput {
	return o
}

func (o KeyValueRegionPtrOutput) Elem() KeyValueRegionOutput {
	return o.ApplyT(func(v *KeyValueRegion) KeyValueRegion {
		if v != nil {
			return *v
		}
		var ret KeyValueRegion
		return ret
	}).(KeyValueRegionOutput)
}

func (o KeyValueRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValueRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueStatus string

const (
	KeyValueStatusCreating              = KeyValueStatus("creating")
	KeyValueStatusAvailable             = KeyValueStatus("available")
	KeyValueStatusUnavailable           = KeyValueStatus("unavailable")
	KeyValueStatusConfigRestart         = KeyValueStatus("config_restart")
	KeyValueStatusSuspended             = KeyValueStatus("suspended")
	KeyValueStatusMaintenanceScheduled  = KeyValueStatus("maintenance_scheduled")
	KeyValueStatusMaintenanceInProgress = KeyValueStatus("maintenance_in_progress")
	KeyValueStatusRecoveryFailed        = KeyValueStatus("recovery_failed")
	KeyValueStatusRecoveryInProgress    = KeyValueStatus("recovery_in_progress")
	KeyValueStatusUnknown               = KeyValueStatus("unknown")
	KeyValueStatusUpdatingInstance      = KeyValueStatus("updating_instance")
)

type KeyValueStatusOutput struct{ *pulumi.OutputState }

func (KeyValueStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueStatus)(nil)).Elem()
}

func (o KeyValueStatusOutput) ToKeyValueStatusOutput() KeyValueStatusOutput {
	return o
}

func (o KeyValueStatusOutput) ToKeyValueStatusOutputWithContext(ctx context.Context) KeyValueStatusOutput {
	return o
}

func (o KeyValueStatusOutput) ToKeyValueStatusPtrOutput() KeyValueStatusPtrOutput {
	return o.ToKeyValueStatusPtrOutputWithContext(context.Background())
}

func (o KeyValueStatusOutput) ToKeyValueStatusPtrOutputWithContext(ctx context.Context) KeyValueStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueStatus) *KeyValueStatus {
		return &v
	}).(KeyValueStatusPtrOutput)
}

func (o KeyValueStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyValueStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyValueStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyValueStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyValueStatusPtrOutput struct{ *pulumi.OutputState }

func (KeyValueStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueStatus)(nil)).Elem()
}

func (o KeyValueStatusPtrOutput) ToKeyValueStatusPtrOutput() KeyValueStatusPtrOutput {
	return o
}

func (o KeyValueStatusPtrOutput) ToKeyValueStatusPtrOutputWithContext(ctx context.Context) KeyValueStatusPtrOutput {
	return o
}

func (o KeyValueStatusPtrOutput) Elem() KeyValueStatusOutput {
	return o.ApplyT(func(v *KeyValueStatus) KeyValueStatus {
		if v != nil {
			return *v
		}
		var ret KeyValueStatus
		return ret
	}).(KeyValueStatusOutput)
}

func (o KeyValueStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyValueStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyValueStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The eviction policy for the Key Value instance
type MaxmemoryPolicy string

const (
	MaxmemoryPolicyNoeviction     = MaxmemoryPolicy("noeviction")
	MaxmemoryPolicyAllkeysLfu     = MaxmemoryPolicy("allkeys_lfu")
	MaxmemoryPolicyAllkeysLru     = MaxmemoryPolicy("allkeys_lru")
	MaxmemoryPolicyAllkeysRandom  = MaxmemoryPolicy("allkeys_random")
	MaxmemoryPolicyVolatileLfu    = MaxmemoryPolicy("volatile_lfu")
	MaxmemoryPolicyVolatileLru    = MaxmemoryPolicy("volatile_lru")
	MaxmemoryPolicyVolatileRandom = MaxmemoryPolicy("volatile_random")
	MaxmemoryPolicyVolatileTtl    = MaxmemoryPolicy("volatile_ttl")
)

func (MaxmemoryPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxmemoryPolicy)(nil)).Elem()
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput {
	return pulumi.ToOutput(e).(MaxmemoryPolicyOutput)
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyOutputWithContext(ctx context.Context) MaxmemoryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MaxmemoryPolicyOutput)
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return e.ToMaxmemoryPolicyPtrOutputWithContext(context.Background())
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return MaxmemoryPolicy(e).ToMaxmemoryPolicyOutputWithContext(ctx).ToMaxmemoryPolicyPtrOutputWithContext(ctx)
}

func (e MaxmemoryPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaxmemoryPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaxmemoryPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaxmemoryPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MaxmemoryPolicyOutput struct{ *pulumi.OutputState }

func (MaxmemoryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxmemoryPolicy)(nil)).Elem()
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput {
	return o
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyOutputWithContext(ctx context.Context) MaxmemoryPolicyOutput {
	return o
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return o.ToMaxmemoryPolicyPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaxmemoryPolicy) *MaxmemoryPolicy {
		return &v
	}).(MaxmemoryPolicyPtrOutput)
}

func (o MaxmemoryPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaxmemoryPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaxmemoryPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaxmemoryPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaxmemoryPolicyPtrOutput struct{ *pulumi.OutputState }

func (MaxmemoryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxmemoryPolicy)(nil)).Elem()
}

func (o MaxmemoryPolicyPtrOutput) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return o
}

func (o MaxmemoryPolicyPtrOutput) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return o
}

func (o MaxmemoryPolicyPtrOutput) Elem() MaxmemoryPolicyOutput {
	return o.ApplyT(func(v *MaxmemoryPolicy) MaxmemoryPolicy {
		if v != nil {
			return *v
		}
		var ret MaxmemoryPolicy
		return ret
	}).(MaxmemoryPolicyOutput)
}

func (o MaxmemoryPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaxmemoryPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MaxmemoryPolicyInput is an input type that accepts values of the MaxmemoryPolicy enum
// A concrete instance of `MaxmemoryPolicyInput` can be one of the following:
//
//	MaxmemoryPolicyNoeviction
//	MaxmemoryPolicyAllkeysLfu
//	MaxmemoryPolicyAllkeysLru
//	MaxmemoryPolicyAllkeysRandom
//	MaxmemoryPolicyVolatileLfu
//	MaxmemoryPolicyVolatileLru
//	MaxmemoryPolicyVolatileRandom
//	MaxmemoryPolicyVolatileTtl
type MaxmemoryPolicyInput interface {
	pulumi.Input

	ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput
	ToMaxmemoryPolicyOutputWithContext(context.Context) MaxmemoryPolicyOutput
}

var maxmemoryPolicyPtrType = reflect.TypeOf((**MaxmemoryPolicy)(nil)).Elem()

type MaxmemoryPolicyPtrInput interface {
	pulumi.Input

	ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput
	ToMaxmemoryPolicyPtrOutputWithContext(context.Context) MaxmemoryPolicyPtrOutput
}

type maxmemoryPolicyPtr string

func MaxmemoryPolicyPtr(v string) MaxmemoryPolicyPtrInput {
	return (*maxmemoryPolicyPtr)(&v)
}

func (*maxmemoryPolicyPtr) ElementType() reflect.Type {
	return maxmemoryPolicyPtrType
}

func (in *maxmemoryPolicyPtr) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return pulumi.ToOutput(in).(MaxmemoryPolicyPtrOutput)
}

func (in *maxmemoryPolicyPtr) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MaxmemoryPolicyPtrOutput)
}

type OwnerType string

const (
	OwnerTypeUser = OwnerType("user")
	OwnerTypeTeam = OwnerType("team")
)

type OwnerTypeOutput struct{ *pulumi.OutputState }

func (OwnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (o OwnerTypeOutput) ToOwnerTypeOutput() OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnerType) *OwnerType {
		return &v
	}).(OwnerTypePtrOutput)
}

func (o OwnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OwnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerTypePtrOutput struct{ *pulumi.OutputState }

func (OwnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerType)(nil)).Elem()
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) Elem() OwnerTypeOutput {
	return o.ApplyT(func(v *OwnerType) OwnerType {
		if v != nil {
			return *v
		}
		var ret OwnerType
		return ret
	}).(OwnerTypeOutput)
}

func (o OwnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OwnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Plan string

const (
	PlanFree     = Plan("free")
	PlanStarter  = Plan("starter")
	PlanStandard = Plan("standard")
	PlanPro      = Plan("pro")
	PlanProPlus  = Plan("pro_plus")
	PlanCustom   = Plan("custom")
)

func (Plan) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (e Plan) ToPlanOutput() PlanOutput {
	return pulumi.ToOutput(e).(PlanOutput)
}

func (e Plan) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlanOutput)
}

func (e Plan) ToPlanPtrOutput() PlanPtrOutput {
	return e.ToPlanPtrOutputWithContext(context.Background())
}

func (e Plan) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return Plan(e).ToPlanOutputWithContext(ctx).ToPlanPtrOutputWithContext(ctx)
}

func (e Plan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Plan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

func (o PlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan {
		if v != nil {
			return *v
		}
		var ret Plan
		return ret
	}).(PlanOutput)
}

func (o PlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Plan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlanInput is an input type that accepts values of the Plan enum
// A concrete instance of `PlanInput` can be one of the following:
//
//	PlanFree
//	PlanStarter
//	PlanStandard
//	PlanPro
//	PlanProPlus
//	PlanCustom
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

var planPtrType = reflect.TypeOf((**Plan)(nil)).Elem()

type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtr string

func PlanPtr(v string) PlanPtrInput {
	return (*planPtr)(&v)
}

func (*planPtr) ElementType() reflect.Type {
	return planPtrType
}

func (in *planPtr) ToPlanPtrOutput() PlanPtrOutput {
	return pulumi.ToOutput(in).(PlanPtrOutput)
}

func (in *planPtr) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlanPtrOutput)
}

type RedisDetailpropertiesmaintenanceState string

const (
	RedisDetailpropertiesmaintenanceStateScheduled       = RedisDetailpropertiesmaintenanceState("scheduled")
	RedisDetailpropertiesmaintenanceStateInProgress      = RedisDetailpropertiesmaintenanceState("in_progress")
	RedisDetailpropertiesmaintenanceStateUserFixRequired = RedisDetailpropertiesmaintenanceState("user_fix_required")
	RedisDetailpropertiesmaintenanceStateCancelled       = RedisDetailpropertiesmaintenanceState("cancelled")
	RedisDetailpropertiesmaintenanceStateSucceeded       = RedisDetailpropertiesmaintenanceState("succeeded")
	RedisDetailpropertiesmaintenanceStateFailed          = RedisDetailpropertiesmaintenanceState("failed")
)

type RedisDetailpropertiesmaintenanceStateOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenanceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailpropertiesmaintenanceState)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStateOutput() RedisDetailpropertiesmaintenanceStateOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStateOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStateOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutput() RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o.ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailpropertiesmaintenanceState) *RedisDetailpropertiesmaintenanceState {
		return &v
	}).(RedisDetailpropertiesmaintenanceStatePtrOutput)
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailpropertiesmaintenanceState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailpropertiesmaintenanceState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailpropertiesmaintenanceStatePtrOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenanceStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailpropertiesmaintenanceState)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutput() RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) Elem() RedisDetailpropertiesmaintenanceStateOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenanceState) RedisDetailpropertiesmaintenanceState {
		if v != nil {
			return *v
		}
		var ret RedisDetailpropertiesmaintenanceState
		return ret
	}).(RedisDetailpropertiesmaintenanceStateOutput)
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailpropertiesmaintenanceState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type Region string

const (
	RegionFrankfurt = Region("frankfurt")
	RegionOregon    = Region("oregon")
	RegionOhio      = Region("ohio")
	RegionSingapore = Region("singapore")
	RegionVirginia  = Region("virginia")
)

type RegionOutput struct{ *pulumi.OutputState }

func (RegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Region)(nil)).Elem()
}

func (o RegionOutput) ToRegionOutput() RegionOutput {
	return o
}

func (o RegionOutput) ToRegionOutputWithContext(ctx context.Context) RegionOutput {
	return o
}

func (o RegionOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o.ToRegionPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Region) *Region {
		return &v
	}).(RegionPtrOutput)
}

func (o RegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionPtrOutput struct{ *pulumi.OutputState }

func (RegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Region)(nil)).Elem()
}

func (o RegionPtrOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) Elem() RegionOutput {
	return o.ApplyT(func(v *Region) Region {
		if v != nil {
			return *v
		}
		var ret Region
		return ret
	}).(RegionOutput)
}

func (o RegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Region) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Status string

const (
	StatusCreating              = Status("creating")
	StatusAvailable             = Status("available")
	StatusUnavailable           = Status("unavailable")
	StatusConfigRestart         = Status("config_restart")
	StatusSuspended             = Status("suspended")
	StatusMaintenanceScheduled  = Status("maintenance_scheduled")
	StatusMaintenanceInProgress = Status("maintenance_in_progress")
	StatusRecoveryFailed        = Status("recovery_failed")
	StatusRecoveryInProgress    = Status("recovery_in_progress")
	StatusUnknown               = Status("unknown")
	StatusUpdatingInstance      = Status("updating_instance")
)

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaxmemoryPolicyInput)(nil)).Elem(), MaxmemoryPolicy("noeviction"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaxmemoryPolicyPtrInput)(nil)).Elem(), MaxmemoryPolicy("noeviction"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlanInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlanPtrInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterOutputType(KeyValueDetailPlanOutput{})
	pulumi.RegisterOutputType(KeyValueDetailPlanPtrOutput{})
	pulumi.RegisterOutputType(KeyValueDetailRegionOutput{})
	pulumi.RegisterOutputType(KeyValueDetailRegionPtrOutput{})
	pulumi.RegisterOutputType(KeyValueDetailStatusOutput{})
	pulumi.RegisterOutputType(KeyValueDetailStatusPtrOutput{})
	pulumi.RegisterOutputType(KeyValuePlanOutput{})
	pulumi.RegisterOutputType(KeyValuePlanPtrOutput{})
	pulumi.RegisterOutputType(KeyValueRegionOutput{})
	pulumi.RegisterOutputType(KeyValueRegionPtrOutput{})
	pulumi.RegisterOutputType(KeyValueStatusOutput{})
	pulumi.RegisterOutputType(KeyValueStatusPtrOutput{})
	pulumi.RegisterOutputType(MaxmemoryPolicyOutput{})
	pulumi.RegisterOutputType(MaxmemoryPolicyPtrOutput{})
	pulumi.RegisterOutputType(OwnerTypeOutput{})
	pulumi.RegisterOutputType(OwnerTypePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenanceStateOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenanceStatePtrOutput{})
	pulumi.RegisterOutputType(RegionOutput{})
	pulumi.RegisterOutputType(RegionPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
}
