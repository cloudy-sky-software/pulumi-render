// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listDeploys(args: ListDeploysArgs, opts?: pulumi.InvokeOptions): Promise<ListDeploysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:listDeploys", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListDeploysArgs {
    /**
     * The ID of the service
     */
    serviceId: string;
}

export interface ListDeploysResult {
    readonly items: outputs.services.DeployWithCursor[];
}
export function listDeploysOutput(args: ListDeploysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListDeploysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:services:listDeploys", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListDeploysOutputArgs {
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
