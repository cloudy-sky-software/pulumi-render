// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgres

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListPostgresExport(ctx *pulumi.Context, args *ListPostgresExportArgs, opts ...pulumi.InvokeOption) (*ListPostgresExportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListPostgresExportResult
	err := ctx.Invoke("render:postgres:listPostgresExport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListPostgresExportArgs struct {
	PostgresId string `pulumi:"postgresId"`
}

type ListPostgresExportResult struct {
	Items []ListPostgresExportItemProperties `pulumi:"items"`
}

func ListPostgresExportOutput(ctx *pulumi.Context, args ListPostgresExportOutputArgs, opts ...pulumi.InvokeOption) ListPostgresExportResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListPostgresExportResultOutput, error) {
			args := v.(ListPostgresExportArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:postgres:listPostgresExport", args, ListPostgresExportResultOutput{}, options).(ListPostgresExportResultOutput), nil
		}).(ListPostgresExportResultOutput)
}

type ListPostgresExportOutputArgs struct {
	PostgresId pulumi.StringInput `pulumi:"postgresId"`
}

func (ListPostgresExportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPostgresExportArgs)(nil)).Elem()
}

type ListPostgresExportResultOutput struct{ *pulumi.OutputState }

func (ListPostgresExportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPostgresExportResult)(nil)).Elem()
}

func (o ListPostgresExportResultOutput) ToListPostgresExportResultOutput() ListPostgresExportResultOutput {
	return o
}

func (o ListPostgresExportResultOutput) ToListPostgresExportResultOutputWithContext(ctx context.Context) ListPostgresExportResultOutput {
	return o
}

func (o ListPostgresExportResultOutput) Items() ListPostgresExportItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListPostgresExportResult) []ListPostgresExportItemProperties { return v.Items }).(ListPostgresExportItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListPostgresExportResultOutput{})
}
