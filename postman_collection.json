{
  "info": {
    "_postman_id": "74fa79b0-3276-445b-9d26-2848f525a4d7",
    "name": "Render Public API",
    "description": "[https://render.com/docs/api](https://render.com/docs/api)\n\nContact Support:  \nName: Render API  \nEmail: [support@render.com](mailto:support@render.com)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Owners",
      "item": [
        {
          "name": "List authorized users and teams",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/owners?name=sed aliqua qui anim&name=do&email=sed aliqua qui anim&email=do&cursor=Lorem amet sin&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["owners"],
              "query": [
                {
                  "key": "name",
                  "value": "sed aliqua qui anim"
                },
                {
                  "key": "name",
                  "value": "do"
                },
                {
                  "key": "email",
                  "value": "sed aliqua qui anim"
                },
                {
                  "key": "email",
                  "value": "do"
                },
                {
                  "key": "cursor",
                  "value": "Lorem amet sin",
                  "description": "Cursor to begin retrieving entries for this query"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Max number of items that can be returned"
                }
              ]
            },
            "description": "[https://api-docs.render.com/reference/get-owners](https://api-docs.render.com/reference/get-owners)"
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"owner\": {\n      \"id\": \"tempor labore voluptate velit dolore\",\n      \"name\": \"amet enim qui adipisicing\",\n      \"email\": \"quis\",\n      \"type\": \"user\"\n    },\n    \"cursor\": \"incididunt labore occaecat eiusmod dolore\"\n  },\n  {\n    \"owner\": {\n      \"id\": \"anim ea aute\",\n      \"name\": \"enim nostrud\",\n      \"email\": \"occa\",\n      \"type\": \"team\"\n    },\n    \"cursor\": \"consectetur ut\"\n  }\n]"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners?name=non irure&name=incididunt adipisicing tempor mollit&email=non irure&email=incididunt adipisicing tempor mollit&cursor=Lorem amet sin&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners"],
                  "query": [
                    {
                      "key": "name",
                      "value": "non irure"
                    },
                    {
                      "key": "name",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "email",
                      "value": "non irure"
                    },
                    {
                      "key": "email",
                      "value": "incididunt adipisicing tempor mollit"
                    },
                    {
                      "key": "cursor",
                      "value": "Lorem amet sin"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            }
          ]
        },
        {
          "name": "Retrieve user or team",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/owners/:ownerId",
              "host": ["{{baseUrl}}"],
              "path": ["owners", ":ownerId"],
              "variable": [
                {
                  "key": "ownerId",
                  "value": "Lorem amet sin",
                  "description": "(Required) The ID of the user or team"
                }
              ]
            },
            "description": "[https://api-docs.render.com/reference/get-owner](https://api-docs.render.com/reference/get-owner)"
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"nisi aute veniam elit\",\n  \"name\": \"labore\",\n  \"email\": \"id adipisicing Excepteur\",\n  \"type\": \"user\"\n}"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Unable to find the requested resource.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "The requested resource is no longer available.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Gone",
              "code": 410,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/owners/:ownerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["owners", ":ownerId"],
                  "variable": [
                    {
                      "key": "ownerId",
                      "value": "Lorem amet sin",
                      "description": "(Required) The ID of the user or team"
                    }
                  ]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"dolor\",\n  \"message\": \"sunt Excepteur deserunt dolor\"\n}"
            }
          ]
        }
      ],
      "description": "[https://api-docs.render.com/reference/owners-1](https://api-docs.render.com/reference/owners-1)"
    },
    {
      "name": "services",
      "item": [
        {
          "name": "{serviceId}",
          "item": [
            {
              "name": "deploys",
              "item": [
                {
                  "name": "{deployId}",
                  "item": [
                    {
                      "name": "cancel",
                      "item": [
                        {
                          "name": "Cancel deploy",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json",
                                "uuid": "17ae6785-523a-4a9b-b04b-3228df9432af"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId",
                                "cancel"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId",
                                  "value": "<string>",
                                  "description": "(Required) The ID of the service",
                                  "uuid": "18fa7013-2b2b-45f1-a9ce-3426d5be5ec2"
                                },
                                {
                                  "key": "deployId",
                                  "value": "<string>",
                                  "description": "(Required) The ID of the deploy",
                                  "uuid": "40d263b4-16e9-4ba5-ad58-d22bbe563161"
                                }
                              ]
                            },
                            "description": "This endpoint allows you to cancel a running deploy. Canceling cronjob deploys is currently not supported."
                          },
                          "response": [
                            {
                              "name": "OK",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"commit\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"image\": {\n    \"ref\": \"<string>\",\n    \"sha\": \"<string>\",\n    \"registryCredential\": \"<string>\"\n  },\n  \"status\": \"live\",\n  \"trigger\": \"api\",\n  \"finishedAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
                            },
                            {
                              "name": "The request could not be understood by the server.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Authorization information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "You do not have permissions for the requested resource.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unable to find the requested resource.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Rate limit has been surpassed.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Too Many Requests",
                              "code": 429,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "An unexpected server error has occurred.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Server currently unavailable.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "deploys",
                                    ":deployId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "deployId"
                                    }
                                  ]
                                }
                              },
                              "status": "Service Unavailable",
                              "code": 503,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve deploy",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json",
                            "uuid": "54d5ad53-b2e0-413b-a0c0-dcc1fe4dd46e"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "services",
                            ":serviceId",
                            "deploys",
                            ":deployId"
                          ],
                          "variable": [
                            {
                              "key": "serviceId",
                              "value": "<string>",
                              "description": "(Required) The ID of the service",
                              "uuid": "d98c2313-dd31-4a0a-894a-a0cdfb2987ce"
                            },
                            {
                              "key": "deployId",
                              "value": "<string>",
                              "description": "(Required) The ID of the deploy",
                              "uuid": "4404b58f-d8c5-4be1-8ad8-e810804feea4"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "OK",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"commit\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"image\": {\n    \"ref\": \"<string>\",\n    \"sha\": \"<string>\",\n    \"registryCredential\": \"<string>\"\n  },\n  \"status\": \"live\",\n  \"trigger\": \"api\",\n  \"finishedAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
                        },
                        {
                          "name": "Authorization information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "You do not have permissions for the requested resource.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to find the requested resource.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to generate preferred media types as specified by Accept request header.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Not Acceptable",
                          "code": 406,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "The requested resource is no longer available.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Gone",
                          "code": 410,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Rate limit has been surpassed.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Too Many Requests",
                          "code": 429,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "An unexpected server error has occurred.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Server currently unavailable.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/deploys/:deployId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "deploys",
                                ":deployId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "deployId"
                                }
                              ]
                            }
                          },
                          "status": "Service Unavailable",
                          "code": 503,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List deploys",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "85e1331c-6815-4c70-89b9-2e802f0bab0a"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "deploys"],
                      "query": [
                        {
                          "key": "createdBefore",
                          "value": "<dateTime>",
                          "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "createdAfter",
                          "value": "<dateTime>",
                          "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "updatedBefore",
                          "value": "<dateTime>",
                          "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "updatedAfter",
                          "value": "<dateTime>",
                          "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "finishedBefore",
                          "value": "<dateTime>",
                          "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "finishedAfter",
                          "value": "<dateTime>",
                          "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "5b2b219d-e2ca-42d7-8891-d227576906fc"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"deploy\": {\n      \"id\": \"<string>\",\n      \"commit\": {\n        \"id\": \"<string>\",\n        \"message\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      \"image\": {\n        \"ref\": \"<string>\",\n        \"sha\": \"<string>\",\n        \"registryCredential\": \"<string>\"\n      },\n      \"status\": \"live\",\n      \"trigger\": \"rollback\",\n      \"finishedAt\": \"<dateTime>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"deploy\": {\n      \"id\": \"<string>\",\n      \"commit\": {\n        \"id\": \"<string>\",\n        \"message\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      \"image\": {\n        \"ref\": \"<string>\",\n        \"sha\": \"<string>\",\n        \"registryCredential\": \"<string>\"\n      },\n      \"status\": \"deactivated\",\n      \"trigger\": \"new_commit\",\n      \"finishedAt\": \"<dateTime>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys?createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "query": [
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "updatedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Trigger a deploy",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "000b8ef4-7ed8-4b6a-90e4-129e13c787c4"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "0efae841-fee5-456a-a922-755b5130e3cd"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/deploys",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "deploys"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "0df26df5-c5d7-4d57-af39-6c5fae70893f"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"commit\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"image\": {\n    \"ref\": \"<string>\",\n    \"sha\": \"<string>\",\n    \"registryCredential\": \"<string>\"\n  },\n  \"status\": \"live\",\n  \"trigger\": \"api\",\n  \"finishedAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The current state of the resource conflicts with this request.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"clearCache\": \"do_not_clear\",\n  \"commitId\": \"<string>\",\n  \"imageUrl\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/deploys",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "deploys"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rollback",
              "item": [
                {
                  "name": "Rollback to a previous deploy",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "3bc309d9-a657-41e5-9dba-24d1e8f83770"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "f9501820-66f9-4e43-8139-2e5bbcbecb5c"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"deployId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/rollback",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "rollback"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "1d40c488-b4c0-415b-ae03-b915b6f5d926"
                        }
                      ]
                    },
                    "description": "Trigger a rollback to a previous deploy"
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"commit\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"image\": {\n    \"ref\": \"<string>\",\n    \"sha\": \"<string>\",\n    \"registryCredential\": \"<string>\"\n  },\n  \"status\": \"live\",\n  \"trigger\": \"api\",\n  \"finishedAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"deployId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/rollback",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "rollback"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "env-vars",
              "item": [
                {
                  "name": "Retrieve environment variables",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "15faa96e-db73-4f31-b3e2-bd3f98ec178a"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "env-vars"],
                      "query": [
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "3cde7218-9b16-4113-a0e0-2324d2445337"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"envVar\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"envVar\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars?cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update environment variables",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "802c656e-bf05-4bdd-ba74-1857fb34d9de"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "e01348de-32f6-4c02-910b-43abd33fb38f"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "env-vars"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "4d3e5c4c-1e28-4d80-b0b7-bd8eee5cc45a"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"envVar\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"envVar\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/env-vars",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "env-vars"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "headers",
              "item": [
                {
                  "name": "Retrieve headers",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "4510c10f-b560-42fc-a136-87e99912e9d7"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "headers"],
                      "query": [
                        {
                          "key": "path",
                          "value": "<string>,<string>",
                          "description": "Filter for specific paths that headers apply to"
                        },
                        {
                          "key": "name",
                          "value": "<string>,<string>",
                          "description": "Filter for header names"
                        },
                        {
                          "key": "value",
                          "value": "<string>,<string>",
                          "description": "Filter for header values"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "3782e574-8618-4d67-93df-77147e8a9823"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"headers\": {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"headers\": {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/headers?path=<string>,<string>&name=<string>,<string>&value=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "headers"],
                          "query": [
                            {
                              "key": "path",
                              "value": "<string>,<string>",
                              "description": "Filter for specific paths that headers apply to"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for header names"
                            },
                            {
                              "key": "value",
                              "value": "<string>,<string>",
                              "description": "Filter for header values"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "routes",
              "item": [
                {
                  "name": "Retrieve redirect and rewrite rules",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "b0563921-9ed3-404f-9acb-7868c8696c9d"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "routes"],
                      "query": [
                        {
                          "key": "type",
                          "value": "rewrite,redirect",
                          "description": "Filter for the type of route rule"
                        },
                        {
                          "key": "source",
                          "value": "<string>,<string>",
                          "description": "Filter for the source path of the route"
                        },
                        {
                          "key": "destination",
                          "value": "<string>,<string>",
                          "description": "Filter for the destination path of the route"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "3ebfde71-117b-44f1-8b6e-9ac5b45ea675"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"routes\": {\n      \"type\": \"redirect\",\n      \"source\": \"<string>\",\n      \"destination\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"routes\": {\n      \"type\": \"redirect\",\n      \"source\": \"<string>\",\n      \"destination\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/routes?type=rewrite,redirect&source=<string>,<string>&destination=<string>,<string>&cursor=<string>&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "routes"],
                          "query": [
                            {
                              "key": "type",
                              "value": "rewrite,redirect",
                              "description": "Filter for the type of route rule"
                            },
                            {
                              "key": "source",
                              "value": "<string>,<string>",
                              "description": "Filter for the source path of the route"
                            },
                            {
                              "key": "destination",
                              "value": "<string>,<string>",
                              "description": "Filter for the destination path of the route"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "custom-domains",
              "item": [
                {
                  "name": "{customDomainIdOrName}",
                  "item": [
                    {
                      "name": "verify",
                      "item": [
                        {
                          "name": "Verify DNS configuration",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json",
                                "uuid": "c1150b9b-4682-477d-9c36-0311a1136070"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName",
                                "verify"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId",
                                  "value": "<string>",
                                  "description": "(Required) The ID of the service",
                                  "uuid": "e8fca9bc-acc5-4f82-9bf0-e7b0aca18cf8"
                                },
                                {
                                  "key": "customDomainIdOrName",
                                  "value": "<string>",
                                  "description": "(Required) The ID or name of the custom domain",
                                  "uuid": "ac1fb40f-160c-493e-985e-443de983eab5"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Custom domain verification triggered",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Accepted",
                              "code": 202,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": ""
                            },
                            {
                              "name": "The request could not be understood by the server.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Authorization information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "You do not have permissions for the requested resource.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unable to find the requested resource.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unable to generate preferred media types as specified by Accept request header.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Acceptable",
                              "code": 406,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "The requested resource is no longer available.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Gone",
                              "code": 410,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Rate limit has been surpassed.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Too Many Requests",
                              "code": 429,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "An unexpected server error has occurred.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Server currently unavailable.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName/verify",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "custom-domains",
                                    ":customDomainIdOrName",
                                    "verify"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "customDomainIdOrName"
                                    }
                                  ]
                                }
                              },
                              "status": "Service Unavailable",
                              "code": 503,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve custom domain",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json",
                            "uuid": "fe45424e-afa7-422e-a99a-befcf0d30d6e"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "services",
                            ":serviceId",
                            "custom-domains",
                            ":customDomainIdOrName"
                          ],
                          "variable": [
                            {
                              "key": "serviceId",
                              "value": "<string>",
                              "description": "(Required) The ID of the service",
                              "uuid": "f3af6782-be3c-4637-a7c7-0fa9b828b8d7"
                            },
                            {
                              "key": "customDomainIdOrName",
                              "value": "<string>",
                              "description": "(Required) The ID or name of the custom domain",
                              "uuid": "6baafc61-b288-4a06-a8e8-bd813e0342d2"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "OK",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"domainType\": \"subdomain\",\n  \"publicSuffix\": \"<string>\",\n  \"redirectForName\": \"<string>\",\n  \"verificationStatus\": \"unverified\",\n  \"createdAt\": \"<dateTime>\",\n  \"server\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "The request could not be understood by the server.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authorization information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "You do not have permissions for the requested resource.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to find the requested resource.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to generate preferred media types as specified by Accept request header.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Not Acceptable",
                          "code": 406,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "The requested resource is no longer available.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Gone",
                          "code": 410,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Rate limit has been surpassed.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Too Many Requests",
                          "code": 429,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "An unexpected server error has occurred.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Server currently unavailable.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Service Unavailable",
                          "code": 503,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete custom domain",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json",
                            "uuid": "04cf4578-3e7b-4193-bb75-2789f9a6fcbb"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "services",
                            ":serviceId",
                            "custom-domains",
                            ":customDomainIdOrName"
                          ],
                          "variable": [
                            {
                              "key": "serviceId",
                              "value": "<string>",
                              "description": "(Required) The ID of the service",
                              "uuid": "88b47096-518b-4e4d-842a-ecc69d134f1e"
                            },
                            {
                              "key": "customDomainIdOrName",
                              "value": "<string>",
                              "description": "(Required) The ID or name of the custom domain",
                              "uuid": "1b810c5d-6e4c-45d5-b5e0-912ed0801a4b"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Custom domain deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "The request could not be understood by the server.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authorization information is missing or invalid.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "You do not have permissions for the requested resource.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to find the requested resource.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to generate preferred media types as specified by Accept request header.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Not Acceptable",
                          "code": 406,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "The requested resource is no longer available.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Gone",
                          "code": 410,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Rate limit has been surpassed.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Too Many Requests",
                          "code": 429,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "An unexpected server error has occurred.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Server currently unavailable.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/custom-domains/:customDomainIdOrName",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "custom-domains",
                                ":customDomainIdOrName"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "customDomainIdOrName"
                                }
                              ]
                            }
                          },
                          "status": "Service Unavailable",
                          "code": 503,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List custom domains",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "b1af6ef3-2c90-41a8-9b6b-2c49a7c3adb1"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "custom-domains"],
                      "query": [
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        },
                        {
                          "key": "name",
                          "value": "<string>,<string>",
                          "description": "Filter for the names of custom domain"
                        },
                        {
                          "key": "domainType",
                          "value": "apex",
                          "description": "Filter for apex or subdomains"
                        },
                        {
                          "key": "verificationStatus",
                          "value": "unverified",
                          "description": "Filter for verified or unverified custom domains"
                        },
                        {
                          "key": "createdBefore",
                          "value": "<dateTime>",
                          "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "createdAfter",
                          "value": "<dateTime>",
                          "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "980968b0-6e27-42a5-bea0-26bacae453e5"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"customDomain\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"domainType\": \"subdomain\",\n      \"publicSuffix\": \"<string>\",\n      \"redirectForName\": \"<string>\",\n      \"verificationStatus\": \"unverified\",\n      \"createdAt\": \"<dateTime>\",\n      \"server\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"customDomain\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"domainType\": \"apex\",\n      \"publicSuffix\": \"<string>\",\n      \"redirectForName\": \"<string>\",\n      \"verificationStatus\": \"verified\",\n      \"createdAt\": \"<dateTime>\",\n      \"server\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains?cursor=<string>&limit=20&name=<string>,<string>&domainType=apex&verificationStatus=unverified&createdBefore=<dateTime>&createdAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "name",
                              "value": "<string>,<string>",
                              "description": "Filter for the names of custom domain"
                            },
                            {
                              "key": "domainType",
                              "value": "apex",
                              "description": "Filter for apex or subdomains"
                            },
                            {
                              "key": "verificationStatus",
                              "value": "unverified",
                              "description": "Filter for verified or unverified custom domains"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Add custom domain",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "b2e49f06-4704-42e4-b34c-131ed731ea97"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "6a2d30b1-3b3a-4e43-8c8b-c725ceebfa21"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "custom-domains"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "5baf974c-d69a-4871-a0cf-65fda6264cdc"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"domainType\": \"apex\",\n    \"publicSuffix\": \"<string>\",\n    \"redirectForName\": \"<string>\",\n    \"verificationStatus\": \"verified\",\n    \"createdAt\": \"<dateTime>\",\n    \"server\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"domainType\": \"subdomain\",\n    \"publicSuffix\": \"<string>\",\n    \"redirectForName\": \"<string>\",\n    \"verificationStatus\": \"unverified\",\n    \"createdAt\": \"<dateTime>\",\n    \"server\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You must enter payment information to perform this request.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Payment Required",
                      "code": 402,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The current state of the resource conflicts with this request.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/custom-domains",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "custom-domains"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "suspend",
              "item": [
                {
                  "name": "Suspend service",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "70aa1a68-881c-4027-8e31-03eefdad91ef"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/suspend",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "suspend"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "1aea3f98-2803-4d84-a5de-870e33dc9fdc"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Service suspended successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Accepted",
                      "code": 202,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "suspend"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "resume",
              "item": [
                {
                  "name": "Resume service",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "4d39a19c-8fc3-4180-b718-3374cb8ea65a"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/resume",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "resume"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "b2763687-9da1-4f0a-a17c-fb0d004ae9f4"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Service resumed successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Accepted",
                      "code": 202,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/resume",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "resume"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "restart",
              "item": [
                {
                  "name": "Restart a server",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "ba7bd6d2-6f5d-4719-8338-1dba98f8dfef"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/restart",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "restart"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "b52f4353-2616-48d0-9796-cdaaf3fb964a"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Server restarted",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/restart",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "restart"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "scale",
              "item": [
                {
                  "name": "Scale service to desired number of instances",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "b5c0d37e-76f6-4bce-af40-782d26c20209"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "90890ab0-8e7f-453d-b84d-f4b5ab779fc0"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/scale",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "scale"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "e4a057d6-b60a-4565-b9d8-851fd314d48d"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Service scaled successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "https://api.render.com/v1/services/:serviceId/scale",
                          "protocol": "https",
                          "host": ["api", "render", "com"],
                          "path": ["v1", "services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Accepted",
                      "code": 202,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"numInstances\": \"<integer>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/scale",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "scale"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "autoscaling",
              "item": [
                {
                  "name": "Update the autoscaling config for a service",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "1aa3efc0-0f5b-4016-bbbb-449d62ccb4dc"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "178e0fc6-d188-4760-b453-4efdf8921d30"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "autoscaling"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "bdea7bf2-71d7-410a-9b95-24ad239b572c"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Autoscaling configuration updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "https://api.render.com/v1/services/:serviceId/autoscaling",
                          "protocol": "https",
                          "host": ["api", "render", "com"],
                          "path": [
                            "v1",
                            "services",
                            ":serviceId",
                            "autoscaling"
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to generate preferred media types as specified by Accept request header.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Acceptable",
                      "code": 406,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "The requested resource is no longer available.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Gone",
                      "code": 410,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": false,\n  \"min\": \"<integer>\",\n  \"max\": \"<integer>\",\n  \"criteria\": {\n    \"cpu\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    },\n    \"memory\": {\n      \"enabled\": false,\n      \"percentage\": \"<integer>\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/autoscaling",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "autoscaling"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "preview",
              "item": [
                {
                  "name": "Create preview for image-backed service",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "c27389a0-9c4b-4efe-a519-6e19dde74e89"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "dc668d29-25e7-4e34-894a-a70fe6bedcb9"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/preview",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "preview"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "b93572ae-c8e8-40e2-98d2-5c7eb26c37fc"
                        }
                      ]
                    },
                    "description": "Creates a build preview instance for an image-backed service. The preview uses the settings of the base service (referenced by `serviceId`), except settings overridden via provided parameters. You can view all active previews from your service's Previews tab on the Render Dashboard. Note that you can't create previews for Git-backed services using the Render API."
                  },
                  "response": [
                    {
                      "name": "Created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"service\": {\n    \"id\": \"<string>\",\n    \"autoDeploy\": \"no\",\n    \"branch\": \"<string>\",\n    \"buildFilter\": {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignoredPaths\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"image\": {\n      \"imagePath\": \"<string>\",\n      \"ownerId\": \"<string>\",\n      \"registryCredentialId\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"notifyOnFail\": \"notify\",\n    \"ownerId\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"rootDir\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"suspended\": \"not_suspended\",\n    \"suspenders\": [\n      \"unknown\",\n      \"parent_service\"\n    ],\n    \"type\": \"private_service\",\n    \"updatedAt\": \"<dateTime>\",\n    \"serviceDetails\": {\n      \"buildCommand\": \"<string>\",\n      \"parentServer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"publishPath\": \"<string>\",\n      \"pullRequestPreviewsEnabled\": \"yes\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"deployId\": \"<string>\"\n}"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "You do not have permissions for the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"imagePath\": \"<string>\",\n  \"name\": \"<string>\",\n  \"plan\": \"free\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/preview",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "preview"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "jobs",
              "item": [
                {
                  "name": "{jobId}",
                  "item": [
                    {
                      "name": "cancel",
                      "item": [
                        {
                          "name": "Cancel running job",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json",
                                "uuid": "e9fe6a96-9b62-49f5-ac42-32efa056c7df"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId",
                                "cancel"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId",
                                  "value": "<string>",
                                  "description": "(Required) The ID of the service",
                                  "uuid": "7a3870fe-8b1b-4c9f-9004-89b8cdca1961"
                                },
                                {
                                  "key": "jobId",
                                  "value": "<string>",
                                  "description": "(Required) The ID of the job",
                                  "uuid": "eb428dfc-9848-4b1d-a89e-909b2e709721"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "OK",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "https://api.render.com/v1/services/:serviceId/jobs/:jobId/cancel",
                                  "protocol": "https",
                                  "host": ["api", "render", "com"],
                                  "path": [
                                    "v1",
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\",\n  \"status\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"startedAt\": \"<string>\",\n  \"finishedAt\": \"<string>\"\n}"
                            },
                            {
                              "name": "The request could not be understood by the server.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Authorization information is missing or invalid.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Unable to find the requested resource.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Rate limit has been surpassed.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Too Many Requests",
                              "code": 429,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "An unexpected server error has occurred.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            },
                            {
                              "name": "Server currently unavailable.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  },
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId/cancel",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "services",
                                    ":serviceId",
                                    "jobs",
                                    ":jobId",
                                    "cancel"
                                  ],
                                  "variable": [
                                    {
                                      "key": "serviceId"
                                    },
                                    {
                                      "key": "jobId"
                                    }
                                  ]
                                }
                              },
                              "status": "Service Unavailable",
                              "code": 503,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Retrieve job",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json",
                            "uuid": "33c3dbf5-9c3e-47af-970c-ab903623b984"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs", ":jobId"],
                          "variable": [
                            {
                              "key": "serviceId",
                              "value": "<string>",
                              "description": "(Required) The ID of the service",
                              "uuid": "e699847c-0857-4a9d-943f-c5baf1584d5c"
                            },
                            {
                              "key": "jobId",
                              "value": "<string>",
                              "description": "(Required) The ID of the job",
                              "uuid": "d69018f3-180f-46f9-adfc-891607fcdc63"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "OK",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\",\n  \"status\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"startedAt\": \"<string>\",\n  \"finishedAt\": \"<string>\"\n}"
                        },
                        {
                          "name": "The request could not be understood by the server.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Authorization information is missing or invalid.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Unable to find the requested resource.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Rate limit has been surpassed.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Too Many Requests",
                          "code": 429,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "An unexpected server error has occurred.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        },
                        {
                          "name": "Server currently unavailable.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/services/:serviceId/jobs/:jobId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "services",
                                ":serviceId",
                                "jobs",
                                ":jobId"
                              ],
                              "variable": [
                                {
                                  "key": "serviceId"
                                },
                                {
                                  "key": "jobId"
                                }
                              ]
                            }
                          },
                          "status": "Service Unavailable",
                          "code": 503,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List jobs",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "f1ceb41f-432e-4059-8343-633d054eec17"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "jobs"],
                      "query": [
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Cursor to begin retrieving entries for this query"
                        },
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Max number of items that can be returned"
                        },
                        {
                          "key": "status",
                          "value": "succeeded,failed",
                          "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                        },
                        {
                          "key": "createdBefore",
                          "value": "<dateTime>",
                          "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "createdAfter",
                          "value": "<dateTime>",
                          "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "startedBefore",
                          "value": "<dateTime>",
                          "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "startedAfter",
                          "value": "<dateTime>",
                          "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "finishedBefore",
                          "value": "<dateTime>",
                          "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                        },
                        {
                          "key": "finishedAfter",
                          "value": "<dateTime>",
                          "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                        }
                      ],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "b4441abd-0221-46d3-8ac5-23f0b8d6c727"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"job\": {\n      \"id\": \"<string>\",\n      \"serviceId\": \"<string>\",\n      \"startCommand\": \"<string>\",\n      \"planId\": \"<string>\",\n      \"status\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"startedAt\": \"<string>\",\n      \"finishedAt\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"job\": {\n      \"id\": \"<string>\",\n      \"serviceId\": \"<string>\",\n      \"startCommand\": \"<string>\",\n      \"planId\": \"<string>\",\n      \"status\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"startedAt\": \"<string>\",\n      \"finishedAt\": \"<string>\"\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs?cursor=<string>&limit=20&status=succeeded,failed&createdBefore=<dateTime>&createdAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "query": [
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Cursor to begin retrieving entries for this query"
                            },
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Max number of items that can be returned"
                            },
                            {
                              "key": "status",
                              "value": "succeeded,failed",
                              "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
                            },
                            {
                              "key": "createdBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "createdAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "startedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedBefore",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"
                            },
                            {
                              "key": "finishedAfter",
                              "value": "<dateTime>",
                              "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Create job",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "uuid": "4245524f-c940-4c75-abcb-43f9b4701821"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "uuid": "2c14ab6f-eda6-400b-b159-60a7232000e1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId/jobs",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId", "jobs"],
                      "variable": [
                        {
                          "key": "serviceId",
                          "value": "<string>",
                          "description": "(Required) The ID of the service",
                          "uuid": "176b918e-f929-433e-8326-ab01009ac8f6"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "OK",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\",\n  \"status\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"startedAt\": \"<string>\",\n  \"finishedAt\": \"<string>\"\n}"
                    },
                    {
                      "name": "The request could not be understood by the server.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Authorization information is missing or invalid.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Unable to find the requested resource.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Rate limit has been surpassed.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "An unexpected server error has occurred.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    },
                    {
                      "name": "Server currently unavailable.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"startCommand\": \"<string>\",\n  \"planId\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/services/:serviceId/jobs",
                          "host": ["{{baseUrl}}"],
                          "path": ["services", ":serviceId", "jobs"],
                          "variable": [
                            {
                              "key": "serviceId"
                            }
                          ]
                        }
                      },
                      "status": "Service Unavailable",
                      "code": 503,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve service",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "uuid": "6b5af76f-c32c-4e2e-af57-775ce4140652"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services/:serviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["services", ":serviceId"],
                  "variable": [
                    {
                      "key": "serviceId",
                      "value": "<string>",
                      "description": "(Required) The ID of the service",
                      "uuid": "4797203b-770d-4132-b348-76bedd9cb42a"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"createdAt\": \"<dateTime>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"notifyOnFail\": \"ignore\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"rootDir\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"suspended\": \"not_suspended\",\n  \"suspenders\": [\n    \"parent_service\",\n    \"user\"\n  ],\n  \"type\": \"private_service\",\n  \"updatedAt\": \"<dateTime>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"parentServer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"url\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update service",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "uuid": "beb7536f-af35-4a51-8f93-1b615f9ceaea"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "uuid": "604c53c9-ec68-423a-95ff-1bba0185bb82"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services/:serviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["services", ":serviceId"],
                  "variable": [
                    {
                      "key": "serviceId",
                      "value": "<string>",
                      "description": "(Required) The ID of the service",
                      "uuid": "3755ba8a-4711-4ec1-a806-7b542dd732eb"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"createdAt\": \"<dateTime>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"notifyOnFail\": \"ignore\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"rootDir\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"suspended\": \"not_suspended\",\n  \"suspenders\": [\n    \"parent_service\",\n    \"user\"\n  ],\n  \"type\": \"private_service\",\n  \"updatedAt\": \"<dateTime>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"parentServer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"url\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "The request could not be understood by the server.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You must enter payment information to perform this request.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Payment Required",
                  "code": 402,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The current state of the resource conflicts with this request.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"autoDeploy\": \"yes\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"yes\"\n  }\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete service",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "uuid": "b1824bcf-a456-48fb-8baa-7f6d5fff5fc0"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services/:serviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["services", ":serviceId"],
                  "variable": [
                    {
                      "key": "serviceId",
                      "value": "<string>",
                      "description": "(Required) The ID of the service",
                      "uuid": "81c8d16e-b155-481b-b810-5d4293bdfdfe"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Service deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/services/:serviceId",
                      "host": ["{{baseUrl}}"],
                      "path": ["services", ":serviceId"],
                      "variable": [
                        {
                          "key": "serviceId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "List services",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "uuid": "c3bb2fd0-3bcf-4040-8b8a-29392de845e9"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["services"],
              "query": [
                {
                  "key": "name",
                  "value": "<string>,<string>",
                  "description": "Filter for the names of services"
                },
                {
                  "key": "type",
                  "value": "background_worker,cron_job",
                  "description": "Filter for types of services"
                },
                {
                  "key": "env",
                  "value": "go,ruby",
                  "description": "Filter for environments (runtimes) of services"
                },
                {
                  "key": "region",
                  "value": "frankfurt,oregon",
                  "description": "Filter for regions of services"
                },
                {
                  "key": "suspended",
                  "value": "suspended,suspended",
                  "description": "Filter services based on whether they're suspended or not suspended"
                },
                {
                  "key": "createdBefore",
                  "value": "<dateTime>",
                  "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "createdAfter",
                  "value": "<dateTime>",
                  "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "updatedBefore",
                  "value": "<dateTime>",
                  "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "updatedAfter",
                  "value": "<dateTime>",
                  "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "ownerId",
                  "value": "<string>,<string>",
                  "description": "The ID of the owner (team or personal user) whose resources should be returned"
                },
                {
                  "key": "cursor",
                  "value": "<string>",
                  "description": "Cursor to begin retrieving entries for this query"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Max number of items that can be returned"
                }
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"service\": {\n      \"id\": \"<string>\",\n      \"autoDeploy\": \"yes\",\n      \"branch\": \"<string>\",\n      \"buildFilter\": {\n        \"paths\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignoredPaths\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"image\": {\n        \"imagePath\": \"<string>\",\n        \"ownerId\": \"<string>\",\n        \"registryCredentialId\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"notifyOnFail\": \"notify\",\n      \"ownerId\": \"<string>\",\n      \"repo\": \"<string>\",\n      \"rootDir\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"suspended\": \"not_suspended\",\n      \"suspenders\": [\n        \"admin\",\n        \"unknown\"\n      ],\n      \"type\": \"web_service\",\n      \"updatedAt\": \"<dateTime>\",\n      \"serviceDetails\": {\n        \"buildCommand\": \"<string>\",\n        \"parentServer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"publishPath\": \"<string>\",\n        \"pullRequestPreviewsEnabled\": \"yes\",\n        \"url\": \"<string>\"\n      }\n    },\n    \"cursor\": \"<string>\"\n  },\n  {\n    \"service\": {\n      \"id\": \"<string>\",\n      \"autoDeploy\": \"yes\",\n      \"branch\": \"<string>\",\n      \"buildFilter\": {\n        \"paths\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignoredPaths\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"image\": {\n        \"imagePath\": \"<string>\",\n        \"ownerId\": \"<string>\",\n        \"registryCredentialId\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"notifyOnFail\": \"default\",\n      \"ownerId\": \"<string>\",\n      \"repo\": \"<string>\",\n      \"rootDir\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"suspended\": \"not_suspended\",\n      \"suspenders\": [\n        \"admin\",\n        \"parent_service\"\n      ],\n      \"type\": \"web_service\",\n      \"updatedAt\": \"<dateTime>\",\n      \"serviceDetails\": {\n        \"buildCommand\": \"<string>\",\n        \"parentServer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"publishPath\": \"<string>\",\n        \"pullRequestPreviewsEnabled\": \"yes\",\n        \"url\": \"<string>\"\n      }\n    },\n    \"cursor\": \"<string>\"\n  }\n]"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/services?name=<string>,<string>&type=background_worker,cron_job&env=go,ruby&region=frankfurt,oregon&suspended=suspended,suspended&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the names of services"
                    },
                    {
                      "key": "type",
                      "value": "background_worker,cron_job",
                      "description": "Filter for types of services"
                    },
                    {
                      "key": "env",
                      "value": "go,ruby",
                      "description": "Filter for environments (runtimes) of services"
                    },
                    {
                      "key": "region",
                      "value": "frankfurt,oregon",
                      "description": "Filter for regions of services"
                    },
                    {
                      "key": "suspended",
                      "value": "suspended,suspended",
                      "description": "Filter services based on whether they're suspended or not suspended"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            }
          ]
        },
        {
          "name": "Create service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "uuid": "9eaa861d-ca0c-48e2-bfe8-a8259058fdb8"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "uuid": "c3515536-8ca5-4a1d-8947-fa6f1167db30"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          },
          "response": [
            {
              "name": "Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"service\": {\n    \"id\": \"<string>\",\n    \"autoDeploy\": \"no\",\n    \"branch\": \"<string>\",\n    \"buildFilter\": {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignoredPaths\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"image\": {\n      \"imagePath\": \"<string>\",\n      \"ownerId\": \"<string>\",\n      \"registryCredentialId\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"notifyOnFail\": \"notify\",\n    \"ownerId\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"rootDir\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"suspended\": \"not_suspended\",\n    \"suspenders\": [\n      \"unknown\",\n      \"parent_service\"\n    ],\n    \"type\": \"private_service\",\n    \"updatedAt\": \"<dateTime>\",\n    \"serviceDetails\": {\n      \"buildCommand\": \"<string>\",\n      \"parentServer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"publishPath\": \"<string>\",\n      \"pullRequestPreviewsEnabled\": \"yes\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"deployId\": \"<string>\"\n}"
            },
            {
              "name": "The request could not be understood by the server.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "You must enter payment information to perform this request.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Payment Required",
              "code": 402,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "The current state of the resource conflicts with this request.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"cron_job\",\n  \"name\": \"<string>\",\n  \"ownerId\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"autoDeploy\": \"yes\",\n  \"branch\": \"<string>\",\n  \"image\": {\n    \"imagePath\": \"<string>\",\n    \"ownerId\": \"<string>\",\n    \"registryCredentialId\": \"<string>\"\n  },\n  \"buildFilter\": {\n    \"paths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignoredPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"rootDir\": \"<string>\",\n  \"envVars\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"secretFiles\": [\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contents\": \"<string>\"\n    }\n  ],\n  \"serviceDetails\": {\n    \"buildCommand\": \"<string>\",\n    \"headers\": [\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"path\": \"<string>\",\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"publishPath\": \"<string>\",\n    \"pullRequestPreviewsEnabled\": \"no\",\n    \"routes\": [\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      },\n      {\n        \"type\": \"redirect\",\n        \"source\": \"<string>\",\n        \"destination\": \"<string>\"\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["services"]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "registrycredentials",
      "item": [
        {
          "name": "{registryCredentialId}",
          "item": [
            {
              "name": "Retrieve registry credentials",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials", ":registryCredentialId"],
                  "variable": [
                    {
                      "key": "registryCredentialId",
                      "value": "<string>",
                      "description": "(Required) The ID of the registry credential"
                    }
                  ]
                },
                "description": "Retrieve registry credentials"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "https://api.render.com/v1/registrycredentials/:registryCredentialId",
                      "protocol": "https",
                      "host": ["api", "render", "com"],
                      "path": [
                        "v1",
                        "registrycredentials",
                        ":registryCredentialId"
                      ],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"username\": \"<string>\",\n  \"registry\": \"DOCKER\"\n}"
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update registry credential",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials", ":registryCredentialId"],
                  "variable": [
                    {
                      "key": "registryCredentialId",
                      "value": "<string>",
                      "description": "(Required) The ID of the registry credential"
                    }
                  ]
                },
                "description": "Update registry credential"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "https://api.render.com/v1/registrycredentials/:registryCredentialId",
                      "protocol": "https",
                      "host": ["api", "render", "com"],
                      "path": [
                        "v1",
                        "registrycredentials",
                        ":registryCredentialId"
                      ],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"username\": \"<string>\",\n  \"registry\": \"DOCKER\"\n}"
                },
                {
                  "name": "The request could not be understood by the server.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You must enter payment information to perform this request.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Payment Required",
                  "code": 402,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The current state of the resource conflicts with this request.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete registry credential",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials", ":registryCredentialId"],
                  "variable": [
                    {
                      "key": "registryCredentialId",
                      "value": "<string>",
                      "description": "(Required) The ID of the registry credential"
                    }
                  ]
                },
                "description": "Delete registry credential"
              },
              "response": [
                {
                  "name": "Registry credential deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "https://api.render.com/v1/registrycredentials/:registryCredentialId",
                      "protocol": "https",
                      "host": ["api", "render", "com"],
                      "path": [
                        "v1",
                        "registrycredentials",
                        ":registryCredentialId"
                      ],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Authorization information is missing or invalid.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "You do not have permissions for the requested resource.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to find the requested resource.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Unable to generate preferred media types as specified by Accept request header.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "The requested resource is no longer available.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Rate limit has been surpassed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "An unexpected server error has occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Server currently unavailable.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/registrycredentials/:registryCredentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["registrycredentials", ":registryCredentialId"],
                      "variable": [
                        {
                          "key": "registryCredentialId"
                        }
                      ]
                    }
                  },
                  "status": "Service Unavailable",
                  "code": 503,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Get a list of registry credentials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["registrycredentials"],
              "query": [
                {
                  "key": "name",
                  "value": "<string>,<string>",
                  "description": "Filter for the name of a credential"
                },
                {
                  "key": "username",
                  "value": "<string>,<string>",
                  "description": "Filter for the username of a credential"
                },
                {
                  "key": "type",
                  "value": "GITHUB,DOCKER",
                  "description": "Filter for the registry type for the credential"
                },
                {
                  "key": "createdBefore",
                  "value": "<dateTime>",
                  "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "createdAfter",
                  "value": "<dateTime>",
                  "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "updatedBefore",
                  "value": "<dateTime>",
                  "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "updatedAfter",
                  "value": "<dateTime>",
                  "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                },
                {
                  "key": "ownerId",
                  "value": "<string>,<string>",
                  "description": "The ID of the owner (team or personal user) whose resources should be returned"
                },
                {
                  "key": "cursor",
                  "value": "<string>",
                  "description": "Cursor to begin retrieving entries for this query"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Max number of items that can be returned"
                }
              ]
            },
            "description": "Get a list of registry credentials"
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "https://api.render.com/v1/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "protocol": "https",
                  "host": ["api", "render", "com"],
                  "path": ["v1", "registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"registry\": \"GITLAB\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"registry\": \"GITHUB\"\n  }\n]"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials?name=<string>,<string>&username=<string>,<string>&type=GITHUB,DOCKER&createdBefore=<dateTime>&createdAfter=<dateTime>&updatedBefore=<dateTime>&updatedAfter=<dateTime>&ownerId=<string>,<string>&cursor=<string>&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"],
                  "query": [
                    {
                      "key": "name",
                      "value": "<string>,<string>",
                      "description": "Filter for the name of a credential"
                    },
                    {
                      "key": "username",
                      "value": "<string>,<string>",
                      "description": "Filter for the username of a credential"
                    },
                    {
                      "key": "type",
                      "value": "GITHUB,DOCKER",
                      "description": "Filter for the registry type for the credential"
                    },
                    {
                      "key": "createdBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "createdAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedBefore",
                      "value": "<dateTime>",
                      "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "updatedAfter",
                      "value": "<dateTime>",
                      "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"
                    },
                    {
                      "key": "ownerId",
                      "value": "<string>,<string>",
                      "description": "The ID of the owner (team or personal user) whose resources should be returned"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Cursor to begin retrieving entries for this query"
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Max number of items that can be returned"
                    }
                  ]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            }
          ]
        },
        {
          "name": "Create registry credential",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/registrycredentials",
              "host": ["{{baseUrl}}"],
              "path": ["registrycredentials"]
            },
            "description": "Create registry credential"
          },
          "response": [
            {
              "name": "Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.render.com/v1/registrycredentials",
                  "protocol": "https",
                  "host": ["api", "render", "com"],
                  "path": ["v1", "registrycredentials"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"username\": \"<string>\",\n  \"registry\": \"DOCKER\"\n}"
            },
            {
              "name": "The request could not be understood by the server.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Authorization information is missing or invalid.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "You must enter payment information to perform this request.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Payment Required",
              "code": 402,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Unable to generate preferred media types as specified by Accept request header.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Not Acceptable",
              "code": 406,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "The current state of the resource conflicts with this request.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Rate limit has been surpassed.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "An unexpected server error has occurred.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            },
            {
              "name": "Server currently unavailable.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"registry\": \"GITLAB\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"ownerId\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/registrycredentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["registrycredentials"]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"<string>\",\n  \"message\": \"<string>\"\n}"
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.render.com/v1",
      "type": "string"
    }
  ]
}
