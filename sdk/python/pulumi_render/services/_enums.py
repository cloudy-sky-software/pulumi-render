# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'BackgroundWorkerDetailsCreateEnv',
    'BackgroundWorkerDetailsCreatePlan',
    'BackgroundWorkerDetailsCreatePullRequestPreviewsEnabled',
    'BackgroundWorkerDetailsCreateRegion',
    'BackgroundWorkerDetailsEnv',
    'BackgroundWorkerDetailsPlan',
    'BackgroundWorkerDetailsPullRequestPreviewsEnabled',
    'BackgroundWorkerDetailsRegion',
    'BackgroundWorkerServiceAutoDeploy',
    'BackgroundWorkerServiceNotifyOnFail',
    'BackgroundWorkerServiceSuspended',
    'BackgroundWorkerServiceSuspendersItem',
    'CancelDeployStatus',
    'CancelDeployTrigger',
    'CronJobDetailsCreateEnv',
    'CronJobDetailsCreatePlan',
    'CronJobDetailsCreateRegion',
    'CronJobDetailsEnv',
    'CronJobDetailsPlan',
    'CronJobDetailsRegion',
    'CronJobServiceAutoDeploy',
    'CronJobServiceNotifyOnFail',
    'CronJobServiceSuspended',
    'CronJobServiceSuspendersItem',
    'CustomDomainDomainType',
    'CustomDomainVerificationStatus',
    'DeployClearCache',
    'DeployStatus',
    'DeployTrigger',
    'PreviewServicePlan',
    'PreviewServiceServiceAutoDeploy',
    'PreviewServiceServiceNotifyOnFail',
    'PreviewServiceServiceSuspended',
    'PreviewServiceServiceSuspendersItem',
    'PrivateServiceDetailsCreateEnv',
    'PrivateServiceDetailsCreatePlan',
    'PrivateServiceDetailsCreatePullRequestPreviewsEnabled',
    'PrivateServiceDetailsCreateRegion',
    'PrivateServiceDetailsEnv',
    'PrivateServiceDetailsPlan',
    'PrivateServiceDetailsPullRequestPreviewsEnabled',
    'PrivateServiceDetailsRegion',
    'PrivateServiceServiceAutoDeploy',
    'PrivateServiceServiceNotifyOnFail',
    'PrivateServiceServiceSuspended',
    'PrivateServiceServiceSuspendersItem',
    'RegistryCredentialRegistry',
    'RollbackDeployStatus',
    'RollbackDeployTrigger',
    'ServerPortProtocol',
    'ServiceAutoDeploy',
    'ServiceNotifyOnFail',
    'ServiceSuspended',
    'ServiceSuspendersItem',
    'StaticSiteDetailsCreatePullRequestPreviewsEnabled',
    'StaticSiteDetailsPullRequestPreviewsEnabled',
    'StaticSiteRouteType',
    'StaticSiteServiceAutoDeploy',
    'StaticSiteServiceNotifyOnFail',
    'StaticSiteServiceSuspended',
    'StaticSiteServiceSuspendersItem',
    'WebServiceDetailsCreateEnv',
    'WebServiceDetailsCreatePlan',
    'WebServiceDetailsCreatePullRequestPreviewsEnabled',
    'WebServiceDetailsCreateRegion',
    'WebServiceDetailsEnv',
    'WebServiceDetailsPlan',
    'WebServiceDetailsPullRequestPreviewsEnabled',
    'WebServiceDetailsRegion',
    'WebServiceServiceAutoDeploy',
    'WebServiceServiceNotifyOnFail',
    'WebServiceServiceSuspended',
    'WebServiceServiceSuspendersItem',
]


class BackgroundWorkerDetailsCreateEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class BackgroundWorkerDetailsCreatePlan(str, Enum):
    STARTER = "starter"
    STANDARD = "standard"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"


class BackgroundWorkerDetailsCreatePullRequestPreviewsEnabled(str, Enum):
    """
    Defaults to "no"
    """
    YES = "yes"
    NO = "no"


class BackgroundWorkerDetailsCreateRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class BackgroundWorkerDetailsEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class BackgroundWorkerDetailsPlan(str, Enum):
    """
    The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
    """
    STARTER = "starter"
    STARTER_PLUS = "starter_plus"
    STANDARD = "standard"
    STANDARD_PLUS = "standard_plus"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"
    FREE = "free"
    CUSTOM = "custom"


class BackgroundWorkerDetailsPullRequestPreviewsEnabled(str, Enum):
    YES = "yes"
    NO = "no"


class BackgroundWorkerDetailsRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class BackgroundWorkerServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class BackgroundWorkerServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class BackgroundWorkerServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class BackgroundWorkerServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class CancelDeployStatus(str, Enum):
    CREATED = "created"
    BUILD_IN_PROGRESS = "build_in_progress"
    UPDATE_IN_PROGRESS = "update_in_progress"
    LIVE = "live"
    DEACTIVATED = "deactivated"
    BUILD_FAILED = "build_failed"
    UPDATE_FAILED = "update_failed"
    CANCELED = "canceled"
    PRE_DEPLOY_IN_PROGRESS = "pre_deploy_in_progress"
    PRE_DEPLOY_FAILED = "pre_deploy_failed"


class CancelDeployTrigger(str, Enum):
    API = "api"
    BLUEPRINT_SYNC = "blueprint_sync"
    DEPLOY_HOOK = "deploy_hook"
    DEPLOYED_BY_RENDER = "deployed_by_render"
    MANUAL = "manual"
    OTHER = "other"
    NEW_COMMIT = "new_commit"
    ROLLBACK = "rollback"
    SERVICE_RESUMED = "service_resumed"
    SERVICE_UPDATED = "service_updated"


class CronJobDetailsCreateEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class CronJobDetailsCreatePlan(str, Enum):
    STARTER = "starter"
    STANDARD = "standard"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"


class CronJobDetailsCreateRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class CronJobDetailsEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class CronJobDetailsPlan(str, Enum):
    """
    The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
    """
    STARTER = "starter"
    STARTER_PLUS = "starter_plus"
    STANDARD = "standard"
    STANDARD_PLUS = "standard_plus"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"
    FREE = "free"
    CUSTOM = "custom"


class CronJobDetailsRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class CronJobServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class CronJobServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class CronJobServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class CronJobServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class CustomDomainDomainType(str, Enum):
    APEX = "apex"
    SUBDOMAIN = "subdomain"


class CustomDomainVerificationStatus(str, Enum):
    VERIFIED = "verified"
    UNVERIFIED = "unverified"


class DeployClearCache(str, Enum):
    """
    Defaults to "do_not_clear"
    """
    CLEAR = "clear"
    DO_NOT_CLEAR = "do_not_clear"


class DeployStatus(str, Enum):
    CREATED = "created"
    BUILD_IN_PROGRESS = "build_in_progress"
    UPDATE_IN_PROGRESS = "update_in_progress"
    LIVE = "live"
    DEACTIVATED = "deactivated"
    BUILD_FAILED = "build_failed"
    UPDATE_FAILED = "update_failed"
    CANCELED = "canceled"
    PRE_DEPLOY_IN_PROGRESS = "pre_deploy_in_progress"
    PRE_DEPLOY_FAILED = "pre_deploy_failed"


class DeployTrigger(str, Enum):
    API = "api"
    BLUEPRINT_SYNC = "blueprint_sync"
    DEPLOY_HOOK = "deploy_hook"
    DEPLOYED_BY_RENDER = "deployed_by_render"
    MANUAL = "manual"
    OTHER = "other"
    NEW_COMMIT = "new_commit"
    ROLLBACK = "rollback"
    SERVICE_RESUMED = "service_resumed"
    SERVICE_UPDATED = "service_updated"


class PreviewServicePlan(str, Enum):
    """
    The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
    """
    STARTER = "starter"
    STARTER_PLUS = "starter_plus"
    STANDARD = "standard"
    STANDARD_PLUS = "standard_plus"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"
    FREE = "free"
    CUSTOM = "custom"


class PreviewServiceServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class PreviewServiceServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class PreviewServiceServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class PreviewServiceServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class PrivateServiceDetailsCreateEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class PrivateServiceDetailsCreatePlan(str, Enum):
    STARTER = "starter"
    STANDARD = "standard"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"


class PrivateServiceDetailsCreatePullRequestPreviewsEnabled(str, Enum):
    """
    Defaults to "no"
    """
    YES = "yes"
    NO = "no"


class PrivateServiceDetailsCreateRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class PrivateServiceDetailsEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class PrivateServiceDetailsPlan(str, Enum):
    """
    The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
    """
    STARTER = "starter"
    STARTER_PLUS = "starter_plus"
    STANDARD = "standard"
    STANDARD_PLUS = "standard_plus"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"
    FREE = "free"
    CUSTOM = "custom"


class PrivateServiceDetailsPullRequestPreviewsEnabled(str, Enum):
    YES = "yes"
    NO = "no"


class PrivateServiceDetailsRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class PrivateServiceServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class PrivateServiceServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class PrivateServiceServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class PrivateServiceServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class RegistryCredentialRegistry(str, Enum):
    """
    The registry to use this credential with
    """
    GITHUB = "GITHUB"
    GITLAB = "GITLAB"
    DOCKER = "DOCKER"


class RollbackDeployStatus(str, Enum):
    CREATED = "created"
    BUILD_IN_PROGRESS = "build_in_progress"
    UPDATE_IN_PROGRESS = "update_in_progress"
    LIVE = "live"
    DEACTIVATED = "deactivated"
    BUILD_FAILED = "build_failed"
    UPDATE_FAILED = "update_failed"
    CANCELED = "canceled"
    PRE_DEPLOY_IN_PROGRESS = "pre_deploy_in_progress"
    PRE_DEPLOY_FAILED = "pre_deploy_failed"


class RollbackDeployTrigger(str, Enum):
    API = "api"
    BLUEPRINT_SYNC = "blueprint_sync"
    DEPLOY_HOOK = "deploy_hook"
    DEPLOYED_BY_RENDER = "deployed_by_render"
    MANUAL = "manual"
    OTHER = "other"
    NEW_COMMIT = "new_commit"
    ROLLBACK = "rollback"
    SERVICE_RESUMED = "service_resumed"
    SERVICE_UPDATED = "service_updated"


class ServerPortProtocol(str, Enum):
    TCP = "TCP"
    UDP = "UDP"


class ServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class ServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class ServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class ServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class StaticSiteDetailsCreatePullRequestPreviewsEnabled(str, Enum):
    """
    Defaults to "no"
    """
    YES = "yes"
    NO = "no"


class StaticSiteDetailsPullRequestPreviewsEnabled(str, Enum):
    YES = "yes"
    NO = "no"


class StaticSiteRouteType(str, Enum):
    REDIRECT = "redirect"
    REWRITE = "rewrite"


class StaticSiteServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class StaticSiteServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class StaticSiteServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class StaticSiteServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"


class WebServiceDetailsCreateEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class WebServiceDetailsCreatePlan(str, Enum):
    STARTER = "starter"
    STANDARD = "standard"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"


class WebServiceDetailsCreatePullRequestPreviewsEnabled(str, Enum):
    """
    Defaults to "no"
    """
    YES = "yes"
    NO = "no"


class WebServiceDetailsCreateRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class WebServiceDetailsEnv(str, Enum):
    """
    Environment (runtime)
    """
    DOCKER = "docker"
    ELIXIR = "elixir"
    GO = "go"
    NODE = "node"
    PYTHON = "python"
    RUBY = "ruby"
    RUST = "rust"
    IMAGE = "image"


class WebServiceDetailsPlan(str, Enum):
    """
    The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
    """
    STARTER = "starter"
    STARTER_PLUS = "starter_plus"
    STANDARD = "standard"
    STANDARD_PLUS = "standard_plus"
    PRO = "pro"
    PRO_PLUS = "pro_plus"
    PRO_MAX = "pro_max"
    PRO_ULTRA = "pro_ultra"
    FREE = "free"
    CUSTOM = "custom"


class WebServiceDetailsPullRequestPreviewsEnabled(str, Enum):
    YES = "yes"
    NO = "no"


class WebServiceDetailsRegion(str, Enum):
    FRANKFURT = "frankfurt"
    OREGON = "oregon"
    OHIO = "ohio"
    SINGAPORE = "singapore"


class WebServiceServiceAutoDeploy(str, Enum):
    YES = "yes"
    NO = "no"


class WebServiceServiceNotifyOnFail(str, Enum):
    DEFAULT = "default"
    NOTIFY = "notify"
    IGNORE = "ignore"


class WebServiceServiceSuspended(str, Enum):
    SUSPENDED = "suspended"
    NOT_SUSPENDED = "not_suspended"


class WebServiceServiceSuspendersItem(str, Enum):
    ADMIN = "admin"
    BILLING = "billing"
    USER = "user"
    PARENT_SERVICE = "parent_service"
    UNKNOWN = "unknown"
