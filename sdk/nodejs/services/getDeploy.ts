// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function getDeploy(args: GetDeployArgs, opts?: pulumi.InvokeOptions): Promise<GetDeployResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("render:services:getDeploy", {
        "id": args.id,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetDeployArgs {
    /**
     * (Required) The ID of the deploy
     */
    id: string;
    /**
     * (Required) The ID of the service
     */
    serviceId: string;
}

export interface GetDeployResult {
    readonly items: outputs.services.Deploy;
}

export function getDeployOutput(args: GetDeployOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeployResult> {
    return pulumi.output(args).apply(a => getDeploy(a, opts))
}

export interface GetDeployOutputArgs {
    /**
     * (Required) The ID of the deploy
     */
    id: pulumi.Input<string>;
    /**
     * (Required) The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
