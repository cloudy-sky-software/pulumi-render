// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgres

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListPostgresBackup(ctx *pulumi.Context, args *ListPostgresBackupArgs, opts ...pulumi.InvokeOption) (*ListPostgresBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListPostgresBackupResult
	err := ctx.Invoke("render:postgres:listPostgresBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListPostgresBackupArgs struct {
	PostgresId string `pulumi:"postgresId"`
}

type ListPostgresBackupResult struct {
	Items []ListPostgresBackupItemProperties `pulumi:"items"`
}

func ListPostgresBackupOutput(ctx *pulumi.Context, args ListPostgresBackupOutputArgs, opts ...pulumi.InvokeOption) ListPostgresBackupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListPostgresBackupResultOutput, error) {
			args := v.(ListPostgresBackupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:postgres:listPostgresBackup", args, ListPostgresBackupResultOutput{}, options).(ListPostgresBackupResultOutput), nil
		}).(ListPostgresBackupResultOutput)
}

type ListPostgresBackupOutputArgs struct {
	PostgresId pulumi.StringInput `pulumi:"postgresId"`
}

func (ListPostgresBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPostgresBackupArgs)(nil)).Elem()
}

type ListPostgresBackupResultOutput struct{ *pulumi.OutputState }

func (ListPostgresBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPostgresBackupResult)(nil)).Elem()
}

func (o ListPostgresBackupResultOutput) ToListPostgresBackupResultOutput() ListPostgresBackupResultOutput {
	return o
}

func (o ListPostgresBackupResultOutput) ToListPostgresBackupResultOutputWithContext(ctx context.Context) ListPostgresBackupResultOutput {
	return o
}

func (o ListPostgresBackupResultOutput) Items() ListPostgresBackupItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListPostgresBackupResult) []ListPostgresBackupItemProperties { return v.Items }).(ListPostgresBackupItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListPostgresBackupResultOutput{})
}
