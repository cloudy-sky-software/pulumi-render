# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'Environment',
    'EnvironmentWithCursor',
]

@pulumi.output_type
class Environment(dict):
    def __init__(__self__, *,
                 databases_ids: Sequence[_builtins.str],
                 env_group_ids: Sequence[_builtins.str],
                 id: _builtins.str,
                 name: _builtins.str,
                 network_isolation_enabled: _builtins.bool,
                 project_id: _builtins.str,
                 protected_status: 'EnvironmentProtectedStatus',
                 redis_ids: Sequence[_builtins.str],
                 service_ids: Sequence[_builtins.str]):
        """
        :param _builtins.bool network_isolation_enabled: Indicates whether network connections across environments are allowed.
        :param 'EnvironmentProtectedStatus' protected_status: Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
        """
        pulumi.set(__self__, "databases_ids", databases_ids)
        pulumi.set(__self__, "env_group_ids", env_group_ids)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "network_isolation_enabled", network_isolation_enabled)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "protected_status", protected_status)
        pulumi.set(__self__, "redis_ids", redis_ids)
        pulumi.set(__self__, "service_ids", service_ids)

    @_builtins.property
    @pulumi.getter(name="databasesIds")
    def databases_ids(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "databases_ids")

    @_builtins.property
    @pulumi.getter(name="envGroupIds")
    def env_group_ids(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "env_group_ids")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkIsolationEnabled")
    def network_isolation_enabled(self) -> _builtins.bool:
        """
        Indicates whether network connections across environments are allowed.
        """
        return pulumi.get(self, "network_isolation_enabled")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> _builtins.str:
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter(name="protectedStatus")
    def protected_status(self) -> 'EnvironmentProtectedStatus':
        """
        Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
        """
        return pulumi.get(self, "protected_status")

    @_builtins.property
    @pulumi.getter(name="redisIds")
    def redis_ids(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "redis_ids")

    @_builtins.property
    @pulumi.getter(name="serviceIds")
    def service_ids(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "service_ids")


@pulumi.output_type
class EnvironmentWithCursor(dict):
    """
    An environment with a cursor
    """
    def __init__(__self__, *,
                 cursor: _builtins.str,
                 environment: 'outputs.Environment'):
        """
        An environment with a cursor
        """
        pulumi.set(__self__, "cursor", cursor)
        pulumi.set(__self__, "environment", environment)

    @_builtins.property
    @pulumi.getter
    def cursor(self) -> _builtins.str:
        return pulumi.get(self, "cursor")

    @_builtins.property
    @pulumi.getter
    def environment(self) -> 'outputs.Environment':
        return pulumi.get(self, "environment")


