// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.RegistryCredentials
{
    public static class ListRegistryCredentials
    {
        public static Task<ListRegistryCredentialsResult> InvokeAsync(ListRegistryCredentialsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListRegistryCredentialsResult>("render:registrycredentials:listRegistryCredentials", args ?? new ListRegistryCredentialsArgs(), options.WithDefaults());

        public static Output<ListRegistryCredentialsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListRegistryCredentialsResult>("render:registrycredentials:listRegistryCredentials", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListRegistryCredentialsArgs : global::Pulumi.InvokeArgs
    {
        public ListRegistryCredentialsArgs()
        {
        }
        public static new ListRegistryCredentialsArgs Empty => new ListRegistryCredentialsArgs();
    }


    [OutputType]
    public sealed class ListRegistryCredentialsResult
    {
        public readonly ImmutableArray<Outputs.ListRegistryCredentialsItemProperties> Items;

        [OutputConstructor]
        private ListRegistryCredentialsResult(ImmutableArray<Outputs.ListRegistryCredentialsItemProperties> items)
        {
            Items = items;
        }
    }
}
