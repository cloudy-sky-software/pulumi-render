// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.RegistryCredentials
{
    public static class GetRegistryCredential
    {
        public static Task<GetRegistryCredentialResult> InvokeAsync(GetRegistryCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryCredentialResult>("render:registrycredentials:getRegistryCredential", args ?? new GetRegistryCredentialArgs(), options.WithDefaults());

        public static Output<GetRegistryCredentialResult> Invoke(GetRegistryCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryCredentialResult>("render:registrycredentials:getRegistryCredential", args ?? new GetRegistryCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the registry credential
        /// </summary>
        [Input("registryCredentialId", required: true)]
        public string RegistryCredentialId { get; set; } = null!;

        public GetRegistryCredentialArgs()
        {
        }
        public static new GetRegistryCredentialArgs Empty => new GetRegistryCredentialArgs();
    }

    public sealed class GetRegistryCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the registry credential
        /// </summary>
        [Input("registryCredentialId", required: true)]
        public Input<string> RegistryCredentialId { get; set; } = null!;

        public GetRegistryCredentialInvokeArgs()
        {
        }
        public static new GetRegistryCredentialInvokeArgs Empty => new GetRegistryCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistryCredentialResult
    {
        public readonly Outputs.RegistryCredential Items;

        [OutputConstructor]
        private GetRegistryCredentialResult(Outputs.RegistryCredential items)
        {
            Items = items;
        }
    }
}
