// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getBlueprint(args: GetBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:blueprints:getBlueprint", {
        "blueprintId": args.blueprintId,
    }, opts);
}

export interface GetBlueprintArgs {
    /**
     * The ID of the Blueprint
     */
    blueprintId: string;
}

export interface GetBlueprintResult {
    /**
     * Automatically sync changes to render.yaml
     */
    readonly autoSync: boolean;
    readonly branch: string;
    readonly id: string;
    readonly lastSync?: string;
    readonly name: string;
    readonly repo: string;
    readonly resources: outputs.blueprints.GetBlueprintPropertiesResourcesItemProperties[];
    readonly status: enums.blueprints.GetBlueprintPropertiesStatus;
}
export function getBlueprintOutput(args: GetBlueprintOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBlueprintResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:blueprints:getBlueprint", {
        "blueprintId": args.blueprintId,
    }, opts);
}

export interface GetBlueprintOutputArgs {
    /**
     * The ID of the Blueprint
     */
    blueprintId: pulumi.Input<string>;
}
