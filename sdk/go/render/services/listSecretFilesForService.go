// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSecretFilesForService(ctx *pulumi.Context, args *ListSecretFilesForServiceArgs, opts ...pulumi.InvokeOption) (*ListSecretFilesForServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSecretFilesForServiceResult
	err := ctx.Invoke("render:services:listSecretFilesForService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSecretFilesForServiceArgs struct {
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type ListSecretFilesForServiceResult struct {
	Items []SecretFileWithCursor `pulumi:"items"`
}

func ListSecretFilesForServiceOutput(ctx *pulumi.Context, args ListSecretFilesForServiceOutputArgs, opts ...pulumi.InvokeOption) ListSecretFilesForServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSecretFilesForServiceResultOutput, error) {
			args := v.(ListSecretFilesForServiceArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListSecretFilesForServiceResult
			secret, err := ctx.InvokePackageRaw("render:services:listSecretFilesForService", args, &rv, "", opts...)
			if err != nil {
				return ListSecretFilesForServiceResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListSecretFilesForServiceResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListSecretFilesForServiceResultOutput), nil
			}
			return output, nil
		}).(ListSecretFilesForServiceResultOutput)
}

type ListSecretFilesForServiceOutputArgs struct {
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (ListSecretFilesForServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecretFilesForServiceArgs)(nil)).Elem()
}

type ListSecretFilesForServiceResultOutput struct{ *pulumi.OutputState }

func (ListSecretFilesForServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecretFilesForServiceResult)(nil)).Elem()
}

func (o ListSecretFilesForServiceResultOutput) ToListSecretFilesForServiceResultOutput() ListSecretFilesForServiceResultOutput {
	return o
}

func (o ListSecretFilesForServiceResultOutput) ToListSecretFilesForServiceResultOutputWithContext(ctx context.Context) ListSecretFilesForServiceResultOutput {
	return o
}

func (o ListSecretFilesForServiceResultOutput) Items() SecretFileWithCursorArrayOutput {
	return o.ApplyT(func(v ListSecretFilesForServiceResult) []SecretFileWithCursor { return v.Items }).(SecretFileWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSecretFilesForServiceResultOutput{})
}
