// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package disks

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DiskWithCursor struct {
	Cursor string                       `pulumi:"cursor"`
	Disk   DiskWithCursorDiskProperties `pulumi:"disk"`
}

type DiskWithCursorOutput struct{ *pulumi.OutputState }

func (DiskWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskWithCursor)(nil)).Elem()
}

func (o DiskWithCursorOutput) ToDiskWithCursorOutput() DiskWithCursorOutput {
	return o
}

func (o DiskWithCursorOutput) ToDiskWithCursorOutputWithContext(ctx context.Context) DiskWithCursorOutput {
	return o
}

func (o DiskWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o DiskWithCursorOutput) Disk() DiskWithCursorDiskPropertiesOutput {
	return o.ApplyT(func(v DiskWithCursor) DiskWithCursorDiskProperties { return v.Disk }).(DiskWithCursorDiskPropertiesOutput)
}

type DiskWithCursorArrayOutput struct{ *pulumi.OutputState }

func (DiskWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskWithCursor)(nil)).Elem()
}

func (o DiskWithCursorArrayOutput) ToDiskWithCursorArrayOutput() DiskWithCursorArrayOutput {
	return o
}

func (o DiskWithCursorArrayOutput) ToDiskWithCursorArrayOutputWithContext(ctx context.Context) DiskWithCursorArrayOutput {
	return o
}

func (o DiskWithCursorArrayOutput) Index(i pulumi.IntInput) DiskWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskWithCursor {
		return vs[0].([]DiskWithCursor)[vs[1].(int)]
	}).(DiskWithCursorOutput)
}

type DiskWithCursorDiskProperties struct {
	CreatedAt string  `pulumi:"createdAt"`
	Id        string  `pulumi:"id"`
	MountPath string  `pulumi:"mountPath"`
	Name      string  `pulumi:"name"`
	ServiceId *string `pulumi:"serviceId"`
	SizeGB    int     `pulumi:"sizeGB"`
	UpdatedAt string  `pulumi:"updatedAt"`
}

type DiskWithCursorDiskPropertiesOutput struct{ *pulumi.OutputState }

func (DiskWithCursorDiskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskWithCursorDiskProperties)(nil)).Elem()
}

func (o DiskWithCursorDiskPropertiesOutput) ToDiskWithCursorDiskPropertiesOutput() DiskWithCursorDiskPropertiesOutput {
	return o
}

func (o DiskWithCursorDiskPropertiesOutput) ToDiskWithCursorDiskPropertiesOutputWithContext(ctx context.Context) DiskWithCursorDiskPropertiesOutput {
	return o
}

func (o DiskWithCursorDiskPropertiesOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) string { return v.Id }).(pulumi.StringOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) string { return v.MountPath }).(pulumi.StringOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) string { return v.Name }).(pulumi.StringOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) SizeGB() pulumi.IntOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) int { return v.SizeGB }).(pulumi.IntOutput)
}

func (o DiskWithCursorDiskPropertiesOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v DiskWithCursorDiskProperties) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DiskWithCursorpropertiesdisk struct {
	CreatedAt string  `pulumi:"createdAt"`
	Id        string  `pulumi:"id"`
	MountPath string  `pulumi:"mountPath"`
	Name      string  `pulumi:"name"`
	ServiceId *string `pulumi:"serviceId"`
	SizeGB    int     `pulumi:"sizeGB"`
	UpdatedAt string  `pulumi:"updatedAt"`
}

func init() {
	pulumi.RegisterOutputType(DiskWithCursorOutput{})
	pulumi.RegisterOutputType(DiskWithCursorArrayOutput{})
	pulumi.RegisterOutputType(DiskWithCursorDiskPropertiesOutput{})
}
