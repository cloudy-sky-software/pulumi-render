// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class ListInstances
    {
        public static Task<ListInstancesResult> InvokeAsync(ListInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListInstancesResult>("render:services:listInstances", args ?? new ListInstancesArgs(), options.WithDefaults());

        public static Output<ListInstancesResult> Invoke(ListInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListInstancesResult>("render:services:listInstances", args ?? new ListInstancesInvokeArgs(), options.WithDefaults());

        public static Output<ListInstancesResult> Invoke(ListInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListInstancesResult>("render:services:listInstances", args ?? new ListInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public ListInstancesArgs()
        {
        }
        public static new ListInstancesArgs Empty => new ListInstancesArgs();
    }

    public sealed class ListInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public ListInstancesInvokeArgs()
        {
        }
        public static new ListInstancesInvokeArgs Empty => new ListInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class ListInstancesResult
    {
        public readonly ImmutableArray<Outputs.ServiceInstance> Items;

        [OutputConstructor]
        private ListInstancesResult(ImmutableArray<Outputs.ServiceInstance> items)
        {
            Items = items;
        }
    }
}
