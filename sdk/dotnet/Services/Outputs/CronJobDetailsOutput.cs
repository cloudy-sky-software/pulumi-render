// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services.Outputs
{

    [OutputType]
    public sealed class CronJobDetailsOutput
    {
        public readonly string BuildPlan;
        /// <summary>
        /// Environment (runtime)
        /// </summary>
        public readonly Pulumi.Render.Services.CronJobDetailsOutputEnv Env;
        public readonly Union<Outputs.DockerDetails, Outputs.NativeEnvironmentDetails> EnvSpecificDetails;
        public readonly string? LastSuccessfulRunAt;
        /// <summary>
        /// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
        /// </summary>
        public readonly Pulumi.Render.Services.CronJobDetailsOutputPlan Plan;
        public readonly Pulumi.Render.Services.CronJobDetailsOutputRegion Region;
        public readonly string Schedule;

        [OutputConstructor]
        private CronJobDetailsOutput(
            string buildPlan,

            Pulumi.Render.Services.CronJobDetailsOutputEnv env,

            Union<Outputs.DockerDetails, Outputs.NativeEnvironmentDetails> envSpecificDetails,

            string? lastSuccessfulRunAt,

            Pulumi.Render.Services.CronJobDetailsOutputPlan plan,

            Pulumi.Render.Services.CronJobDetailsOutputRegion region,

            string schedule)
        {
            BuildPlan = buildPlan;
            Env = env;
            EnvSpecificDetails = envSpecificDetails;
            LastSuccessfulRunAt = lastSuccessfulRunAt;
            Plan = plan;
            Region = region;
            Schedule = schedule;
        }
    }
}
