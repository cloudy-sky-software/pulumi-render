// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Users
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("render:users:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("render:users:getUser", InvokeArgs.Empty, options.WithDefaults());

        public static Output<GetUserResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("render:users:getUser", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string Email;
        public readonly string Name;

        [OutputConstructor]
        private GetUserResult(
            string email,

            string name)
        {
            Email = email;
            Name = name;
        }
    }
}
