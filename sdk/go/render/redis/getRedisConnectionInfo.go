// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRedisConnectionInfo(ctx *pulumi.Context, args *GetRedisConnectionInfoArgs, opts ...pulumi.InvokeOption) (*GetRedisConnectionInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRedisConnectionInfoResult
	err := ctx.Invoke("render:redis:getRedisConnectionInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetRedisConnectionInfoArgs struct {
	RedisId string `pulumi:"redisId"`
}

type GetRedisConnectionInfoResult struct {
	Items RedisConnectionInfo `pulumi:"items"`
}

func GetRedisConnectionInfoOutput(ctx *pulumi.Context, args GetRedisConnectionInfoOutputArgs, opts ...pulumi.InvokeOption) GetRedisConnectionInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRedisConnectionInfoResult, error) {
			args := v.(GetRedisConnectionInfoArgs)
			r, err := GetRedisConnectionInfo(ctx, &args, opts...)
			var s GetRedisConnectionInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRedisConnectionInfoResultOutput)
}

type GetRedisConnectionInfoOutputArgs struct {
	RedisId pulumi.StringInput `pulumi:"redisId"`
}

func (GetRedisConnectionInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisConnectionInfoArgs)(nil)).Elem()
}

type GetRedisConnectionInfoResultOutput struct{ *pulumi.OutputState }

func (GetRedisConnectionInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisConnectionInfoResult)(nil)).Elem()
}

func (o GetRedisConnectionInfoResultOutput) ToGetRedisConnectionInfoResultOutput() GetRedisConnectionInfoResultOutput {
	return o
}

func (o GetRedisConnectionInfoResultOutput) ToGetRedisConnectionInfoResultOutputWithContext(ctx context.Context) GetRedisConnectionInfoResultOutput {
	return o
}

func (o GetRedisConnectionInfoResultOutput) Items() RedisConnectionInfoOutput {
	return o.ApplyT(func(v GetRedisConnectionInfoResult) RedisConnectionInfo { return v.Items }).(RedisConnectionInfoOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRedisConnectionInfoResultOutput{})
}
