// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class GetDeploy
    {
        public static Task<GetDeployResult> InvokeAsync(GetDeployArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeployResult>("render:services:getDeploy", args ?? new GetDeployArgs(), options.WithDefaults());

        public static Output<GetDeployResult> Invoke(GetDeployInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeployResult>("render:services:getDeploy", args ?? new GetDeployInvokeArgs(), options.WithDefaults());

        public static Output<GetDeployResult> Invoke(GetDeployInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeployResult>("render:services:getDeploy", args ?? new GetDeployInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeployArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the deploy
        /// </summary>
        [Input("deployId", required: true)]
        public string DeployId { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetDeployArgs()
        {
        }
        public static new GetDeployArgs Empty => new GetDeployArgs();
    }

    public sealed class GetDeployInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the deploy
        /// </summary>
        [Input("deployId", required: true)]
        public Input<string> DeployId { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetDeployInvokeArgs()
        {
        }
        public static new GetDeployInvokeArgs Empty => new GetDeployInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeployResult
    {
        public readonly Outputs.DeployCommitProperties? Commit;
        public readonly string? CreatedAt;
        public readonly string? FinishedAt;
        public readonly string Id;
        /// <summary>
        /// Image information used when creating the deploy. Not present for Git-backed deploys
        /// </summary>
        public readonly Outputs.DeployImageProperties? Image;
        public readonly string? StartedAt;
        public readonly Pulumi.Render.Services.DeployStatus? Status;
        public readonly Pulumi.Render.Services.DeployTrigger? Trigger;
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetDeployResult(
            Outputs.DeployCommitProperties? commit,

            string? createdAt,

            string? finishedAt,

            string id,

            Outputs.DeployImageProperties? image,

            string? startedAt,

            Pulumi.Render.Services.DeployStatus? status,

            Pulumi.Render.Services.DeployTrigger? trigger,

            string? updatedAt)
        {
            Commit = commit;
            CreatedAt = createdAt;
            FinishedAt = finishedAt;
            Id = id;
            Image = image;
            StartedAt = startedAt;
            Status = status;
            Trigger = trigger;
            UpdatedAt = updatedAt;
        }
    }
}
