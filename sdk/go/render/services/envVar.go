// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnvVar struct {
	pulumi.CustomResourceState

	GenerateValue pulumi.BoolPtrOutput `pulumi:"generateValue"`
	Key           pulumi.StringOutput  `pulumi:"key"`
	Value         pulumi.StringOutput  `pulumi:"value"`
}

// NewEnvVar registers a new resource with the given unique name, arguments, and options.
func NewEnvVar(ctx *pulumi.Context,
	name string, args *EnvVarArgs, opts ...pulumi.ResourceOption) (*EnvVar, error) {
	if args == nil {
		args = &EnvVarArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvVar
	err := ctx.RegisterResource("render:services:EnvVar", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvVar gets an existing EnvVar resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvVar(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvVarState, opts ...pulumi.ResourceOption) (*EnvVar, error) {
	var resource EnvVar
	err := ctx.ReadResource("render:services:EnvVar", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvVar resources.
type envVarState struct {
}

type EnvVarState struct {
}

func (EnvVarState) ElementType() reflect.Type {
	return reflect.TypeOf((*envVarState)(nil)).Elem()
}

type envVarArgs struct {
	// The name of the environment variable
	EnvVarKey     *string `pulumi:"envVarKey"`
	GenerateValue *bool   `pulumi:"generateValue"`
	// The ID of the service
	ServiceId *string `pulumi:"serviceId"`
	Value     *string `pulumi:"value"`
}

// The set of arguments for constructing a EnvVar resource.
type EnvVarArgs struct {
	// The name of the environment variable
	EnvVarKey     pulumi.StringPtrInput
	GenerateValue pulumi.BoolPtrInput
	// The ID of the service
	ServiceId pulumi.StringPtrInput
	Value     pulumi.StringPtrInput
}

func (EnvVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*envVarArgs)(nil)).Elem()
}

type EnvVarInput interface {
	pulumi.Input

	ToEnvVarOutput() EnvVarOutput
	ToEnvVarOutputWithContext(ctx context.Context) EnvVarOutput
}

func (*EnvVar) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvVar)(nil)).Elem()
}

func (i *EnvVar) ToEnvVarOutput() EnvVarOutput {
	return i.ToEnvVarOutputWithContext(context.Background())
}

func (i *EnvVar) ToEnvVarOutputWithContext(ctx context.Context) EnvVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarOutput)
}

type EnvVarOutput struct{ *pulumi.OutputState }

func (EnvVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvVar)(nil)).Elem()
}

func (o EnvVarOutput) ToEnvVarOutput() EnvVarOutput {
	return o
}

func (o EnvVarOutput) ToEnvVarOutputWithContext(ctx context.Context) EnvVarOutput {
	return o
}

func (o EnvVarOutput) GenerateValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvVar) pulumi.BoolPtrOutput { return v.GenerateValue }).(pulumi.BoolPtrOutput)
}

func (o EnvVarOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvVar) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func (o EnvVarOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvVar) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarInput)(nil)).Elem(), &EnvVar{})
	pulumi.RegisterOutputType(EnvVarOutput{})
}
