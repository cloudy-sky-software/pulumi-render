// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MaintenancePropertiesState string

const (
	MaintenancePropertiesStateScheduled       = MaintenancePropertiesState("scheduled")
	MaintenancePropertiesStateInProgress      = MaintenancePropertiesState("in_progress")
	MaintenancePropertiesStateUserFixRequired = MaintenancePropertiesState("user_fix_required")
	MaintenancePropertiesStateCancelled       = MaintenancePropertiesState("cancelled")
	MaintenancePropertiesStateSucceeded       = MaintenancePropertiesState("succeeded")
	MaintenancePropertiesStateFailed          = MaintenancePropertiesState("failed")
)

type MaintenancePropertiesStateOutput struct{ *pulumi.OutputState }

func (MaintenancePropertiesStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenancePropertiesState)(nil)).Elem()
}

func (o MaintenancePropertiesStateOutput) ToMaintenancePropertiesStateOutput() MaintenancePropertiesStateOutput {
	return o
}

func (o MaintenancePropertiesStateOutput) ToMaintenancePropertiesStateOutputWithContext(ctx context.Context) MaintenancePropertiesStateOutput {
	return o
}

func (o MaintenancePropertiesStateOutput) ToMaintenancePropertiesStatePtrOutput() MaintenancePropertiesStatePtrOutput {
	return o.ToMaintenancePropertiesStatePtrOutputWithContext(context.Background())
}

func (o MaintenancePropertiesStateOutput) ToMaintenancePropertiesStatePtrOutputWithContext(ctx context.Context) MaintenancePropertiesStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenancePropertiesState) *MaintenancePropertiesState {
		return &v
	}).(MaintenancePropertiesStatePtrOutput)
}

func (o MaintenancePropertiesStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaintenancePropertiesStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenancePropertiesState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaintenancePropertiesStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenancePropertiesStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenancePropertiesState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaintenancePropertiesStatePtrOutput struct{ *pulumi.OutputState }

func (MaintenancePropertiesStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenancePropertiesState)(nil)).Elem()
}

func (o MaintenancePropertiesStatePtrOutput) ToMaintenancePropertiesStatePtrOutput() MaintenancePropertiesStatePtrOutput {
	return o
}

func (o MaintenancePropertiesStatePtrOutput) ToMaintenancePropertiesStatePtrOutputWithContext(ctx context.Context) MaintenancePropertiesStatePtrOutput {
	return o
}

func (o MaintenancePropertiesStatePtrOutput) Elem() MaintenancePropertiesStateOutput {
	return o.ApplyT(func(v *MaintenancePropertiesState) MaintenancePropertiesState {
		if v != nil {
			return *v
		}
		var ret MaintenancePropertiesState
		return ret
	}).(MaintenancePropertiesStateOutput)
}

func (o MaintenancePropertiesStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenancePropertiesStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaintenancePropertiesState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The eviction policy for the Key Value instance
type MaxmemoryPolicy string

const (
	MaxmemoryPolicyNoeviction     = MaxmemoryPolicy("noeviction")
	MaxmemoryPolicyAllkeysLfu     = MaxmemoryPolicy("allkeys_lfu")
	MaxmemoryPolicyAllkeysLru     = MaxmemoryPolicy("allkeys_lru")
	MaxmemoryPolicyAllkeysRandom  = MaxmemoryPolicy("allkeys_random")
	MaxmemoryPolicyVolatileLfu    = MaxmemoryPolicy("volatile_lfu")
	MaxmemoryPolicyVolatileLru    = MaxmemoryPolicy("volatile_lru")
	MaxmemoryPolicyVolatileRandom = MaxmemoryPolicy("volatile_random")
	MaxmemoryPolicyVolatileTtl    = MaxmemoryPolicy("volatile_ttl")
)

func (MaxmemoryPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxmemoryPolicy)(nil)).Elem()
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput {
	return pulumi.ToOutput(e).(MaxmemoryPolicyOutput)
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyOutputWithContext(ctx context.Context) MaxmemoryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MaxmemoryPolicyOutput)
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return e.ToMaxmemoryPolicyPtrOutputWithContext(context.Background())
}

func (e MaxmemoryPolicy) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return MaxmemoryPolicy(e).ToMaxmemoryPolicyOutputWithContext(ctx).ToMaxmemoryPolicyPtrOutputWithContext(ctx)
}

func (e MaxmemoryPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaxmemoryPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaxmemoryPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaxmemoryPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MaxmemoryPolicyOutput struct{ *pulumi.OutputState }

func (MaxmemoryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxmemoryPolicy)(nil)).Elem()
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput {
	return o
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyOutputWithContext(ctx context.Context) MaxmemoryPolicyOutput {
	return o
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return o.ToMaxmemoryPolicyPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaxmemoryPolicy) *MaxmemoryPolicy {
		return &v
	}).(MaxmemoryPolicyPtrOutput)
}

func (o MaxmemoryPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaxmemoryPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaxmemoryPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaxmemoryPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaxmemoryPolicyPtrOutput struct{ *pulumi.OutputState }

func (MaxmemoryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxmemoryPolicy)(nil)).Elem()
}

func (o MaxmemoryPolicyPtrOutput) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return o
}

func (o MaxmemoryPolicyPtrOutput) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return o
}

func (o MaxmemoryPolicyPtrOutput) Elem() MaxmemoryPolicyOutput {
	return o.ApplyT(func(v *MaxmemoryPolicy) MaxmemoryPolicy {
		if v != nil {
			return *v
		}
		var ret MaxmemoryPolicy
		return ret
	}).(MaxmemoryPolicyOutput)
}

func (o MaxmemoryPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaxmemoryPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaxmemoryPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MaxmemoryPolicyInput is an input type that accepts values of the MaxmemoryPolicy enum
// A concrete instance of `MaxmemoryPolicyInput` can be one of the following:
//
//	MaxmemoryPolicyNoeviction
//	MaxmemoryPolicyAllkeysLfu
//	MaxmemoryPolicyAllkeysLru
//	MaxmemoryPolicyAllkeysRandom
//	MaxmemoryPolicyVolatileLfu
//	MaxmemoryPolicyVolatileLru
//	MaxmemoryPolicyVolatileRandom
//	MaxmemoryPolicyVolatileTtl
type MaxmemoryPolicyInput interface {
	pulumi.Input

	ToMaxmemoryPolicyOutput() MaxmemoryPolicyOutput
	ToMaxmemoryPolicyOutputWithContext(context.Context) MaxmemoryPolicyOutput
}

var maxmemoryPolicyPtrType = reflect.TypeOf((**MaxmemoryPolicy)(nil)).Elem()

type MaxmemoryPolicyPtrInput interface {
	pulumi.Input

	ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput
	ToMaxmemoryPolicyPtrOutputWithContext(context.Context) MaxmemoryPolicyPtrOutput
}

type maxmemoryPolicyPtr string

func MaxmemoryPolicyPtr(v string) MaxmemoryPolicyPtrInput {
	return (*maxmemoryPolicyPtr)(&v)
}

func (*maxmemoryPolicyPtr) ElementType() reflect.Type {
	return maxmemoryPolicyPtrType
}

func (in *maxmemoryPolicyPtr) ToMaxmemoryPolicyPtrOutput() MaxmemoryPolicyPtrOutput {
	return pulumi.ToOutput(in).(MaxmemoryPolicyPtrOutput)
}

func (in *maxmemoryPolicyPtr) ToMaxmemoryPolicyPtrOutputWithContext(ctx context.Context) MaxmemoryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MaxmemoryPolicyPtrOutput)
}

type OwnerType string

const (
	OwnerTypeUser = OwnerType("user")
	OwnerTypeTeam = OwnerType("team")
)

type OwnerTypeOutput struct{ *pulumi.OutputState }

func (OwnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (o OwnerTypeOutput) ToOwnerTypeOutput() OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnerType) *OwnerType {
		return &v
	}).(OwnerTypePtrOutput)
}

func (o OwnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OwnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerTypePtrOutput struct{ *pulumi.OutputState }

func (OwnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerType)(nil)).Elem()
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) Elem() OwnerTypeOutput {
	return o.ApplyT(func(v *OwnerType) OwnerType {
		if v != nil {
			return *v
		}
		var ret OwnerType
		return ret
	}).(OwnerTypeOutput)
}

func (o OwnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OwnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Plan string

const (
	PlanFree     = Plan("free")
	PlanStarter  = Plan("starter")
	PlanStandard = Plan("standard")
	PlanPro      = Plan("pro")
	PlanProPlus  = Plan("pro_plus")
	PlanCustom   = Plan("custom")
)

func (Plan) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (e Plan) ToPlanOutput() PlanOutput {
	return pulumi.ToOutput(e).(PlanOutput)
}

func (e Plan) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlanOutput)
}

func (e Plan) ToPlanPtrOutput() PlanPtrOutput {
	return e.ToPlanPtrOutputWithContext(context.Background())
}

func (e Plan) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return Plan(e).ToPlanOutputWithContext(ctx).ToPlanPtrOutputWithContext(ctx)
}

func (e Plan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Plan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

func (o PlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan {
		if v != nil {
			return *v
		}
		var ret Plan
		return ret
	}).(PlanOutput)
}

func (o PlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Plan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlanInput is an input type that accepts values of the Plan enum
// A concrete instance of `PlanInput` can be one of the following:
//
//	PlanFree
//	PlanStarter
//	PlanStandard
//	PlanPro
//	PlanProPlus
//	PlanCustom
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

var planPtrType = reflect.TypeOf((**Plan)(nil)).Elem()

type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtr string

func PlanPtr(v string) PlanPtrInput {
	return (*planPtr)(&v)
}

func (*planPtr) ElementType() reflect.Type {
	return planPtrType
}

func (in *planPtr) ToPlanPtrOutput() PlanPtrOutput {
	return pulumi.ToOutput(in).(PlanPtrOutput)
}

func (in *planPtr) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlanPtrOutput)
}

type RedisDetailMaintenancePropertiesState string

const (
	RedisDetailMaintenancePropertiesStateScheduled       = RedisDetailMaintenancePropertiesState("scheduled")
	RedisDetailMaintenancePropertiesStateInProgress      = RedisDetailMaintenancePropertiesState("in_progress")
	RedisDetailMaintenancePropertiesStateUserFixRequired = RedisDetailMaintenancePropertiesState("user_fix_required")
	RedisDetailMaintenancePropertiesStateCancelled       = RedisDetailMaintenancePropertiesState("cancelled")
	RedisDetailMaintenancePropertiesStateSucceeded       = RedisDetailMaintenancePropertiesState("succeeded")
	RedisDetailMaintenancePropertiesStateFailed          = RedisDetailMaintenancePropertiesState("failed")
)

type RedisDetailMaintenancePropertiesStateOutput struct{ *pulumi.OutputState }

func (RedisDetailMaintenancePropertiesStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailMaintenancePropertiesState)(nil)).Elem()
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToRedisDetailMaintenancePropertiesStateOutput() RedisDetailMaintenancePropertiesStateOutput {
	return o
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToRedisDetailMaintenancePropertiesStateOutputWithContext(ctx context.Context) RedisDetailMaintenancePropertiesStateOutput {
	return o
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToRedisDetailMaintenancePropertiesStatePtrOutput() RedisDetailMaintenancePropertiesStatePtrOutput {
	return o.ToRedisDetailMaintenancePropertiesStatePtrOutputWithContext(context.Background())
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToRedisDetailMaintenancePropertiesStatePtrOutputWithContext(ctx context.Context) RedisDetailMaintenancePropertiesStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailMaintenancePropertiesState) *RedisDetailMaintenancePropertiesState {
		return &v
	}).(RedisDetailMaintenancePropertiesStatePtrOutput)
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailMaintenancePropertiesState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailMaintenancePropertiesStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailMaintenancePropertiesState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailMaintenancePropertiesStatePtrOutput struct{ *pulumi.OutputState }

func (RedisDetailMaintenancePropertiesStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailMaintenancePropertiesState)(nil)).Elem()
}

func (o RedisDetailMaintenancePropertiesStatePtrOutput) ToRedisDetailMaintenancePropertiesStatePtrOutput() RedisDetailMaintenancePropertiesStatePtrOutput {
	return o
}

func (o RedisDetailMaintenancePropertiesStatePtrOutput) ToRedisDetailMaintenancePropertiesStatePtrOutputWithContext(ctx context.Context) RedisDetailMaintenancePropertiesStatePtrOutput {
	return o
}

func (o RedisDetailMaintenancePropertiesStatePtrOutput) Elem() RedisDetailMaintenancePropertiesStateOutput {
	return o.ApplyT(func(v *RedisDetailMaintenancePropertiesState) RedisDetailMaintenancePropertiesState {
		if v != nil {
			return *v
		}
		var ret RedisDetailMaintenancePropertiesState
		return ret
	}).(RedisDetailMaintenancePropertiesStateOutput)
}

func (o RedisDetailMaintenancePropertiesStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailMaintenancePropertiesStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailMaintenancePropertiesState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailPlan string

const (
	RedisDetailPlanFree     = RedisDetailPlan("free")
	RedisDetailPlanStarter  = RedisDetailPlan("starter")
	RedisDetailPlanStandard = RedisDetailPlan("standard")
	RedisDetailPlanPro      = RedisDetailPlan("pro")
	RedisDetailPlanProPlus  = RedisDetailPlan("pro_plus")
	RedisDetailPlanCustom   = RedisDetailPlan("custom")
)

type RedisDetailPlanOutput struct{ *pulumi.OutputState }

func (RedisDetailPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailPlan)(nil)).Elem()
}

func (o RedisDetailPlanOutput) ToRedisDetailPlanOutput() RedisDetailPlanOutput {
	return o
}

func (o RedisDetailPlanOutput) ToRedisDetailPlanOutputWithContext(ctx context.Context) RedisDetailPlanOutput {
	return o
}

func (o RedisDetailPlanOutput) ToRedisDetailPlanPtrOutput() RedisDetailPlanPtrOutput {
	return o.ToRedisDetailPlanPtrOutputWithContext(context.Background())
}

func (o RedisDetailPlanOutput) ToRedisDetailPlanPtrOutputWithContext(ctx context.Context) RedisDetailPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailPlan) *RedisDetailPlan {
		return &v
	}).(RedisDetailPlanPtrOutput)
}

func (o RedisDetailPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailPlanPtrOutput struct{ *pulumi.OutputState }

func (RedisDetailPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailPlan)(nil)).Elem()
}

func (o RedisDetailPlanPtrOutput) ToRedisDetailPlanPtrOutput() RedisDetailPlanPtrOutput {
	return o
}

func (o RedisDetailPlanPtrOutput) ToRedisDetailPlanPtrOutputWithContext(ctx context.Context) RedisDetailPlanPtrOutput {
	return o
}

func (o RedisDetailPlanPtrOutput) Elem() RedisDetailPlanOutput {
	return o.ApplyT(func(v *RedisDetailPlan) RedisDetailPlan {
		if v != nil {
			return *v
		}
		var ret RedisDetailPlan
		return ret
	}).(RedisDetailPlanOutput)
}

func (o RedisDetailPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type RedisDetailRegion string

const (
	RedisDetailRegionFrankfurt = RedisDetailRegion("frankfurt")
	RedisDetailRegionOregon    = RedisDetailRegion("oregon")
	RedisDetailRegionOhio      = RedisDetailRegion("ohio")
	RedisDetailRegionSingapore = RedisDetailRegion("singapore")
	RedisDetailRegionVirginia  = RedisDetailRegion("virginia")
)

type RedisDetailRegionOutput struct{ *pulumi.OutputState }

func (RedisDetailRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailRegion)(nil)).Elem()
}

func (o RedisDetailRegionOutput) ToRedisDetailRegionOutput() RedisDetailRegionOutput {
	return o
}

func (o RedisDetailRegionOutput) ToRedisDetailRegionOutputWithContext(ctx context.Context) RedisDetailRegionOutput {
	return o
}

func (o RedisDetailRegionOutput) ToRedisDetailRegionPtrOutput() RedisDetailRegionPtrOutput {
	return o.ToRedisDetailRegionPtrOutputWithContext(context.Background())
}

func (o RedisDetailRegionOutput) ToRedisDetailRegionPtrOutputWithContext(ctx context.Context) RedisDetailRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailRegion) *RedisDetailRegion {
		return &v
	}).(RedisDetailRegionPtrOutput)
}

func (o RedisDetailRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailRegionPtrOutput struct{ *pulumi.OutputState }

func (RedisDetailRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailRegion)(nil)).Elem()
}

func (o RedisDetailRegionPtrOutput) ToRedisDetailRegionPtrOutput() RedisDetailRegionPtrOutput {
	return o
}

func (o RedisDetailRegionPtrOutput) ToRedisDetailRegionPtrOutputWithContext(ctx context.Context) RedisDetailRegionPtrOutput {
	return o
}

func (o RedisDetailRegionPtrOutput) Elem() RedisDetailRegionOutput {
	return o.ApplyT(func(v *RedisDetailRegion) RedisDetailRegion {
		if v != nil {
			return *v
		}
		var ret RedisDetailRegion
		return ret
	}).(RedisDetailRegionOutput)
}

func (o RedisDetailRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailStatus string

const (
	RedisDetailStatusCreating              = RedisDetailStatus("creating")
	RedisDetailStatusAvailable             = RedisDetailStatus("available")
	RedisDetailStatusUnavailable           = RedisDetailStatus("unavailable")
	RedisDetailStatusConfigRestart         = RedisDetailStatus("config_restart")
	RedisDetailStatusSuspended             = RedisDetailStatus("suspended")
	RedisDetailStatusMaintenanceScheduled  = RedisDetailStatus("maintenance_scheduled")
	RedisDetailStatusMaintenanceInProgress = RedisDetailStatus("maintenance_in_progress")
	RedisDetailStatusRecoveryFailed        = RedisDetailStatus("recovery_failed")
	RedisDetailStatusRecoveryInProgress    = RedisDetailStatus("recovery_in_progress")
	RedisDetailStatusUnknown               = RedisDetailStatus("unknown")
	RedisDetailStatusUpdatingInstance      = RedisDetailStatus("updating_instance")
)

type RedisDetailStatusOutput struct{ *pulumi.OutputState }

func (RedisDetailStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailStatus)(nil)).Elem()
}

func (o RedisDetailStatusOutput) ToRedisDetailStatusOutput() RedisDetailStatusOutput {
	return o
}

func (o RedisDetailStatusOutput) ToRedisDetailStatusOutputWithContext(ctx context.Context) RedisDetailStatusOutput {
	return o
}

func (o RedisDetailStatusOutput) ToRedisDetailStatusPtrOutput() RedisDetailStatusPtrOutput {
	return o.ToRedisDetailStatusPtrOutputWithContext(context.Background())
}

func (o RedisDetailStatusOutput) ToRedisDetailStatusPtrOutputWithContext(ctx context.Context) RedisDetailStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailStatus) *RedisDetailStatus {
		return &v
	}).(RedisDetailStatusPtrOutput)
}

func (o RedisDetailStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailStatusPtrOutput struct{ *pulumi.OutputState }

func (RedisDetailStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailStatus)(nil)).Elem()
}

func (o RedisDetailStatusPtrOutput) ToRedisDetailStatusPtrOutput() RedisDetailStatusPtrOutput {
	return o
}

func (o RedisDetailStatusPtrOutput) ToRedisDetailStatusPtrOutputWithContext(ctx context.Context) RedisDetailStatusPtrOutput {
	return o
}

func (o RedisDetailStatusPtrOutput) Elem() RedisDetailStatusOutput {
	return o.ApplyT(func(v *RedisDetailStatus) RedisDetailStatus {
		if v != nil {
			return *v
		}
		var ret RedisDetailStatus
		return ret
	}).(RedisDetailStatusOutput)
}

func (o RedisDetailStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisPlan string

const (
	RedisPlanFree     = RedisPlan("free")
	RedisPlanStarter  = RedisPlan("starter")
	RedisPlanStandard = RedisPlan("standard")
	RedisPlanPro      = RedisPlan("pro")
	RedisPlanProPlus  = RedisPlan("pro_plus")
	RedisPlanCustom   = RedisPlan("custom")
)

type RedisPlanOutput struct{ *pulumi.OutputState }

func (RedisPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisPlan)(nil)).Elem()
}

func (o RedisPlanOutput) ToRedisPlanOutput() RedisPlanOutput {
	return o
}

func (o RedisPlanOutput) ToRedisPlanOutputWithContext(ctx context.Context) RedisPlanOutput {
	return o
}

func (o RedisPlanOutput) ToRedisPlanPtrOutput() RedisPlanPtrOutput {
	return o.ToRedisPlanPtrOutputWithContext(context.Background())
}

func (o RedisPlanOutput) ToRedisPlanPtrOutputWithContext(ctx context.Context) RedisPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisPlan) *RedisPlan {
		return &v
	}).(RedisPlanPtrOutput)
}

func (o RedisPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisPlanPtrOutput struct{ *pulumi.OutputState }

func (RedisPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisPlan)(nil)).Elem()
}

func (o RedisPlanPtrOutput) ToRedisPlanPtrOutput() RedisPlanPtrOutput {
	return o
}

func (o RedisPlanPtrOutput) ToRedisPlanPtrOutputWithContext(ctx context.Context) RedisPlanPtrOutput {
	return o
}

func (o RedisPlanPtrOutput) Elem() RedisPlanOutput {
	return o.ApplyT(func(v *RedisPlan) RedisPlan {
		if v != nil {
			return *v
		}
		var ret RedisPlan
		return ret
	}).(RedisPlanOutput)
}

func (o RedisPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type RedisRegion string

const (
	RedisRegionFrankfurt = RedisRegion("frankfurt")
	RedisRegionOregon    = RedisRegion("oregon")
	RedisRegionOhio      = RedisRegion("ohio")
	RedisRegionSingapore = RedisRegion("singapore")
	RedisRegionVirginia  = RedisRegion("virginia")
)

type RedisRegionOutput struct{ *pulumi.OutputState }

func (RedisRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRegion)(nil)).Elem()
}

func (o RedisRegionOutput) ToRedisRegionOutput() RedisRegionOutput {
	return o
}

func (o RedisRegionOutput) ToRedisRegionOutputWithContext(ctx context.Context) RedisRegionOutput {
	return o
}

func (o RedisRegionOutput) ToRedisRegionPtrOutput() RedisRegionPtrOutput {
	return o.ToRedisRegionPtrOutputWithContext(context.Background())
}

func (o RedisRegionOutput) ToRedisRegionPtrOutputWithContext(ctx context.Context) RedisRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisRegion) *RedisRegion {
		return &v
	}).(RedisRegionPtrOutput)
}

func (o RedisRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisRegionPtrOutput struct{ *pulumi.OutputState }

func (RedisRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRegion)(nil)).Elem()
}

func (o RedisRegionPtrOutput) ToRedisRegionPtrOutput() RedisRegionPtrOutput {
	return o
}

func (o RedisRegionPtrOutput) ToRedisRegionPtrOutputWithContext(ctx context.Context) RedisRegionPtrOutput {
	return o
}

func (o RedisRegionPtrOutput) Elem() RedisRegionOutput {
	return o.ApplyT(func(v *RedisRegion) RedisRegion {
		if v != nil {
			return *v
		}
		var ret RedisRegion
		return ret
	}).(RedisRegionOutput)
}

func (o RedisRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisStatus string

const (
	RedisStatusCreating              = RedisStatus("creating")
	RedisStatusAvailable             = RedisStatus("available")
	RedisStatusUnavailable           = RedisStatus("unavailable")
	RedisStatusConfigRestart         = RedisStatus("config_restart")
	RedisStatusSuspended             = RedisStatus("suspended")
	RedisStatusMaintenanceScheduled  = RedisStatus("maintenance_scheduled")
	RedisStatusMaintenanceInProgress = RedisStatus("maintenance_in_progress")
	RedisStatusRecoveryFailed        = RedisStatus("recovery_failed")
	RedisStatusRecoveryInProgress    = RedisStatus("recovery_in_progress")
	RedisStatusUnknown               = RedisStatus("unknown")
	RedisStatusUpdatingInstance      = RedisStatus("updating_instance")
)

type RedisStatusOutput struct{ *pulumi.OutputState }

func (RedisStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisStatus)(nil)).Elem()
}

func (o RedisStatusOutput) ToRedisStatusOutput() RedisStatusOutput {
	return o
}

func (o RedisStatusOutput) ToRedisStatusOutputWithContext(ctx context.Context) RedisStatusOutput {
	return o
}

func (o RedisStatusOutput) ToRedisStatusPtrOutput() RedisStatusPtrOutput {
	return o.ToRedisStatusPtrOutputWithContext(context.Background())
}

func (o RedisStatusOutput) ToRedisStatusPtrOutputWithContext(ctx context.Context) RedisStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisStatus) *RedisStatus {
		return &v
	}).(RedisStatusPtrOutput)
}

func (o RedisStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisStatusPtrOutput struct{ *pulumi.OutputState }

func (RedisStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisStatus)(nil)).Elem()
}

func (o RedisStatusPtrOutput) ToRedisStatusPtrOutput() RedisStatusPtrOutput {
	return o
}

func (o RedisStatusPtrOutput) ToRedisStatusPtrOutputWithContext(ctx context.Context) RedisStatusPtrOutput {
	return o
}

func (o RedisStatusPtrOutput) Elem() RedisStatusOutput {
	return o.ApplyT(func(v *RedisStatus) RedisStatus {
		if v != nil {
			return *v
		}
		var ret RedisStatus
		return ret
	}).(RedisStatusOutput)
}

func (o RedisStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type Region string

const (
	RegionFrankfurt = Region("frankfurt")
	RegionOregon    = Region("oregon")
	RegionOhio      = Region("ohio")
	RegionSingapore = Region("singapore")
	RegionVirginia  = Region("virginia")
)

type RegionOutput struct{ *pulumi.OutputState }

func (RegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Region)(nil)).Elem()
}

func (o RegionOutput) ToRegionOutput() RegionOutput {
	return o
}

func (o RegionOutput) ToRegionOutputWithContext(ctx context.Context) RegionOutput {
	return o
}

func (o RegionOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o.ToRegionPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Region) *Region {
		return &v
	}).(RegionPtrOutput)
}

func (o RegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionPtrOutput struct{ *pulumi.OutputState }

func (RegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Region)(nil)).Elem()
}

func (o RegionPtrOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) Elem() RegionOutput {
	return o.ApplyT(func(v *Region) Region {
		if v != nil {
			return *v
		}
		var ret Region
		return ret
	}).(RegionOutput)
}

func (o RegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Region) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Status string

const (
	StatusCreating              = Status("creating")
	StatusAvailable             = Status("available")
	StatusUnavailable           = Status("unavailable")
	StatusConfigRestart         = Status("config_restart")
	StatusSuspended             = Status("suspended")
	StatusMaintenanceScheduled  = Status("maintenance_scheduled")
	StatusMaintenanceInProgress = Status("maintenance_in_progress")
	StatusRecoveryFailed        = Status("recovery_failed")
	StatusRecoveryInProgress    = Status("recovery_in_progress")
	StatusUnknown               = Status("unknown")
	StatusUpdatingInstance      = Status("updating_instance")
)

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaxmemoryPolicyInput)(nil)).Elem(), MaxmemoryPolicy("noeviction"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaxmemoryPolicyPtrInput)(nil)).Elem(), MaxmemoryPolicy("noeviction"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlanInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlanPtrInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterOutputType(MaintenancePropertiesStateOutput{})
	pulumi.RegisterOutputType(MaintenancePropertiesStatePtrOutput{})
	pulumi.RegisterOutputType(MaxmemoryPolicyOutput{})
	pulumi.RegisterOutputType(MaxmemoryPolicyPtrOutput{})
	pulumi.RegisterOutputType(OwnerTypeOutput{})
	pulumi.RegisterOutputType(OwnerTypePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(RedisDetailMaintenancePropertiesStateOutput{})
	pulumi.RegisterOutputType(RedisDetailMaintenancePropertiesStatePtrOutput{})
	pulumi.RegisterOutputType(RedisDetailPlanOutput{})
	pulumi.RegisterOutputType(RedisDetailPlanPtrOutput{})
	pulumi.RegisterOutputType(RedisDetailRegionOutput{})
	pulumi.RegisterOutputType(RedisDetailRegionPtrOutput{})
	pulumi.RegisterOutputType(RedisDetailStatusOutput{})
	pulumi.RegisterOutputType(RedisDetailStatusPtrOutput{})
	pulumi.RegisterOutputType(RedisPlanOutput{})
	pulumi.RegisterOutputType(RedisPlanPtrOutput{})
	pulumi.RegisterOutputType(RedisRegionOutput{})
	pulumi.RegisterOutputType(RedisRegionPtrOutput{})
	pulumi.RegisterOutputType(RedisStatusOutput{})
	pulumi.RegisterOutputType(RedisStatusPtrOutput{})
	pulumi.RegisterOutputType(RegionOutput{})
	pulumi.RegisterOutputType(RegionPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
}
