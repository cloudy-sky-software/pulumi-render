// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getRegistryCredential(args: GetRegistryCredentialArgs, opts?: pulumi.InvokeOptions): Promise<outputs.registrycredentials.RegistryCredential> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:registrycredentials:getRegistryCredential", {
        "registryCredentialId": args.registryCredentialId,
    }, opts);
}

export interface GetRegistryCredentialArgs {
    /**
     * The ID of the registry credential
     */
    registryCredentialId: string;
}
export function getRegistryCredentialOutput(args: GetRegistryCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.registrycredentials.RegistryCredential> {
    return pulumi.output(args).apply((a: any) => getRegistryCredential(a, opts))
}

export interface GetRegistryCredentialOutputArgs {
    /**
     * The ID of the registry credential
     */
    registryCredentialId: pulumi.Input<string>;
}
