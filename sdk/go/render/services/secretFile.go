// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretFile struct {
	pulumi.CustomResourceState

	Content pulumi.StringOutput `pulumi:"content"`
	Name    pulumi.StringOutput `pulumi:"name"`
}

// NewSecretFile registers a new resource with the given unique name, arguments, and options.
func NewSecretFile(ctx *pulumi.Context,
	name string, args *SecretFileArgs, opts ...pulumi.ResourceOption) (*SecretFile, error) {
	if args == nil {
		args = &SecretFileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretFile
	err := ctx.RegisterResource("render:services:SecretFile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretFile gets an existing SecretFile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretFile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretFileState, opts ...pulumi.ResourceOption) (*SecretFile, error) {
	var resource SecretFile
	err := ctx.ReadResource("render:services:SecretFile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretFile resources.
type secretFileState struct {
}

type SecretFileState struct {
}

func (SecretFileState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretFileState)(nil)).Elem()
}

type secretFileArgs struct {
	Content *string `pulumi:"content"`
	// The file name of the secret file
	SecretFileName *string `pulumi:"secretFileName"`
	// The ID of the service
	ServiceId *string `pulumi:"serviceId"`
}

// The set of arguments for constructing a SecretFile resource.
type SecretFileArgs struct {
	Content pulumi.StringPtrInput
	// The file name of the secret file
	SecretFileName pulumi.StringPtrInput
	// The ID of the service
	ServiceId pulumi.StringPtrInput
}

func (SecretFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretFileArgs)(nil)).Elem()
}

type SecretFileInput interface {
	pulumi.Input

	ToSecretFileOutput() SecretFileOutput
	ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput
}

func (*SecretFile) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretFile)(nil)).Elem()
}

func (i *SecretFile) ToSecretFileOutput() SecretFileOutput {
	return i.ToSecretFileOutputWithContext(context.Background())
}

func (i *SecretFile) ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretFileOutput)
}

type SecretFileOutput struct{ *pulumi.OutputState }

func (SecretFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretFile)(nil)).Elem()
}

func (o SecretFileOutput) ToSecretFileOutput() SecretFileOutput {
	return o
}

func (o SecretFileOutput) ToSecretFileOutputWithContext(ctx context.Context) SecretFileOutput {
	return o
}

func (o SecretFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretFile) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

func (o SecretFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretFile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretFileInput)(nil)).Elem(), &SecretFile{})
	pulumi.RegisterOutputType(SecretFileOutput{})
}
