// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListEnvVarsForService(ctx *pulumi.Context, args *ListEnvVarsForServiceArgs, opts ...pulumi.InvokeOption) (*ListEnvVarsForServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListEnvVarsForServiceResult
	err := ctx.Invoke("render:services:listEnvVarsForService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEnvVarsForServiceArgs struct {
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type ListEnvVarsForServiceResult struct {
	Items []EnvVarWithCursor `pulumi:"items"`
}

func ListEnvVarsForServiceOutput(ctx *pulumi.Context, args ListEnvVarsForServiceOutputArgs, opts ...pulumi.InvokeOption) ListEnvVarsForServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListEnvVarsForServiceResultOutput, error) {
			args := v.(ListEnvVarsForServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:services:listEnvVarsForService", args, ListEnvVarsForServiceResultOutput{}, options).(ListEnvVarsForServiceResultOutput), nil
		}).(ListEnvVarsForServiceResultOutput)
}

type ListEnvVarsForServiceOutputArgs struct {
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (ListEnvVarsForServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEnvVarsForServiceArgs)(nil)).Elem()
}

type ListEnvVarsForServiceResultOutput struct{ *pulumi.OutputState }

func (ListEnvVarsForServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEnvVarsForServiceResult)(nil)).Elem()
}

func (o ListEnvVarsForServiceResultOutput) ToListEnvVarsForServiceResultOutput() ListEnvVarsForServiceResultOutput {
	return o
}

func (o ListEnvVarsForServiceResultOutput) ToListEnvVarsForServiceResultOutputWithContext(ctx context.Context) ListEnvVarsForServiceResultOutput {
	return o
}

func (o ListEnvVarsForServiceResultOutput) Items() EnvVarWithCursorArrayOutput {
	return o.ApplyT(func(v ListEnvVarsForServiceResult) []EnvVarWithCursor { return v.Items }).(EnvVarWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEnvVarsForServiceResultOutput{})
}
