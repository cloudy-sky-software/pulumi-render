// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Registrycredentials
{
    public static class GetRegistryCredential
    {
        public static Task<GetRegistryCredentialResult> InvokeAsync(GetRegistryCredentialArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryCredentialResult>("render:registrycredentials:getRegistryCredential", args ?? new GetRegistryCredentialArgs(), options.WithDefaults());

        public static Output<GetRegistryCredentialResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryCredentialResult>("render:registrycredentials:getRegistryCredential", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetRegistryCredentialArgs : global::Pulumi.InvokeArgs
    {
        public GetRegistryCredentialArgs()
        {
        }
        public static new GetRegistryCredentialArgs Empty => new GetRegistryCredentialArgs();
    }


    [OutputType]
    public sealed class GetRegistryCredentialResult
    {
        public readonly Outputs.GetRegistryCredentialProperties Items;

        [OutputConstructor]
        private GetRegistryCredentialResult(Outputs.GetRegistryCredentialProperties items)
        {
            Items = items;
        }
    }
}
