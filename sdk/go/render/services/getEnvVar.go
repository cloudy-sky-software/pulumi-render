// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEnvVar(ctx *pulumi.Context, args *GetEnvVarArgs, opts ...pulumi.InvokeOption) (*GetEnvVarResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvVarResult
	err := ctx.Invoke("render:services:getEnvVar", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEnvVarArgs struct {
	// The name of the environment variable
	EnvVarKey string `pulumi:"envVarKey"`
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type GetEnvVarResult struct {
	Items EnvVar `pulumi:"items"`
}

func GetEnvVarOutput(ctx *pulumi.Context, args GetEnvVarOutputArgs, opts ...pulumi.InvokeOption) GetEnvVarResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnvVarResult, error) {
			args := v.(GetEnvVarArgs)
			r, err := GetEnvVar(ctx, &args, opts...)
			var s GetEnvVarResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnvVarResultOutput)
}

type GetEnvVarOutputArgs struct {
	// The name of the environment variable
	EnvVarKey pulumi.StringInput `pulumi:"envVarKey"`
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (GetEnvVarOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvVarArgs)(nil)).Elem()
}

type GetEnvVarResultOutput struct{ *pulumi.OutputState }

func (GetEnvVarResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvVarResult)(nil)).Elem()
}

func (o GetEnvVarResultOutput) ToGetEnvVarResultOutput() GetEnvVarResultOutput {
	return o
}

func (o GetEnvVarResultOutput) ToGetEnvVarResultOutputWithContext(ctx context.Context) GetEnvVarResultOutput {
	return o
}

func (o GetEnvVarResultOutput) Items() EnvVarOutput {
	return o.ApplyT(func(v GetEnvVarResult) EnvVar { return v.Items }).(EnvVarOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvVarResultOutput{})
}
