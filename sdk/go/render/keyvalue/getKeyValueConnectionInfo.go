// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvalue

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetKeyValueConnectionInfo(ctx *pulumi.Context, args *GetKeyValueConnectionInfoArgs, opts ...pulumi.InvokeOption) (*GetKeyValueConnectionInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeyValueConnectionInfoResult
	err := ctx.Invoke("render:key-value:getKeyValueConnectionInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetKeyValueConnectionInfoArgs struct {
	KeyValueId string `pulumi:"keyValueId"`
}

// A Key Value instance
type GetKeyValueConnectionInfoResult struct {
	// The CLI (redis-cli or valkey-cli) command to connect to the Key Value instance
	CliCommand string `pulumi:"cliCommand"`
	// The connection string to use from outside Render
	ExternalConnectionString string `pulumi:"externalConnectionString"`
	// The connection string to use from within Render
	InternalConnectionString string `pulumi:"internalConnectionString"`
}

func GetKeyValueConnectionInfoOutput(ctx *pulumi.Context, args GetKeyValueConnectionInfoOutputArgs, opts ...pulumi.InvokeOption) GetKeyValueConnectionInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKeyValueConnectionInfoResultOutput, error) {
			args := v.(GetKeyValueConnectionInfoArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:key-value:getKeyValueConnectionInfo", args, GetKeyValueConnectionInfoResultOutput{}, options).(GetKeyValueConnectionInfoResultOutput), nil
		}).(GetKeyValueConnectionInfoResultOutput)
}

type GetKeyValueConnectionInfoOutputArgs struct {
	KeyValueId pulumi.StringInput `pulumi:"keyValueId"`
}

func (GetKeyValueConnectionInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyValueConnectionInfoArgs)(nil)).Elem()
}

// A Key Value instance
type GetKeyValueConnectionInfoResultOutput struct{ *pulumi.OutputState }

func (GetKeyValueConnectionInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyValueConnectionInfoResult)(nil)).Elem()
}

func (o GetKeyValueConnectionInfoResultOutput) ToGetKeyValueConnectionInfoResultOutput() GetKeyValueConnectionInfoResultOutput {
	return o
}

func (o GetKeyValueConnectionInfoResultOutput) ToGetKeyValueConnectionInfoResultOutputWithContext(ctx context.Context) GetKeyValueConnectionInfoResultOutput {
	return o
}

// The CLI (redis-cli or valkey-cli) command to connect to the Key Value instance
func (o GetKeyValueConnectionInfoResultOutput) CliCommand() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyValueConnectionInfoResult) string { return v.CliCommand }).(pulumi.StringOutput)
}

// The connection string to use from outside Render
func (o GetKeyValueConnectionInfoResultOutput) ExternalConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyValueConnectionInfoResult) string { return v.ExternalConnectionString }).(pulumi.StringOutput)
}

// The connection string to use from within Render
func (o GetKeyValueConnectionInfoResultOutput) InternalConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyValueConnectionInfoResult) string { return v.InternalConnectionString }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeyValueConnectionInfoResultOutput{})
}
