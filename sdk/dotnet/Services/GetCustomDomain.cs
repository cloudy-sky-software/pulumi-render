// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class GetCustomDomain
    {
        public static Task<GetCustomDomainResult> InvokeAsync(GetCustomDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomDomainResult>("render:services:getCustomDomain", args ?? new GetCustomDomainArgs(), options.WithDefaults());

        public static Output<GetCustomDomainResult> Invoke(GetCustomDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomDomainResult>("render:services:getCustomDomain", args ?? new GetCustomDomainInvokeArgs(), options.WithDefaults());

        public static Output<GetCustomDomainResult> Invoke(GetCustomDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomDomainResult>("render:services:getCustomDomain", args ?? new GetCustomDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or name of the custom domain
        /// </summary>
        [Input("customDomainIdOrName", required: true)]
        public string CustomDomainIdOrName { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetCustomDomainArgs()
        {
        }
        public static new GetCustomDomainArgs Empty => new GetCustomDomainArgs();
    }

    public sealed class GetCustomDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or name of the custom domain
        /// </summary>
        [Input("customDomainIdOrName", required: true)]
        public Input<string> CustomDomainIdOrName { get; set; } = null!;

        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetCustomDomainInvokeArgs()
        {
        }
        public static new GetCustomDomainInvokeArgs Empty => new GetCustomDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomDomainResult
    {
        public readonly string CreatedAt;
        public readonly Pulumi.Render.Services.CustomDomainDomainType DomainType;
        public readonly string Id;
        public readonly string Name;
        public readonly string PublicSuffix;
        public readonly string RedirectForName;
        public readonly Outputs.CustomDomainServerProperties? Server;
        public readonly Pulumi.Render.Services.CustomDomainVerificationStatus VerificationStatus;

        [OutputConstructor]
        private GetCustomDomainResult(
            string createdAt,

            Pulumi.Render.Services.CustomDomainDomainType domainType,

            string id,

            string name,

            string publicSuffix,

            string redirectForName,

            Outputs.CustomDomainServerProperties? server,

            Pulumi.Render.Services.CustomDomainVerificationStatus verificationStatus)
        {
            CreatedAt = createdAt;
            DomainType = domainType;
            Id = id;
            Name = name;
            PublicSuffix = publicSuffix;
            RedirectForName = redirectForName;
            Server = server;
            VerificationStatus = verificationStatus;
        }
    }
}
