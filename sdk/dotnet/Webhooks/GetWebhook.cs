// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Webhooks
{
    public static class GetWebhook
    {
        public static Task<GetWebhookResult> InvokeAsync(GetWebhookArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebhookResult>("render:webhooks:getWebhook", args ?? new GetWebhookArgs(), options.WithDefaults());

        public static Output<GetWebhookResult> Invoke(GetWebhookInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebhookResult>("render:webhooks:getWebhook", args ?? new GetWebhookInvokeArgs(), options.WithDefaults());

        public static Output<GetWebhookResult> Invoke(GetWebhookInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebhookResult>("render:webhooks:getWebhook", args ?? new GetWebhookInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebhookArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for the webhook
        /// </summary>
        [Input("webhookId", required: true)]
        public string WebhookId { get; set; } = null!;

        public GetWebhookArgs()
        {
        }
        public static new GetWebhookArgs Empty => new GetWebhookArgs();
    }

    public sealed class GetWebhookInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for the webhook
        /// </summary>
        [Input("webhookId", required: true)]
        public Input<string> WebhookId { get; set; } = null!;

        public GetWebhookInvokeArgs()
        {
        }
        public static new GetWebhookInvokeArgs Empty => new GetWebhookInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebhookResult
    {
        public readonly bool Enabled;
        /// <summary>
        /// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Render.Webhooks.WebhookWithCursorpropertieswebhookEventFilterItem> EventFilter;
        public readonly string Id;
        public readonly string Name;
        public readonly string Secret;
        public readonly string Url;

        [OutputConstructor]
        private GetWebhookResult(
            bool enabled,

            ImmutableArray<Pulumi.Render.Webhooks.WebhookWithCursorpropertieswebhookEventFilterItem> eventFilter,

            string id,

            string name,

            string secret,

            string url)
        {
            Enabled = enabled;
            EventFilter = eventFilter;
            Id = id;
            Name = name;
            Secret = secret;
            Url = url;
        }
    }
}
