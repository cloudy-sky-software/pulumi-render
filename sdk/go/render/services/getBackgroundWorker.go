// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBackgroundWorker(ctx *pulumi.Context, args *LookupBackgroundWorkerArgs, opts ...pulumi.InvokeOption) (*LookupBackgroundWorkerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackgroundWorkerResult
	err := ctx.Invoke("render:services:getBackgroundWorker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupBackgroundWorkerArgs struct {
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type LookupBackgroundWorkerResult struct {
	AutoDeploy  ServiceAutoDeploy `pulumi:"autoDeploy"`
	Branch      *string           `pulumi:"branch"`
	BuildFilter *BuildFilter      `pulumi:"buildFilter"`
	CreatedAt   string            `pulumi:"createdAt"`
	// The URL to view the service in the Render Dashboard
	DashboardUrl       string                         `pulumi:"dashboardUrl"`
	EnvironmentId      *string                        `pulumi:"environmentId"`
	Id                 string                         `pulumi:"id"`
	ImagePath          *string                        `pulumi:"imagePath"`
	Name               string                         `pulumi:"name"`
	NotifyOnFail       ServiceNotifyOnFail            `pulumi:"notifyOnFail"`
	OwnerId            string                         `pulumi:"ownerId"`
	RegistryCredential *RegistryCredentialSummary     `pulumi:"registryCredential"`
	Repo               *string                        `pulumi:"repo"`
	RootDir            string                         `pulumi:"rootDir"`
	ServiceDetails     *BackgroundWorkerDetailsOutput `pulumi:"serviceDetails"`
	Slug               string                         `pulumi:"slug"`
	Suspended          ServiceSuspended               `pulumi:"suspended"`
	Suspenders         []ServiceSuspendersItem        `pulumi:"suspenders"`
	Type               *string                        `pulumi:"type"`
	UpdatedAt          string                         `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for LookupBackgroundWorkerResult
func (val *LookupBackgroundWorkerResult) Defaults() *LookupBackgroundWorkerResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if internal.IsZero(tmp.AutoDeploy) {
		tmp.AutoDeploy = ServiceAutoDeploy("yes")
	}
	tmp.ServiceDetails = tmp.ServiceDetails.Defaults()

	if tmp.Type == nil {
		type_ := "background_worker"
		tmp.Type = &type_
	}
	return &tmp
}
func LookupBackgroundWorkerOutput(ctx *pulumi.Context, args LookupBackgroundWorkerOutputArgs, opts ...pulumi.InvokeOption) LookupBackgroundWorkerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackgroundWorkerResultOutput, error) {
			args := v.(LookupBackgroundWorkerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:services:getBackgroundWorker", args, LookupBackgroundWorkerResultOutput{}, options).(LookupBackgroundWorkerResultOutput), nil
		}).(LookupBackgroundWorkerResultOutput)
}

type LookupBackgroundWorkerOutputArgs struct {
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupBackgroundWorkerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackgroundWorkerArgs)(nil)).Elem()
}

type LookupBackgroundWorkerResultOutput struct{ *pulumi.OutputState }

func (LookupBackgroundWorkerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackgroundWorkerResult)(nil)).Elem()
}

func (o LookupBackgroundWorkerResultOutput) ToLookupBackgroundWorkerResultOutput() LookupBackgroundWorkerResultOutput {
	return o
}

func (o LookupBackgroundWorkerResultOutput) ToLookupBackgroundWorkerResultOutputWithContext(ctx context.Context) LookupBackgroundWorkerResultOutput {
	return o
}

func (o LookupBackgroundWorkerResultOutput) AutoDeploy() ServiceAutoDeployOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployOutput)
}

func (o LookupBackgroundWorkerResultOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *BuildFilter { return v.BuildFilter }).(BuildFilterPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The URL to view the service in the Render Dashboard
func (o LookupBackgroundWorkerResultOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *string { return v.ImagePath }).(pulumi.StringPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) NotifyOnFail() ServiceNotifyOnFailOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailOutput)
}

func (o LookupBackgroundWorkerResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) RegistryCredential() RegistryCredentialSummaryPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *RegistryCredentialSummary { return v.RegistryCredential }).(RegistryCredentialSummaryPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) RootDir() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.RootDir }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) ServiceDetails() BackgroundWorkerDetailsOutputPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *BackgroundWorkerDetailsOutput { return v.ServiceDetails }).(BackgroundWorkerDetailsOutputPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.Slug }).(pulumi.StringOutput)
}

func (o LookupBackgroundWorkerResultOutput) Suspended() ServiceSuspendedOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) ServiceSuspended { return v.Suspended }).(ServiceSuspendedOutput)
}

func (o LookupBackgroundWorkerResultOutput) Suspenders() ServiceSuspendersItemArrayOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) []ServiceSuspendersItem { return v.Suspenders }).(ServiceSuspendersItemArrayOutput)
}

func (o LookupBackgroundWorkerResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o LookupBackgroundWorkerResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackgroundWorkerResultOutput{})
}
