// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getEnvGroup(args: GetEnvGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:env-groups:getEnvGroup", {
        "envGroupId": args.envGroupId,
    }, opts);
}

export interface GetEnvGroupArgs {
    /**
     * Filter for resources that belong to an environment group
     */
    envGroupId: string;
}

export interface GetEnvGroupResult {
    readonly createdAt: string;
    readonly envVars: outputs.envgroups.EnvVar[];
    readonly environmentId?: string;
    readonly id: string;
    readonly name: string;
    readonly ownerId: string;
    readonly secretFiles: outputs.envgroups.SecretFile[];
    /**
     * List of serviceIds linked to the envGroup
     */
    readonly serviceLinks: outputs.envgroups.EnvGroupLink[];
    readonly updatedAt: string;
}
export function getEnvGroupOutput(args: GetEnvGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEnvGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:env-groups:getEnvGroup", {
        "envGroupId": args.envGroupId,
    }, opts);
}

export interface GetEnvGroupOutputArgs {
    /**
     * Filter for resources that belong to an environment group
     */
    envGroupId: pulumi.Input<string>;
}
