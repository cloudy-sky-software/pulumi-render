// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Redis
{
    public static class GetRedis
    {
        public static Task<GetRedisResult> InvokeAsync(GetRedisArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRedisResult>("render:redis:getRedis", args ?? new GetRedisArgs(), options.WithDefaults());

        public static Output<GetRedisResult> Invoke(GetRedisInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRedisResult>("render:redis:getRedis", args ?? new GetRedisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRedisArgs : global::Pulumi.InvokeArgs
    {
        [Input("redisId", required: true)]
        public string RedisId { get; set; } = null!;

        public GetRedisArgs()
        {
        }
        public static new GetRedisArgs Empty => new GetRedisArgs();
    }

    public sealed class GetRedisInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("redisId", required: true)]
        public Input<string> RedisId { get; set; } = null!;

        public GetRedisInvokeArgs()
        {
        }
        public static new GetRedisInvokeArgs Empty => new GetRedisInvokeArgs();
    }


    [OutputType]
    public sealed class GetRedisResult
    {
        public readonly Outputs.RedisDetail Items;

        [OutputConstructor]
        private GetRedisResult(Outputs.RedisDetail items)
        {
            Items = items;
        }
    }
}
