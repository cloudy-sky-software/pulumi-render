// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListRoutes(ctx *pulumi.Context, args *ListRoutesArgs, opts ...pulumi.InvokeOption) (*ListRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListRoutesResult
	err := ctx.Invoke("render:services:listRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListRoutesArgs struct {
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type ListRoutesResult struct {
	Items []RouteWithCursor `pulumi:"items"`
}

func ListRoutesOutput(ctx *pulumi.Context, args ListRoutesOutputArgs, opts ...pulumi.InvokeOption) ListRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListRoutesResultOutput, error) {
			args := v.(ListRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:services:listRoutes", args, ListRoutesResultOutput{}, options).(ListRoutesResultOutput), nil
		}).(ListRoutesResultOutput)
}

type ListRoutesOutputArgs struct {
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (ListRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRoutesArgs)(nil)).Elem()
}

type ListRoutesResultOutput struct{ *pulumi.OutputState }

func (ListRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRoutesResult)(nil)).Elem()
}

func (o ListRoutesResultOutput) ToListRoutesResultOutput() ListRoutesResultOutput {
	return o
}

func (o ListRoutesResultOutput) ToListRoutesResultOutputWithContext(ctx context.Context) ListRoutesResultOutput {
	return o
}

func (o ListRoutesResultOutput) Items() RouteWithCursorArrayOutput {
	return o.ApplyT(func(v ListRoutesResult) []RouteWithCursor { return v.Items }).(RouteWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListRoutesResultOutput{})
}
