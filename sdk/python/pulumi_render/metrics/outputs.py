# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetBandwidthSourcePropertiesDataItemProperties',
    'GetBandwidthSourcePropertiesDataItemPropertiesLabelsProperties',
    'GetBandwidthSourcePropertiesDataItemPropertiesValuesItemProperties',
    'ListActiveConnectionsItemProperties',
    'ListActiveConnectionsItemPropertiesLabelsItemProperties',
    'ListActiveConnectionsItemPropertiesValuesItemProperties',
    'ListReplicationLagItemProperties',
    'ListReplicationLagItemPropertiesLabelsItemProperties',
    'ListReplicationLagItemPropertiesValuesItemProperties',
]

@pulumi.output_type
class GetBandwidthSourcePropertiesDataItemProperties(dict):
    def __init__(__self__, *,
                 labels: Optional['outputs.GetBandwidthSourcePropertiesDataItemPropertiesLabelsProperties'] = None,
                 values: Optional[Sequence['outputs.GetBandwidthSourcePropertiesDataItemPropertiesValuesItemProperties']] = None):
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if values is not None:
            pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional['outputs.GetBandwidthSourcePropertiesDataItemPropertiesLabelsProperties']:
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Optional[Sequence['outputs.GetBandwidthSourcePropertiesDataItemPropertiesValuesItemProperties']]:
        return pulumi.get(self, "values")


@pulumi.output_type
class GetBandwidthSourcePropertiesDataItemPropertiesLabelsProperties(dict):
    def __init__(__self__, *,
                 resource: Optional[_builtins.str] = None,
                 traffic_source: Optional['GetBandwidthSourcePropertiesDataItemPropertiesLabelsPropertiesTrafficSource'] = None):
        if resource is not None:
            pulumi.set(__self__, "resource", resource)
        if traffic_source is not None:
            pulumi.set(__self__, "traffic_source", traffic_source)

    @_builtins.property
    @pulumi.getter
    def resource(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "resource")

    @_builtins.property
    @pulumi.getter(name="trafficSource")
    def traffic_source(self) -> Optional['GetBandwidthSourcePropertiesDataItemPropertiesLabelsPropertiesTrafficSource']:
        return pulumi.get(self, "traffic_source")


@pulumi.output_type
class GetBandwidthSourcePropertiesDataItemPropertiesValuesItemProperties(dict):
    def __init__(__self__, *,
                 timestamp: Optional[_builtins.int] = None,
                 value: Optional[_builtins.float] = None):
        if timestamp is not None:
            pulumi.set(__self__, "timestamp", timestamp)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def timestamp(self) -> Optional[_builtins.int]:
        return pulumi.get(self, "timestamp")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "value")


@pulumi.output_type
class ListActiveConnectionsItemProperties(dict):
    """
    A time series data point
    """
    def __init__(__self__, *,
                 labels: Sequence['outputs.ListActiveConnectionsItemPropertiesLabelsItemProperties'],
                 unit: _builtins.str,
                 values: Sequence['outputs.ListActiveConnectionsItemPropertiesValuesItemProperties']):
        """
        A time series data point
        :param Sequence['ListActiveConnectionsItemPropertiesLabelsItemProperties'] labels: List of labels describing the time series
        :param Sequence['ListActiveConnectionsItemPropertiesValuesItemProperties'] values: The values of the time series
        """
        pulumi.set(__self__, "labels", labels)
        pulumi.set(__self__, "unit", unit)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Sequence['outputs.ListActiveConnectionsItemPropertiesLabelsItemProperties']:
        """
        List of labels describing the time series
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def unit(self) -> _builtins.str:
        return pulumi.get(self, "unit")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence['outputs.ListActiveConnectionsItemPropertiesValuesItemProperties']:
        """
        The values of the time series
        """
        return pulumi.get(self, "values")


@pulumi.output_type
class ListActiveConnectionsItemPropertiesLabelsItemProperties(dict):
    """
    A time series datapoint label
    """
    def __init__(__self__, *,
                 field: _builtins.str,
                 value: _builtins.str):
        """
        A time series datapoint label
        """
        pulumi.set(__self__, "field", field)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def field(self) -> _builtins.str:
        return pulumi.get(self, "field")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class ListActiveConnectionsItemPropertiesValuesItemProperties(dict):
    """
    A time series datapoint value
    """
    def __init__(__self__, *,
                 timestamp: _builtins.str,
                 value: _builtins.float):
        """
        A time series datapoint value
        """
        pulumi.set(__self__, "timestamp", timestamp)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def timestamp(self) -> _builtins.str:
        return pulumi.get(self, "timestamp")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.float:
        return pulumi.get(self, "value")


@pulumi.output_type
class ListReplicationLagItemProperties(dict):
    """
    A time series data point
    """
    def __init__(__self__, *,
                 labels: Sequence['outputs.ListReplicationLagItemPropertiesLabelsItemProperties'],
                 unit: _builtins.str,
                 values: Sequence['outputs.ListReplicationLagItemPropertiesValuesItemProperties']):
        """
        A time series data point
        :param Sequence['ListReplicationLagItemPropertiesLabelsItemProperties'] labels: List of labels describing the time series
        :param Sequence['ListReplicationLagItemPropertiesValuesItemProperties'] values: The values of the time series
        """
        pulumi.set(__self__, "labels", labels)
        pulumi.set(__self__, "unit", unit)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Sequence['outputs.ListReplicationLagItemPropertiesLabelsItemProperties']:
        """
        List of labels describing the time series
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def unit(self) -> _builtins.str:
        return pulumi.get(self, "unit")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence['outputs.ListReplicationLagItemPropertiesValuesItemProperties']:
        """
        The values of the time series
        """
        return pulumi.get(self, "values")


@pulumi.output_type
class ListReplicationLagItemPropertiesLabelsItemProperties(dict):
    """
    A time series datapoint label
    """
    def __init__(__self__, *,
                 field: _builtins.str,
                 value: _builtins.str):
        """
        A time series datapoint label
        """
        pulumi.set(__self__, "field", field)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def field(self) -> _builtins.str:
        return pulumi.get(self, "field")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class ListReplicationLagItemPropertiesValuesItemProperties(dict):
    """
    A time series datapoint value
    """
    def __init__(__self__, *,
                 timestamp: _builtins.str,
                 value: _builtins.float):
        """
        A time series datapoint value
        """
        pulumi.set(__self__, "timestamp", timestamp)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def timestamp(self) -> _builtins.str:
        return pulumi.get(self, "timestamp")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.float:
        return pulumi.get(self, "value")


