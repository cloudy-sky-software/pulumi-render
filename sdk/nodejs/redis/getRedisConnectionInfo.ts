// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getRedisConnectionInfo(args: GetRedisConnectionInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisConnectionInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:redis:getRedisConnectionInfo", {
        "redisId": args.redisId,
    }, opts);
}

export interface GetRedisConnectionInfoArgs {
    redisId: string;
}

export interface GetRedisConnectionInfoResult {
    readonly items: outputs.redis.RedisConnectionInfo;
}
export function getRedisConnectionInfoOutput(args: GetRedisConnectionInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisConnectionInfoResult> {
    return pulumi.output(args).apply((a: any) => getRedisConnectionInfo(a, opts))
}

export interface GetRedisConnectionInfoOutputArgs {
    redisId: pulumi.Input<string>;
}
