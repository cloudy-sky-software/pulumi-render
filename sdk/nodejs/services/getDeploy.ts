// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getDeploy(args: GetDeployArgs, opts?: pulumi.InvokeOptions): Promise<GetDeployResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:getDeploy", {
        "deployId": args.deployId,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetDeployArgs {
    /**
     * The ID of the deploy
     */
    deployId: string;
    /**
     * The ID of the service
     */
    serviceId: string;
}

export interface GetDeployResult {
    readonly commit?: outputs.services.DeployCommitProperties;
    readonly createdAt?: string;
    readonly finishedAt?: string;
    readonly id: string;
    /**
     * Image information used when creating the deploy. Not present for Git-backed deploys
     */
    readonly image?: outputs.services.DeployImageProperties;
    readonly startedAt?: string;
    readonly status?: enums.services.DeployStatus;
    readonly trigger?: enums.services.DeployTrigger;
    readonly updatedAt?: string;
}
export function getDeployOutput(args: GetDeployOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDeployResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:services:getDeploy", {
        "deployId": args.deployId,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetDeployOutputArgs {
    /**
     * The ID of the deploy
     */
    deployId: pulumi.Input<string>;
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
