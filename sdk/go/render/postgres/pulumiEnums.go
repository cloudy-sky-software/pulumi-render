// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgres

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Availability of point-in-time recovery.
type GetPostgresRecoveryInfoPropertiesRecoveryStatus string

const (
	GetPostgresRecoveryInfoPropertiesRecoveryStatusAvailable      = GetPostgresRecoveryInfoPropertiesRecoveryStatus("AVAILABLE")
	GetPostgresRecoveryInfoPropertiesRecoveryStatusBackupNotReady = GetPostgresRecoveryInfoPropertiesRecoveryStatus("BACKUP_NOT_READY")
	GetPostgresRecoveryInfoPropertiesRecoveryStatusNotAvailable   = GetPostgresRecoveryInfoPropertiesRecoveryStatus("NOT_AVAILABLE")
)

type GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput struct{ *pulumi.OutputState }

func (GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPostgresRecoveryInfoPropertiesRecoveryStatus)(nil)).Elem()
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusOutput() GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput {
	return o
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusOutputWithContext(ctx context.Context) GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput {
	return o
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput() GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput {
	return o.ToGetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutputWithContext(context.Background())
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutputWithContext(ctx context.Context) GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPostgresRecoveryInfoPropertiesRecoveryStatus) *GetPostgresRecoveryInfoPropertiesRecoveryStatus {
		return &v
	}).(GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput)
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GetPostgresRecoveryInfoPropertiesRecoveryStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GetPostgresRecoveryInfoPropertiesRecoveryStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput struct{ *pulumi.OutputState }

func (GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPostgresRecoveryInfoPropertiesRecoveryStatus)(nil)).Elem()
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput() GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput {
	return o
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) ToGetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutputWithContext(ctx context.Context) GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput {
	return o
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) Elem() GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput {
	return o.ApplyT(func(v *GetPostgresRecoveryInfoPropertiesRecoveryStatus) GetPostgresRecoveryInfoPropertiesRecoveryStatus {
		if v != nil {
			return *v
		}
		var ret GetPostgresRecoveryInfoPropertiesRecoveryStatus
		return ret
	}).(GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput)
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GetPostgresRecoveryInfoPropertiesRecoveryStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerType string

const (
	OwnerTypeUser = OwnerType("user")
	OwnerTypeTeam = OwnerType("team")
)

type OwnerTypeOutput struct{ *pulumi.OutputState }

func (OwnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (o OwnerTypeOutput) ToOwnerTypeOutput() OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnerType) *OwnerType {
		return &v
	}).(OwnerTypePtrOutput)
}

func (o OwnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OwnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerTypePtrOutput struct{ *pulumi.OutputState }

func (OwnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerType)(nil)).Elem()
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) Elem() OwnerTypeOutput {
	return o.ApplyT(func(v *OwnerType) OwnerType {
		if v != nil {
			return *v
		}
		var ret OwnerType
		return ret
	}).(OwnerTypeOutput)
}

func (o OwnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OwnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Plan string

const (
	PlanFree              = Plan("free")
	PlanStarter           = Plan("starter")
	PlanStandard          = Plan("standard")
	PlanPro               = Plan("pro")
	PlanProPlus           = Plan("pro_plus")
	PlanCustom            = Plan("custom")
	PlanBasic256mb        = Plan("basic_256mb")
	PlanBasic1gb          = Plan("basic_1gb")
	PlanBasic4gb          = Plan("basic_4gb")
	PlanPro4gb            = Plan("pro_4gb")
	PlanPro8gb            = Plan("pro_8gb")
	PlanPro16gb           = Plan("pro_16gb")
	PlanPro32gb           = Plan("pro_32gb")
	PlanPro64gb           = Plan("pro_64gb")
	PlanPro128gb          = Plan("pro_128gb")
	PlanPro192gb          = Plan("pro_192gb")
	PlanPro256gb          = Plan("pro_256gb")
	PlanPro384gb          = Plan("pro_384gb")
	PlanPro512gb          = Plan("pro_512gb")
	PlanAccelerated16gb   = Plan("accelerated_16gb")
	PlanAccelerated32gb   = Plan("accelerated_32gb")
	PlanAccelerated64gb   = Plan("accelerated_64gb")
	PlanAccelerated128gb  = Plan("accelerated_128gb")
	PlanAccelerated256gb  = Plan("accelerated_256gb")
	PlanAccelerated384gb  = Plan("accelerated_384gb")
	PlanAccelerated512gb  = Plan("accelerated_512gb")
	PlanAccelerated768gb  = Plan("accelerated_768gb")
	PlanAccelerated1024gb = Plan("accelerated_1024gb")
)

func (Plan) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (e Plan) ToPlanOutput() PlanOutput {
	return pulumi.ToOutput(e).(PlanOutput)
}

func (e Plan) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlanOutput)
}

func (e Plan) ToPlanPtrOutput() PlanPtrOutput {
	return e.ToPlanPtrOutputWithContext(context.Background())
}

func (e Plan) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return Plan(e).ToPlanOutputWithContext(ctx).ToPlanPtrOutputWithContext(ctx)
}

func (e Plan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Plan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Plan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

func (o PlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Plan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan {
		if v != nil {
			return *v
		}
		var ret Plan
		return ret
	}).(PlanOutput)
}

func (o PlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Plan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlanInput is an input type that accepts values of the Plan enum
// A concrete instance of `PlanInput` can be one of the following:
//
//	PlanFree
//	PlanStarter
//	PlanStandard
//	PlanPro
//	PlanProPlus
//	PlanCustom
//	PlanBasic256mb
//	PlanBasic1gb
//	PlanBasic4gb
//	PlanPro4gb
//	PlanPro8gb
//	PlanPro16gb
//	PlanPro32gb
//	PlanPro64gb
//	PlanPro128gb
//	PlanPro192gb
//	PlanPro256gb
//	PlanPro384gb
//	PlanPro512gb
//	PlanAccelerated16gb
//	PlanAccelerated32gb
//	PlanAccelerated64gb
//	PlanAccelerated128gb
//	PlanAccelerated256gb
//	PlanAccelerated384gb
//	PlanAccelerated512gb
//	PlanAccelerated768gb
//	PlanAccelerated1024gb
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

var planPtrType = reflect.TypeOf((**Plan)(nil)).Elem()

type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtr string

func PlanPtr(v string) PlanPtrInput {
	return (*planPtr)(&v)
}

func (*planPtr) ElementType() reflect.Type {
	return planPtrType
}

func (in *planPtr) ToPlanPtrOutput() PlanPtrOutput {
	return pulumi.ToOutput(in).(PlanPtrOutput)
}

func (in *planPtr) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlanPtrOutput)
}

type PostgresDetailPlan string

const (
	PostgresDetailPlanFree              = PostgresDetailPlan("free")
	PostgresDetailPlanStarter           = PostgresDetailPlan("starter")
	PostgresDetailPlanStandard          = PostgresDetailPlan("standard")
	PostgresDetailPlanPro               = PostgresDetailPlan("pro")
	PostgresDetailPlanProPlus           = PostgresDetailPlan("pro_plus")
	PostgresDetailPlanCustom            = PostgresDetailPlan("custom")
	PostgresDetailPlanBasic256mb        = PostgresDetailPlan("basic_256mb")
	PostgresDetailPlanBasic1gb          = PostgresDetailPlan("basic_1gb")
	PostgresDetailPlanBasic4gb          = PostgresDetailPlan("basic_4gb")
	PostgresDetailPlanPro4gb            = PostgresDetailPlan("pro_4gb")
	PostgresDetailPlanPro8gb            = PostgresDetailPlan("pro_8gb")
	PostgresDetailPlanPro16gb           = PostgresDetailPlan("pro_16gb")
	PostgresDetailPlanPro32gb           = PostgresDetailPlan("pro_32gb")
	PostgresDetailPlanPro64gb           = PostgresDetailPlan("pro_64gb")
	PostgresDetailPlanPro128gb          = PostgresDetailPlan("pro_128gb")
	PostgresDetailPlanPro192gb          = PostgresDetailPlan("pro_192gb")
	PostgresDetailPlanPro256gb          = PostgresDetailPlan("pro_256gb")
	PostgresDetailPlanPro384gb          = PostgresDetailPlan("pro_384gb")
	PostgresDetailPlanPro512gb          = PostgresDetailPlan("pro_512gb")
	PostgresDetailPlanAccelerated16gb   = PostgresDetailPlan("accelerated_16gb")
	PostgresDetailPlanAccelerated32gb   = PostgresDetailPlan("accelerated_32gb")
	PostgresDetailPlanAccelerated64gb   = PostgresDetailPlan("accelerated_64gb")
	PostgresDetailPlanAccelerated128gb  = PostgresDetailPlan("accelerated_128gb")
	PostgresDetailPlanAccelerated256gb  = PostgresDetailPlan("accelerated_256gb")
	PostgresDetailPlanAccelerated384gb  = PostgresDetailPlan("accelerated_384gb")
	PostgresDetailPlanAccelerated512gb  = PostgresDetailPlan("accelerated_512gb")
	PostgresDetailPlanAccelerated768gb  = PostgresDetailPlan("accelerated_768gb")
	PostgresDetailPlanAccelerated1024gb = PostgresDetailPlan("accelerated_1024gb")
)

type PostgresDetailPlanOutput struct{ *pulumi.OutputState }

func (PostgresDetailPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailPlan)(nil)).Elem()
}

func (o PostgresDetailPlanOutput) ToPostgresDetailPlanOutput() PostgresDetailPlanOutput {
	return o
}

func (o PostgresDetailPlanOutput) ToPostgresDetailPlanOutputWithContext(ctx context.Context) PostgresDetailPlanOutput {
	return o
}

func (o PostgresDetailPlanOutput) ToPostgresDetailPlanPtrOutput() PostgresDetailPlanPtrOutput {
	return o.ToPostgresDetailPlanPtrOutputWithContext(context.Background())
}

func (o PostgresDetailPlanOutput) ToPostgresDetailPlanPtrOutputWithContext(ctx context.Context) PostgresDetailPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailPlan) *PostgresDetailPlan {
		return &v
	}).(PostgresDetailPlanPtrOutput)
}

func (o PostgresDetailPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailPlanPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailPlan)(nil)).Elem()
}

func (o PostgresDetailPlanPtrOutput) ToPostgresDetailPlanPtrOutput() PostgresDetailPlanPtrOutput {
	return o
}

func (o PostgresDetailPlanPtrOutput) ToPostgresDetailPlanPtrOutputWithContext(ctx context.Context) PostgresDetailPlanPtrOutput {
	return o
}

func (o PostgresDetailPlanPtrOutput) Elem() PostgresDetailPlanOutput {
	return o.ApplyT(func(v *PostgresDetailPlan) PostgresDetailPlan {
		if v != nil {
			return *v
		}
		var ret PostgresDetailPlan
		return ret
	}).(PostgresDetailPlanOutput)
}

func (o PostgresDetailPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type PostgresDetailRegion string

const (
	PostgresDetailRegionFrankfurt = PostgresDetailRegion("frankfurt")
	PostgresDetailRegionOregon    = PostgresDetailRegion("oregon")
	PostgresDetailRegionOhio      = PostgresDetailRegion("ohio")
	PostgresDetailRegionSingapore = PostgresDetailRegion("singapore")
	PostgresDetailRegionVirginia  = PostgresDetailRegion("virginia")
)

type PostgresDetailRegionOutput struct{ *pulumi.OutputState }

func (PostgresDetailRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailRegion)(nil)).Elem()
}

func (o PostgresDetailRegionOutput) ToPostgresDetailRegionOutput() PostgresDetailRegionOutput {
	return o
}

func (o PostgresDetailRegionOutput) ToPostgresDetailRegionOutputWithContext(ctx context.Context) PostgresDetailRegionOutput {
	return o
}

func (o PostgresDetailRegionOutput) ToPostgresDetailRegionPtrOutput() PostgresDetailRegionPtrOutput {
	return o.ToPostgresDetailRegionPtrOutputWithContext(context.Background())
}

func (o PostgresDetailRegionOutput) ToPostgresDetailRegionPtrOutputWithContext(ctx context.Context) PostgresDetailRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailRegion) *PostgresDetailRegion {
		return &v
	}).(PostgresDetailRegionPtrOutput)
}

func (o PostgresDetailRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailRegionPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailRegion)(nil)).Elem()
}

func (o PostgresDetailRegionPtrOutput) ToPostgresDetailRegionPtrOutput() PostgresDetailRegionPtrOutput {
	return o
}

func (o PostgresDetailRegionPtrOutput) ToPostgresDetailRegionPtrOutputWithContext(ctx context.Context) PostgresDetailRegionPtrOutput {
	return o
}

func (o PostgresDetailRegionPtrOutput) Elem() PostgresDetailRegionOutput {
	return o.ApplyT(func(v *PostgresDetailRegion) PostgresDetailRegion {
		if v != nil {
			return *v
		}
		var ret PostgresDetailRegion
		return ret
	}).(PostgresDetailRegionOutput)
}

func (o PostgresDetailRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailRole string

const (
	PostgresDetailRolePrimary = PostgresDetailRole("primary")
	PostgresDetailRoleReplica = PostgresDetailRole("replica")
)

type PostgresDetailRoleOutput struct{ *pulumi.OutputState }

func (PostgresDetailRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailRole)(nil)).Elem()
}

func (o PostgresDetailRoleOutput) ToPostgresDetailRoleOutput() PostgresDetailRoleOutput {
	return o
}

func (o PostgresDetailRoleOutput) ToPostgresDetailRoleOutputWithContext(ctx context.Context) PostgresDetailRoleOutput {
	return o
}

func (o PostgresDetailRoleOutput) ToPostgresDetailRolePtrOutput() PostgresDetailRolePtrOutput {
	return o.ToPostgresDetailRolePtrOutputWithContext(context.Background())
}

func (o PostgresDetailRoleOutput) ToPostgresDetailRolePtrOutputWithContext(ctx context.Context) PostgresDetailRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailRole) *PostgresDetailRole {
		return &v
	}).(PostgresDetailRolePtrOutput)
}

func (o PostgresDetailRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailRolePtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailRole)(nil)).Elem()
}

func (o PostgresDetailRolePtrOutput) ToPostgresDetailRolePtrOutput() PostgresDetailRolePtrOutput {
	return o
}

func (o PostgresDetailRolePtrOutput) ToPostgresDetailRolePtrOutputWithContext(ctx context.Context) PostgresDetailRolePtrOutput {
	return o
}

func (o PostgresDetailRolePtrOutput) Elem() PostgresDetailRoleOutput {
	return o.ApplyT(func(v *PostgresDetailRole) PostgresDetailRole {
		if v != nil {
			return *v
		}
		var ret PostgresDetailRole
		return ret
	}).(PostgresDetailRoleOutput)
}

func (o PostgresDetailRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailStatus string

const (
	PostgresDetailStatusCreating              = PostgresDetailStatus("creating")
	PostgresDetailStatusAvailable             = PostgresDetailStatus("available")
	PostgresDetailStatusUnavailable           = PostgresDetailStatus("unavailable")
	PostgresDetailStatusConfigRestart         = PostgresDetailStatus("config_restart")
	PostgresDetailStatusSuspended             = PostgresDetailStatus("suspended")
	PostgresDetailStatusMaintenanceScheduled  = PostgresDetailStatus("maintenance_scheduled")
	PostgresDetailStatusMaintenanceInProgress = PostgresDetailStatus("maintenance_in_progress")
	PostgresDetailStatusRecoveryFailed        = PostgresDetailStatus("recovery_failed")
	PostgresDetailStatusRecoveryInProgress    = PostgresDetailStatus("recovery_in_progress")
	PostgresDetailStatusUnknown               = PostgresDetailStatus("unknown")
	PostgresDetailStatusUpdatingInstance      = PostgresDetailStatus("updating_instance")
)

type PostgresDetailStatusOutput struct{ *pulumi.OutputState }

func (PostgresDetailStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailStatus)(nil)).Elem()
}

func (o PostgresDetailStatusOutput) ToPostgresDetailStatusOutput() PostgresDetailStatusOutput {
	return o
}

func (o PostgresDetailStatusOutput) ToPostgresDetailStatusOutputWithContext(ctx context.Context) PostgresDetailStatusOutput {
	return o
}

func (o PostgresDetailStatusOutput) ToPostgresDetailStatusPtrOutput() PostgresDetailStatusPtrOutput {
	return o.ToPostgresDetailStatusPtrOutputWithContext(context.Background())
}

func (o PostgresDetailStatusOutput) ToPostgresDetailStatusPtrOutputWithContext(ctx context.Context) PostgresDetailStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailStatus) *PostgresDetailStatus {
		return &v
	}).(PostgresDetailStatusPtrOutput)
}

func (o PostgresDetailStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailStatusPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailStatus)(nil)).Elem()
}

func (o PostgresDetailStatusPtrOutput) ToPostgresDetailStatusPtrOutput() PostgresDetailStatusPtrOutput {
	return o
}

func (o PostgresDetailStatusPtrOutput) ToPostgresDetailStatusPtrOutputWithContext(ctx context.Context) PostgresDetailStatusPtrOutput {
	return o
}

func (o PostgresDetailStatusPtrOutput) Elem() PostgresDetailStatusOutput {
	return o.ApplyT(func(v *PostgresDetailStatus) PostgresDetailStatus {
		if v != nil {
			return *v
		}
		var ret PostgresDetailStatus
		return ret
	}).(PostgresDetailStatusOutput)
}

func (o PostgresDetailStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailSuspended string

const (
	PostgresDetailSuspendedSuspended    = PostgresDetailSuspended("suspended")
	PostgresDetailSuspendedNotSuspended = PostgresDetailSuspended("not_suspended")
)

type PostgresDetailSuspendedOutput struct{ *pulumi.OutputState }

func (PostgresDetailSuspendedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailSuspended)(nil)).Elem()
}

func (o PostgresDetailSuspendedOutput) ToPostgresDetailSuspendedOutput() PostgresDetailSuspendedOutput {
	return o
}

func (o PostgresDetailSuspendedOutput) ToPostgresDetailSuspendedOutputWithContext(ctx context.Context) PostgresDetailSuspendedOutput {
	return o
}

func (o PostgresDetailSuspendedOutput) ToPostgresDetailSuspendedPtrOutput() PostgresDetailSuspendedPtrOutput {
	return o.ToPostgresDetailSuspendedPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendedOutput) ToPostgresDetailSuspendedPtrOutputWithContext(ctx context.Context) PostgresDetailSuspendedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailSuspended) *PostgresDetailSuspended {
		return &v
	}).(PostgresDetailSuspendedPtrOutput)
}

func (o PostgresDetailSuspendedOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendedOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailSuspended) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailSuspendedOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendedOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailSuspended) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailSuspendedPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailSuspendedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailSuspended)(nil)).Elem()
}

func (o PostgresDetailSuspendedPtrOutput) ToPostgresDetailSuspendedPtrOutput() PostgresDetailSuspendedPtrOutput {
	return o
}

func (o PostgresDetailSuspendedPtrOutput) ToPostgresDetailSuspendedPtrOutputWithContext(ctx context.Context) PostgresDetailSuspendedPtrOutput {
	return o
}

func (o PostgresDetailSuspendedPtrOutput) Elem() PostgresDetailSuspendedOutput {
	return o.ApplyT(func(v *PostgresDetailSuspended) PostgresDetailSuspended {
		if v != nil {
			return *v
		}
		var ret PostgresDetailSuspended
		return ret
	}).(PostgresDetailSuspendedOutput)
}

func (o PostgresDetailSuspendedPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendedPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailSuspended) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailSuspendersItem string

const (
	PostgresDetailSuspendersItemAdmin             = PostgresDetailSuspendersItem("admin")
	PostgresDetailSuspendersItemBilling           = PostgresDetailSuspendersItem("billing")
	PostgresDetailSuspendersItemUser              = PostgresDetailSuspendersItem("user")
	PostgresDetailSuspendersItemParentService     = PostgresDetailSuspendersItem("parent_service")
	PostgresDetailSuspendersItemStuckCrashlooping = PostgresDetailSuspendersItem("stuck_crashlooping")
	PostgresDetailSuspendersItemHipaaEnablement   = PostgresDetailSuspendersItem("hipaa_enablement")
	PostgresDetailSuspendersItemUnknown           = PostgresDetailSuspendersItem("unknown")
)

type PostgresDetailSuspendersItemOutput struct{ *pulumi.OutputState }

func (PostgresDetailSuspendersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailSuspendersItem)(nil)).Elem()
}

func (o PostgresDetailSuspendersItemOutput) ToPostgresDetailSuspendersItemOutput() PostgresDetailSuspendersItemOutput {
	return o
}

func (o PostgresDetailSuspendersItemOutput) ToPostgresDetailSuspendersItemOutputWithContext(ctx context.Context) PostgresDetailSuspendersItemOutput {
	return o
}

func (o PostgresDetailSuspendersItemOutput) ToPostgresDetailSuspendersItemPtrOutput() PostgresDetailSuspendersItemPtrOutput {
	return o.ToPostgresDetailSuspendersItemPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendersItemOutput) ToPostgresDetailSuspendersItemPtrOutputWithContext(ctx context.Context) PostgresDetailSuspendersItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailSuspendersItem) *PostgresDetailSuspendersItem {
		return &v
	}).(PostgresDetailSuspendersItemPtrOutput)
}

func (o PostgresDetailSuspendersItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendersItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailSuspendersItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailSuspendersItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendersItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailSuspendersItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailSuspendersItemPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailSuspendersItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailSuspendersItem)(nil)).Elem()
}

func (o PostgresDetailSuspendersItemPtrOutput) ToPostgresDetailSuspendersItemPtrOutput() PostgresDetailSuspendersItemPtrOutput {
	return o
}

func (o PostgresDetailSuspendersItemPtrOutput) ToPostgresDetailSuspendersItemPtrOutputWithContext(ctx context.Context) PostgresDetailSuspendersItemPtrOutput {
	return o
}

func (o PostgresDetailSuspendersItemPtrOutput) Elem() PostgresDetailSuspendersItemOutput {
	return o.ApplyT(func(v *PostgresDetailSuspendersItem) PostgresDetailSuspendersItem {
		if v != nil {
			return *v
		}
		var ret PostgresDetailSuspendersItem
		return ret
	}).(PostgresDetailSuspendersItemOutput)
}

func (o PostgresDetailSuspendersItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailSuspendersItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailSuspendersItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailSuspendersItemArrayOutput struct{ *pulumi.OutputState }

func (PostgresDetailSuspendersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PostgresDetailSuspendersItem)(nil)).Elem()
}

func (o PostgresDetailSuspendersItemArrayOutput) ToPostgresDetailSuspendersItemArrayOutput() PostgresDetailSuspendersItemArrayOutput {
	return o
}

func (o PostgresDetailSuspendersItemArrayOutput) ToPostgresDetailSuspendersItemArrayOutputWithContext(ctx context.Context) PostgresDetailSuspendersItemArrayOutput {
	return o
}

func (o PostgresDetailSuspendersItemArrayOutput) Index(i pulumi.IntInput) PostgresDetailSuspendersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PostgresDetailSuspendersItem {
		return vs[0].([]PostgresDetailSuspendersItem)[vs[1].(int)]
	}).(PostgresDetailSuspendersItemOutput)
}

// The PostgreSQL version
type PostgresDetailVersion string

const (
	PostgresDetailVersion_11 = PostgresDetailVersion("11")
	PostgresDetailVersion_12 = PostgresDetailVersion("12")
	PostgresDetailVersion_13 = PostgresDetailVersion("13")
	PostgresDetailVersion_14 = PostgresDetailVersion("14")
	PostgresDetailVersion_15 = PostgresDetailVersion("15")
	PostgresDetailVersion_16 = PostgresDetailVersion("16")
	PostgresDetailVersion_17 = PostgresDetailVersion("17")
)

type PostgresDetailVersionOutput struct{ *pulumi.OutputState }

func (PostgresDetailVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresDetailVersion)(nil)).Elem()
}

func (o PostgresDetailVersionOutput) ToPostgresDetailVersionOutput() PostgresDetailVersionOutput {
	return o
}

func (o PostgresDetailVersionOutput) ToPostgresDetailVersionOutputWithContext(ctx context.Context) PostgresDetailVersionOutput {
	return o
}

func (o PostgresDetailVersionOutput) ToPostgresDetailVersionPtrOutput() PostgresDetailVersionPtrOutput {
	return o.ToPostgresDetailVersionPtrOutputWithContext(context.Background())
}

func (o PostgresDetailVersionOutput) ToPostgresDetailVersionPtrOutputWithContext(ctx context.Context) PostgresDetailVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresDetailVersion) *PostgresDetailVersion {
		return &v
	}).(PostgresDetailVersionPtrOutput)
}

func (o PostgresDetailVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresDetailVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresDetailVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresDetailVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresDetailVersionPtrOutput struct{ *pulumi.OutputState }

func (PostgresDetailVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresDetailVersion)(nil)).Elem()
}

func (o PostgresDetailVersionPtrOutput) ToPostgresDetailVersionPtrOutput() PostgresDetailVersionPtrOutput {
	return o
}

func (o PostgresDetailVersionPtrOutput) ToPostgresDetailVersionPtrOutputWithContext(ctx context.Context) PostgresDetailVersionPtrOutput {
	return o
}

func (o PostgresDetailVersionPtrOutput) Elem() PostgresDetailVersionOutput {
	return o.ApplyT(func(v *PostgresDetailVersion) PostgresDetailVersion {
		if v != nil {
			return *v
		}
		var ret PostgresDetailVersion
		return ret
	}).(PostgresDetailVersionOutput)
}

func (o PostgresDetailVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresDetailVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresDetailVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresPlan string

const (
	PostgresPlanFree              = PostgresPlan("free")
	PostgresPlanStarter           = PostgresPlan("starter")
	PostgresPlanStandard          = PostgresPlan("standard")
	PostgresPlanPro               = PostgresPlan("pro")
	PostgresPlanProPlus           = PostgresPlan("pro_plus")
	PostgresPlanCustom            = PostgresPlan("custom")
	PostgresPlanBasic256mb        = PostgresPlan("basic_256mb")
	PostgresPlanBasic1gb          = PostgresPlan("basic_1gb")
	PostgresPlanBasic4gb          = PostgresPlan("basic_4gb")
	PostgresPlanPro4gb            = PostgresPlan("pro_4gb")
	PostgresPlanPro8gb            = PostgresPlan("pro_8gb")
	PostgresPlanPro16gb           = PostgresPlan("pro_16gb")
	PostgresPlanPro32gb           = PostgresPlan("pro_32gb")
	PostgresPlanPro64gb           = PostgresPlan("pro_64gb")
	PostgresPlanPro128gb          = PostgresPlan("pro_128gb")
	PostgresPlanPro192gb          = PostgresPlan("pro_192gb")
	PostgresPlanPro256gb          = PostgresPlan("pro_256gb")
	PostgresPlanPro384gb          = PostgresPlan("pro_384gb")
	PostgresPlanPro512gb          = PostgresPlan("pro_512gb")
	PostgresPlanAccelerated16gb   = PostgresPlan("accelerated_16gb")
	PostgresPlanAccelerated32gb   = PostgresPlan("accelerated_32gb")
	PostgresPlanAccelerated64gb   = PostgresPlan("accelerated_64gb")
	PostgresPlanAccelerated128gb  = PostgresPlan("accelerated_128gb")
	PostgresPlanAccelerated256gb  = PostgresPlan("accelerated_256gb")
	PostgresPlanAccelerated384gb  = PostgresPlan("accelerated_384gb")
	PostgresPlanAccelerated512gb  = PostgresPlan("accelerated_512gb")
	PostgresPlanAccelerated768gb  = PostgresPlan("accelerated_768gb")
	PostgresPlanAccelerated1024gb = PostgresPlan("accelerated_1024gb")
)

type PostgresPlanOutput struct{ *pulumi.OutputState }

func (PostgresPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresPlan)(nil)).Elem()
}

func (o PostgresPlanOutput) ToPostgresPlanOutput() PostgresPlanOutput {
	return o
}

func (o PostgresPlanOutput) ToPostgresPlanOutputWithContext(ctx context.Context) PostgresPlanOutput {
	return o
}

func (o PostgresPlanOutput) ToPostgresPlanPtrOutput() PostgresPlanPtrOutput {
	return o.ToPostgresPlanPtrOutputWithContext(context.Background())
}

func (o PostgresPlanOutput) ToPostgresPlanPtrOutputWithContext(ctx context.Context) PostgresPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresPlan) *PostgresPlan {
		return &v
	}).(PostgresPlanPtrOutput)
}

func (o PostgresPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresPlanPtrOutput struct{ *pulumi.OutputState }

func (PostgresPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresPlan)(nil)).Elem()
}

func (o PostgresPlanPtrOutput) ToPostgresPlanPtrOutput() PostgresPlanPtrOutput {
	return o
}

func (o PostgresPlanPtrOutput) ToPostgresPlanPtrOutputWithContext(ctx context.Context) PostgresPlanPtrOutput {
	return o
}

func (o PostgresPlanPtrOutput) Elem() PostgresPlanOutput {
	return o.ApplyT(func(v *PostgresPlan) PostgresPlan {
		if v != nil {
			return *v
		}
		var ret PostgresPlan
		return ret
	}).(PostgresPlanOutput)
}

func (o PostgresPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type PostgresRegion string

const (
	PostgresRegionFrankfurt = PostgresRegion("frankfurt")
	PostgresRegionOregon    = PostgresRegion("oregon")
	PostgresRegionOhio      = PostgresRegion("ohio")
	PostgresRegionSingapore = PostgresRegion("singapore")
	PostgresRegionVirginia  = PostgresRegion("virginia")
)

type PostgresRegionOutput struct{ *pulumi.OutputState }

func (PostgresRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresRegion)(nil)).Elem()
}

func (o PostgresRegionOutput) ToPostgresRegionOutput() PostgresRegionOutput {
	return o
}

func (o PostgresRegionOutput) ToPostgresRegionOutputWithContext(ctx context.Context) PostgresRegionOutput {
	return o
}

func (o PostgresRegionOutput) ToPostgresRegionPtrOutput() PostgresRegionPtrOutput {
	return o.ToPostgresRegionPtrOutputWithContext(context.Background())
}

func (o PostgresRegionOutput) ToPostgresRegionPtrOutputWithContext(ctx context.Context) PostgresRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresRegion) *PostgresRegion {
		return &v
	}).(PostgresRegionPtrOutput)
}

func (o PostgresRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresRegionPtrOutput struct{ *pulumi.OutputState }

func (PostgresRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresRegion)(nil)).Elem()
}

func (o PostgresRegionPtrOutput) ToPostgresRegionPtrOutput() PostgresRegionPtrOutput {
	return o
}

func (o PostgresRegionPtrOutput) ToPostgresRegionPtrOutputWithContext(ctx context.Context) PostgresRegionPtrOutput {
	return o
}

func (o PostgresRegionPtrOutput) Elem() PostgresRegionOutput {
	return o.ApplyT(func(v *PostgresRegion) PostgresRegion {
		if v != nil {
			return *v
		}
		var ret PostgresRegion
		return ret
	}).(PostgresRegionOutput)
}

func (o PostgresRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresRole string

const (
	PostgresRolePrimary = PostgresRole("primary")
	PostgresRoleReplica = PostgresRole("replica")
)

type PostgresRoleOutput struct{ *pulumi.OutputState }

func (PostgresRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresRole)(nil)).Elem()
}

func (o PostgresRoleOutput) ToPostgresRoleOutput() PostgresRoleOutput {
	return o
}

func (o PostgresRoleOutput) ToPostgresRoleOutputWithContext(ctx context.Context) PostgresRoleOutput {
	return o
}

func (o PostgresRoleOutput) ToPostgresRolePtrOutput() PostgresRolePtrOutput {
	return o.ToPostgresRolePtrOutputWithContext(context.Background())
}

func (o PostgresRoleOutput) ToPostgresRolePtrOutputWithContext(ctx context.Context) PostgresRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresRole) *PostgresRole {
		return &v
	}).(PostgresRolePtrOutput)
}

func (o PostgresRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresRolePtrOutput struct{ *pulumi.OutputState }

func (PostgresRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresRole)(nil)).Elem()
}

func (o PostgresRolePtrOutput) ToPostgresRolePtrOutput() PostgresRolePtrOutput {
	return o
}

func (o PostgresRolePtrOutput) ToPostgresRolePtrOutputWithContext(ctx context.Context) PostgresRolePtrOutput {
	return o
}

func (o PostgresRolePtrOutput) Elem() PostgresRoleOutput {
	return o.ApplyT(func(v *PostgresRole) PostgresRole {
		if v != nil {
			return *v
		}
		var ret PostgresRole
		return ret
	}).(PostgresRoleOutput)
}

func (o PostgresRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresStatus string

const (
	PostgresStatusCreating              = PostgresStatus("creating")
	PostgresStatusAvailable             = PostgresStatus("available")
	PostgresStatusUnavailable           = PostgresStatus("unavailable")
	PostgresStatusConfigRestart         = PostgresStatus("config_restart")
	PostgresStatusSuspended             = PostgresStatus("suspended")
	PostgresStatusMaintenanceScheduled  = PostgresStatus("maintenance_scheduled")
	PostgresStatusMaintenanceInProgress = PostgresStatus("maintenance_in_progress")
	PostgresStatusRecoveryFailed        = PostgresStatus("recovery_failed")
	PostgresStatusRecoveryInProgress    = PostgresStatus("recovery_in_progress")
	PostgresStatusUnknown               = PostgresStatus("unknown")
	PostgresStatusUpdatingInstance      = PostgresStatus("updating_instance")
)

type PostgresStatusOutput struct{ *pulumi.OutputState }

func (PostgresStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresStatus)(nil)).Elem()
}

func (o PostgresStatusOutput) ToPostgresStatusOutput() PostgresStatusOutput {
	return o
}

func (o PostgresStatusOutput) ToPostgresStatusOutputWithContext(ctx context.Context) PostgresStatusOutput {
	return o
}

func (o PostgresStatusOutput) ToPostgresStatusPtrOutput() PostgresStatusPtrOutput {
	return o.ToPostgresStatusPtrOutputWithContext(context.Background())
}

func (o PostgresStatusOutput) ToPostgresStatusPtrOutputWithContext(ctx context.Context) PostgresStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresStatus) *PostgresStatus {
		return &v
	}).(PostgresStatusPtrOutput)
}

func (o PostgresStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresStatusPtrOutput struct{ *pulumi.OutputState }

func (PostgresStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresStatus)(nil)).Elem()
}

func (o PostgresStatusPtrOutput) ToPostgresStatusPtrOutput() PostgresStatusPtrOutput {
	return o
}

func (o PostgresStatusPtrOutput) ToPostgresStatusPtrOutputWithContext(ctx context.Context) PostgresStatusPtrOutput {
	return o
}

func (o PostgresStatusPtrOutput) Elem() PostgresStatusOutput {
	return o.ApplyT(func(v *PostgresStatus) PostgresStatus {
		if v != nil {
			return *v
		}
		var ret PostgresStatus
		return ret
	}).(PostgresStatusOutput)
}

func (o PostgresStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresSuspended string

const (
	PostgresSuspendedSuspended    = PostgresSuspended("suspended")
	PostgresSuspendedNotSuspended = PostgresSuspended("not_suspended")
)

type PostgresSuspendedOutput struct{ *pulumi.OutputState }

func (PostgresSuspendedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresSuspended)(nil)).Elem()
}

func (o PostgresSuspendedOutput) ToPostgresSuspendedOutput() PostgresSuspendedOutput {
	return o
}

func (o PostgresSuspendedOutput) ToPostgresSuspendedOutputWithContext(ctx context.Context) PostgresSuspendedOutput {
	return o
}

func (o PostgresSuspendedOutput) ToPostgresSuspendedPtrOutput() PostgresSuspendedPtrOutput {
	return o.ToPostgresSuspendedPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendedOutput) ToPostgresSuspendedPtrOutputWithContext(ctx context.Context) PostgresSuspendedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresSuspended) *PostgresSuspended {
		return &v
	}).(PostgresSuspendedPtrOutput)
}

func (o PostgresSuspendedOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresSuspendedOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresSuspended) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresSuspendedOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendedOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresSuspended) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresSuspendedPtrOutput struct{ *pulumi.OutputState }

func (PostgresSuspendedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresSuspended)(nil)).Elem()
}

func (o PostgresSuspendedPtrOutput) ToPostgresSuspendedPtrOutput() PostgresSuspendedPtrOutput {
	return o
}

func (o PostgresSuspendedPtrOutput) ToPostgresSuspendedPtrOutputWithContext(ctx context.Context) PostgresSuspendedPtrOutput {
	return o
}

func (o PostgresSuspendedPtrOutput) Elem() PostgresSuspendedOutput {
	return o.ApplyT(func(v *PostgresSuspended) PostgresSuspended {
		if v != nil {
			return *v
		}
		var ret PostgresSuspended
		return ret
	}).(PostgresSuspendedOutput)
}

func (o PostgresSuspendedPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendedPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresSuspended) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresSuspendersItem string

const (
	PostgresSuspendersItemAdmin             = PostgresSuspendersItem("admin")
	PostgresSuspendersItemBilling           = PostgresSuspendersItem("billing")
	PostgresSuspendersItemUser              = PostgresSuspendersItem("user")
	PostgresSuspendersItemParentService     = PostgresSuspendersItem("parent_service")
	PostgresSuspendersItemStuckCrashlooping = PostgresSuspendersItem("stuck_crashlooping")
	PostgresSuspendersItemHipaaEnablement   = PostgresSuspendersItem("hipaa_enablement")
	PostgresSuspendersItemUnknown           = PostgresSuspendersItem("unknown")
)

type PostgresSuspendersItemOutput struct{ *pulumi.OutputState }

func (PostgresSuspendersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresSuspendersItem)(nil)).Elem()
}

func (o PostgresSuspendersItemOutput) ToPostgresSuspendersItemOutput() PostgresSuspendersItemOutput {
	return o
}

func (o PostgresSuspendersItemOutput) ToPostgresSuspendersItemOutputWithContext(ctx context.Context) PostgresSuspendersItemOutput {
	return o
}

func (o PostgresSuspendersItemOutput) ToPostgresSuspendersItemPtrOutput() PostgresSuspendersItemPtrOutput {
	return o.ToPostgresSuspendersItemPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendersItemOutput) ToPostgresSuspendersItemPtrOutputWithContext(ctx context.Context) PostgresSuspendersItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresSuspendersItem) *PostgresSuspendersItem {
		return &v
	}).(PostgresSuspendersItemPtrOutput)
}

func (o PostgresSuspendersItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresSuspendersItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresSuspendersItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresSuspendersItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendersItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresSuspendersItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresSuspendersItemPtrOutput struct{ *pulumi.OutputState }

func (PostgresSuspendersItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresSuspendersItem)(nil)).Elem()
}

func (o PostgresSuspendersItemPtrOutput) ToPostgresSuspendersItemPtrOutput() PostgresSuspendersItemPtrOutput {
	return o
}

func (o PostgresSuspendersItemPtrOutput) ToPostgresSuspendersItemPtrOutputWithContext(ctx context.Context) PostgresSuspendersItemPtrOutput {
	return o
}

func (o PostgresSuspendersItemPtrOutput) Elem() PostgresSuspendersItemOutput {
	return o.ApplyT(func(v *PostgresSuspendersItem) PostgresSuspendersItem {
		if v != nil {
			return *v
		}
		var ret PostgresSuspendersItem
		return ret
	}).(PostgresSuspendersItemOutput)
}

func (o PostgresSuspendersItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresSuspendersItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresSuspendersItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresSuspendersItemArrayOutput struct{ *pulumi.OutputState }

func (PostgresSuspendersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PostgresSuspendersItem)(nil)).Elem()
}

func (o PostgresSuspendersItemArrayOutput) ToPostgresSuspendersItemArrayOutput() PostgresSuspendersItemArrayOutput {
	return o
}

func (o PostgresSuspendersItemArrayOutput) ToPostgresSuspendersItemArrayOutputWithContext(ctx context.Context) PostgresSuspendersItemArrayOutput {
	return o
}

func (o PostgresSuspendersItemArrayOutput) Index(i pulumi.IntInput) PostgresSuspendersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PostgresSuspendersItem {
		return vs[0].([]PostgresSuspendersItem)[vs[1].(int)]
	}).(PostgresSuspendersItemOutput)
}

// The PostgreSQL version
type PostgresVersion string

const (
	PostgresVersion_11 = PostgresVersion("11")
	PostgresVersion_12 = PostgresVersion("12")
	PostgresVersion_13 = PostgresVersion("13")
	PostgresVersion_14 = PostgresVersion("14")
	PostgresVersion_15 = PostgresVersion("15")
	PostgresVersion_16 = PostgresVersion("16")
	PostgresVersion_17 = PostgresVersion("17")
)

type PostgresVersionOutput struct{ *pulumi.OutputState }

func (PostgresVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresVersion)(nil)).Elem()
}

func (o PostgresVersionOutput) ToPostgresVersionOutput() PostgresVersionOutput {
	return o
}

func (o PostgresVersionOutput) ToPostgresVersionOutputWithContext(ctx context.Context) PostgresVersionOutput {
	return o
}

func (o PostgresVersionOutput) ToPostgresVersionPtrOutput() PostgresVersionPtrOutput {
	return o.ToPostgresVersionPtrOutputWithContext(context.Background())
}

func (o PostgresVersionOutput) ToPostgresVersionPtrOutputWithContext(ctx context.Context) PostgresVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresVersion) *PostgresVersion {
		return &v
	}).(PostgresVersionPtrOutput)
}

func (o PostgresVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresVersionPtrOutput struct{ *pulumi.OutputState }

func (PostgresVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresVersion)(nil)).Elem()
}

func (o PostgresVersionPtrOutput) ToPostgresVersionPtrOutput() PostgresVersionPtrOutput {
	return o
}

func (o PostgresVersionPtrOutput) ToPostgresVersionPtrOutputWithContext(ctx context.Context) PostgresVersionPtrOutput {
	return o
}

func (o PostgresVersionPtrOutput) Elem() PostgresVersionOutput {
	return o.ApplyT(func(v *PostgresVersion) PostgresVersion {
		if v != nil {
			return *v
		}
		var ret PostgresVersion
		return ret
	}).(PostgresVersionOutput)
}

func (o PostgresVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecoverPostgresSuspended string

const (
	RecoverPostgresSuspendedSuspended    = RecoverPostgresSuspended("suspended")
	RecoverPostgresSuspendedNotSuspended = RecoverPostgresSuspended("not_suspended")
)

type RecoverPostgresSuspendedOutput struct{ *pulumi.OutputState }

func (RecoverPostgresSuspendedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoverPostgresSuspended)(nil)).Elem()
}

func (o RecoverPostgresSuspendedOutput) ToRecoverPostgresSuspendedOutput() RecoverPostgresSuspendedOutput {
	return o
}

func (o RecoverPostgresSuspendedOutput) ToRecoverPostgresSuspendedOutputWithContext(ctx context.Context) RecoverPostgresSuspendedOutput {
	return o
}

func (o RecoverPostgresSuspendedOutput) ToRecoverPostgresSuspendedPtrOutput() RecoverPostgresSuspendedPtrOutput {
	return o.ToRecoverPostgresSuspendedPtrOutputWithContext(context.Background())
}

func (o RecoverPostgresSuspendedOutput) ToRecoverPostgresSuspendedPtrOutputWithContext(ctx context.Context) RecoverPostgresSuspendedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoverPostgresSuspended) *RecoverPostgresSuspended {
		return &v
	}).(RecoverPostgresSuspendedPtrOutput)
}

func (o RecoverPostgresSuspendedOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecoverPostgresSuspendedOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecoverPostgresSuspended) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecoverPostgresSuspendedOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecoverPostgresSuspendedOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecoverPostgresSuspended) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecoverPostgresSuspendedPtrOutput struct{ *pulumi.OutputState }

func (RecoverPostgresSuspendedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoverPostgresSuspended)(nil)).Elem()
}

func (o RecoverPostgresSuspendedPtrOutput) ToRecoverPostgresSuspendedPtrOutput() RecoverPostgresSuspendedPtrOutput {
	return o
}

func (o RecoverPostgresSuspendedPtrOutput) ToRecoverPostgresSuspendedPtrOutputWithContext(ctx context.Context) RecoverPostgresSuspendedPtrOutput {
	return o
}

func (o RecoverPostgresSuspendedPtrOutput) Elem() RecoverPostgresSuspendedOutput {
	return o.ApplyT(func(v *RecoverPostgresSuspended) RecoverPostgresSuspended {
		if v != nil {
			return *v
		}
		var ret RecoverPostgresSuspended
		return ret
	}).(RecoverPostgresSuspendedOutput)
}

func (o RecoverPostgresSuspendedPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecoverPostgresSuspendedPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecoverPostgresSuspended) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailpropertiesmaintenanceState string

const (
	RedisDetailpropertiesmaintenanceStateScheduled       = RedisDetailpropertiesmaintenanceState("scheduled")
	RedisDetailpropertiesmaintenanceStateInProgress      = RedisDetailpropertiesmaintenanceState("in_progress")
	RedisDetailpropertiesmaintenanceStateUserFixRequired = RedisDetailpropertiesmaintenanceState("user_fix_required")
	RedisDetailpropertiesmaintenanceStateCancelled       = RedisDetailpropertiesmaintenanceState("cancelled")
	RedisDetailpropertiesmaintenanceStateSucceeded       = RedisDetailpropertiesmaintenanceState("succeeded")
	RedisDetailpropertiesmaintenanceStateFailed          = RedisDetailpropertiesmaintenanceState("failed")
)

type RedisDetailpropertiesmaintenanceStateOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenanceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailpropertiesmaintenanceState)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStateOutput() RedisDetailpropertiesmaintenanceStateOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStateOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStateOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutput() RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o.ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisDetailpropertiesmaintenanceState) *RedisDetailpropertiesmaintenanceState {
		return &v
	}).(RedisDetailpropertiesmaintenanceStatePtrOutput)
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailpropertiesmaintenanceState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisDetailpropertiesmaintenanceState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisDetailpropertiesmaintenanceStatePtrOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenanceStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailpropertiesmaintenanceState)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutput() RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToRedisDetailpropertiesmaintenanceStatePtrOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) Elem() RedisDetailpropertiesmaintenanceStateOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenanceState) RedisDetailpropertiesmaintenanceState {
		if v != nil {
			return *v
		}
		var ret RedisDetailpropertiesmaintenanceState
		return ret
	}).(RedisDetailpropertiesmaintenanceStateOutput)
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisDetailpropertiesmaintenanceStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisDetailpropertiesmaintenanceState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defaults to "oregon"
type Region string

const (
	RegionFrankfurt = Region("frankfurt")
	RegionOregon    = Region("oregon")
	RegionOhio      = Region("ohio")
	RegionSingapore = Region("singapore")
	RegionVirginia  = Region("virginia")
)

type RegionOutput struct{ *pulumi.OutputState }

func (RegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Region)(nil)).Elem()
}

func (o RegionOutput) ToRegionOutput() RegionOutput {
	return o
}

func (o RegionOutput) ToRegionOutputWithContext(ctx context.Context) RegionOutput {
	return o
}

func (o RegionOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o.ToRegionPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Region) *Region {
		return &v
	}).(RegionPtrOutput)
}

func (o RegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Region) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionPtrOutput struct{ *pulumi.OutputState }

func (RegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Region)(nil)).Elem()
}

func (o RegionPtrOutput) ToRegionPtrOutput() RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) ToRegionPtrOutputWithContext(ctx context.Context) RegionPtrOutput {
	return o
}

func (o RegionPtrOutput) Elem() RegionOutput {
	return o.ApplyT(func(v *Region) Region {
		if v != nil {
			return *v
		}
		var ret Region
		return ret
	}).(RegionOutput)
}

func (o RegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Region) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Role string

const (
	RolePrimary = Role("primary")
	RoleReplica = Role("replica")
)

type RoleOutput struct{ *pulumi.OutputState }

func (RoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Role)(nil)).Elem()
}

func (o RoleOutput) ToRoleOutput() RoleOutput {
	return o
}

func (o RoleOutput) ToRoleOutputWithContext(ctx context.Context) RoleOutput {
	return o
}

func (o RoleOutput) ToRolePtrOutput() RolePtrOutput {
	return o.ToRolePtrOutputWithContext(context.Background())
}

func (o RoleOutput) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Role) *Role {
		return &v
	}).(RolePtrOutput)
}

func (o RoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Role) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Role) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RolePtrOutput struct{ *pulumi.OutputState }

func (RolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Role)(nil)).Elem()
}

func (o RolePtrOutput) ToRolePtrOutput() RolePtrOutput {
	return o
}

func (o RolePtrOutput) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return o
}

func (o RolePtrOutput) Elem() RoleOutput {
	return o.ApplyT(func(v *Role) Role {
		if v != nil {
			return *v
		}
		var ret Role
		return ret
	}).(RoleOutput)
}

func (o RolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Role) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Status string

const (
	StatusCreating              = Status("creating")
	StatusAvailable             = Status("available")
	StatusUnavailable           = Status("unavailable")
	StatusConfigRestart         = Status("config_restart")
	StatusSuspended             = Status("suspended")
	StatusMaintenanceScheduled  = Status("maintenance_scheduled")
	StatusMaintenanceInProgress = Status("maintenance_in_progress")
	StatusRecoveryFailed        = Status("recovery_failed")
	StatusRecoveryInProgress    = Status("recovery_in_progress")
	StatusUnknown               = Status("unknown")
	StatusUpdatingInstance      = Status("updating_instance")
)

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Suspended string

const (
	Suspended_Suspended_  = Suspended("suspended")
	SuspendedNotSuspended = Suspended("not_suspended")
)

type SuspendedOutput struct{ *pulumi.OutputState }

func (SuspendedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Suspended)(nil)).Elem()
}

func (o SuspendedOutput) ToSuspendedOutput() SuspendedOutput {
	return o
}

func (o SuspendedOutput) ToSuspendedOutputWithContext(ctx context.Context) SuspendedOutput {
	return o
}

func (o SuspendedOutput) ToSuspendedPtrOutput() SuspendedPtrOutput {
	return o.ToSuspendedPtrOutputWithContext(context.Background())
}

func (o SuspendedOutput) ToSuspendedPtrOutputWithContext(ctx context.Context) SuspendedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Suspended) *Suspended {
		return &v
	}).(SuspendedPtrOutput)
}

func (o SuspendedOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SuspendedOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Suspended) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SuspendedOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SuspendedOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Suspended) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SuspendedPtrOutput struct{ *pulumi.OutputState }

func (SuspendedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Suspended)(nil)).Elem()
}

func (o SuspendedPtrOutput) ToSuspendedPtrOutput() SuspendedPtrOutput {
	return o
}

func (o SuspendedPtrOutput) ToSuspendedPtrOutputWithContext(ctx context.Context) SuspendedPtrOutput {
	return o
}

func (o SuspendedPtrOutput) Elem() SuspendedOutput {
	return o.ApplyT(func(v *Suspended) Suspended {
		if v != nil {
			return *v
		}
		var ret Suspended
		return ret
	}).(SuspendedOutput)
}

func (o SuspendedPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SuspendedPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Suspended) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SuspendersItem string

const (
	SuspendersItemAdmin             = SuspendersItem("admin")
	SuspendersItemBilling           = SuspendersItem("billing")
	SuspendersItemUser              = SuspendersItem("user")
	SuspendersItemParentService     = SuspendersItem("parent_service")
	SuspendersItemStuckCrashlooping = SuspendersItem("stuck_crashlooping")
	SuspendersItemHipaaEnablement   = SuspendersItem("hipaa_enablement")
	SuspendersItemUnknown           = SuspendersItem("unknown")
)

type SuspendersItemOutput struct{ *pulumi.OutputState }

func (SuspendersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuspendersItem)(nil)).Elem()
}

func (o SuspendersItemOutput) ToSuspendersItemOutput() SuspendersItemOutput {
	return o
}

func (o SuspendersItemOutput) ToSuspendersItemOutputWithContext(ctx context.Context) SuspendersItemOutput {
	return o
}

func (o SuspendersItemOutput) ToSuspendersItemPtrOutput() SuspendersItemPtrOutput {
	return o.ToSuspendersItemPtrOutputWithContext(context.Background())
}

func (o SuspendersItemOutput) ToSuspendersItemPtrOutputWithContext(ctx context.Context) SuspendersItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SuspendersItem) *SuspendersItem {
		return &v
	}).(SuspendersItemPtrOutput)
}

func (o SuspendersItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SuspendersItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SuspendersItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SuspendersItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SuspendersItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SuspendersItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SuspendersItemPtrOutput struct{ *pulumi.OutputState }

func (SuspendersItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SuspendersItem)(nil)).Elem()
}

func (o SuspendersItemPtrOutput) ToSuspendersItemPtrOutput() SuspendersItemPtrOutput {
	return o
}

func (o SuspendersItemPtrOutput) ToSuspendersItemPtrOutputWithContext(ctx context.Context) SuspendersItemPtrOutput {
	return o
}

func (o SuspendersItemPtrOutput) Elem() SuspendersItemOutput {
	return o.ApplyT(func(v *SuspendersItem) SuspendersItem {
		if v != nil {
			return *v
		}
		var ret SuspendersItem
		return ret
	}).(SuspendersItemOutput)
}

func (o SuspendersItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SuspendersItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SuspendersItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SuspendersItemArrayOutput struct{ *pulumi.OutputState }

func (SuspendersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuspendersItem)(nil)).Elem()
}

func (o SuspendersItemArrayOutput) ToSuspendersItemArrayOutput() SuspendersItemArrayOutput {
	return o
}

func (o SuspendersItemArrayOutput) ToSuspendersItemArrayOutputWithContext(ctx context.Context) SuspendersItemArrayOutput {
	return o
}

func (o SuspendersItemArrayOutput) Index(i pulumi.IntInput) SuspendersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SuspendersItem {
		return vs[0].([]SuspendersItem)[vs[1].(int)]
	}).(SuspendersItemOutput)
}

// The PostgreSQL version
type Version string

const (
	Version_11 = Version("11")
	Version_12 = Version("12")
	Version_13 = Version("13")
	Version_14 = Version("14")
	Version_15 = Version("15")
	Version_16 = Version("16")
	Version_17 = Version("17")
)

func (Version) ElementType() reflect.Type {
	return reflect.TypeOf((*Version)(nil)).Elem()
}

func (e Version) ToVersionOutput() VersionOutput {
	return pulumi.ToOutput(e).(VersionOutput)
}

func (e Version) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VersionOutput)
}

func (e Version) ToVersionPtrOutput() VersionPtrOutput {
	return e.ToVersionPtrOutputWithContext(context.Background())
}

func (e Version) ToVersionPtrOutputWithContext(ctx context.Context) VersionPtrOutput {
	return Version(e).ToVersionOutputWithContext(ctx).ToVersionPtrOutputWithContext(ctx)
}

func (e Version) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Version) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Version) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Version) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VersionOutput struct{ *pulumi.OutputState }

func (VersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Version)(nil)).Elem()
}

func (o VersionOutput) ToVersionOutput() VersionOutput {
	return o
}

func (o VersionOutput) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return o
}

func (o VersionOutput) ToVersionPtrOutput() VersionPtrOutput {
	return o.ToVersionPtrOutputWithContext(context.Background())
}

func (o VersionOutput) ToVersionPtrOutputWithContext(ctx context.Context) VersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Version) *Version {
		return &v
	}).(VersionPtrOutput)
}

func (o VersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Version) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Version) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VersionPtrOutput struct{ *pulumi.OutputState }

func (VersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Version)(nil)).Elem()
}

func (o VersionPtrOutput) ToVersionPtrOutput() VersionPtrOutput {
	return o
}

func (o VersionPtrOutput) ToVersionPtrOutputWithContext(ctx context.Context) VersionPtrOutput {
	return o
}

func (o VersionPtrOutput) Elem() VersionOutput {
	return o.ApplyT(func(v *Version) Version {
		if v != nil {
			return *v
		}
		var ret Version
		return ret
	}).(VersionOutput)
}

func (o VersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Version) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VersionInput is an input type that accepts values of the Version enum
// A concrete instance of `VersionInput` can be one of the following:
//
//	Version_11
//	Version_12
//	Version_13
//	Version_14
//	Version_15
//	Version_16
//	Version_17
type VersionInput interface {
	pulumi.Input

	ToVersionOutput() VersionOutput
	ToVersionOutputWithContext(context.Context) VersionOutput
}

var versionPtrType = reflect.TypeOf((**Version)(nil)).Elem()

type VersionPtrInput interface {
	pulumi.Input

	ToVersionPtrOutput() VersionPtrOutput
	ToVersionPtrOutputWithContext(context.Context) VersionPtrOutput
}

type versionPtr string

func VersionPtr(v string) VersionPtrInput {
	return (*versionPtr)(&v)
}

func (*versionPtr) ElementType() reflect.Type {
	return versionPtrType
}

func (in *versionPtr) ToVersionPtrOutput() VersionPtrOutput {
	return pulumi.ToOutput(in).(VersionPtrOutput)
}

func (in *versionPtr) ToVersionPtrOutputWithContext(ctx context.Context) VersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VersionPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlanInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlanPtrInput)(nil)).Elem(), Plan("free"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionInput)(nil)).Elem(), Version("11"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionPtrInput)(nil)).Elem(), Version("11"))
	pulumi.RegisterOutputType(GetPostgresRecoveryInfoPropertiesRecoveryStatusOutput{})
	pulumi.RegisterOutputType(GetPostgresRecoveryInfoPropertiesRecoveryStatusPtrOutput{})
	pulumi.RegisterOutputType(OwnerTypeOutput{})
	pulumi.RegisterOutputType(OwnerTypePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailPlanOutput{})
	pulumi.RegisterOutputType(PostgresDetailPlanPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailRegionOutput{})
	pulumi.RegisterOutputType(PostgresDetailRegionPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailRoleOutput{})
	pulumi.RegisterOutputType(PostgresDetailRolePtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailStatusOutput{})
	pulumi.RegisterOutputType(PostgresDetailStatusPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailSuspendedOutput{})
	pulumi.RegisterOutputType(PostgresDetailSuspendedPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailSuspendersItemOutput{})
	pulumi.RegisterOutputType(PostgresDetailSuspendersItemPtrOutput{})
	pulumi.RegisterOutputType(PostgresDetailSuspendersItemArrayOutput{})
	pulumi.RegisterOutputType(PostgresDetailVersionOutput{})
	pulumi.RegisterOutputType(PostgresDetailVersionPtrOutput{})
	pulumi.RegisterOutputType(PostgresPlanOutput{})
	pulumi.RegisterOutputType(PostgresPlanPtrOutput{})
	pulumi.RegisterOutputType(PostgresRegionOutput{})
	pulumi.RegisterOutputType(PostgresRegionPtrOutput{})
	pulumi.RegisterOutputType(PostgresRoleOutput{})
	pulumi.RegisterOutputType(PostgresRolePtrOutput{})
	pulumi.RegisterOutputType(PostgresStatusOutput{})
	pulumi.RegisterOutputType(PostgresStatusPtrOutput{})
	pulumi.RegisterOutputType(PostgresSuspendedOutput{})
	pulumi.RegisterOutputType(PostgresSuspendedPtrOutput{})
	pulumi.RegisterOutputType(PostgresSuspendersItemOutput{})
	pulumi.RegisterOutputType(PostgresSuspendersItemPtrOutput{})
	pulumi.RegisterOutputType(PostgresSuspendersItemArrayOutput{})
	pulumi.RegisterOutputType(PostgresVersionOutput{})
	pulumi.RegisterOutputType(PostgresVersionPtrOutput{})
	pulumi.RegisterOutputType(RecoverPostgresSuspendedOutput{})
	pulumi.RegisterOutputType(RecoverPostgresSuspendedPtrOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenanceStateOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenanceStatePtrOutput{})
	pulumi.RegisterOutputType(RegionOutput{})
	pulumi.RegisterOutputType(RegionPtrOutput{})
	pulumi.RegisterOutputType(RoleOutput{})
	pulumi.RegisterOutputType(RolePtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(SuspendedOutput{})
	pulumi.RegisterOutputType(SuspendedPtrOutput{})
	pulumi.RegisterOutputType(SuspendersItemOutput{})
	pulumi.RegisterOutputType(SuspendersItemPtrOutput{})
	pulumi.RegisterOutputType(SuspendersItemArrayOutput{})
	pulumi.RegisterOutputType(VersionOutput{})
	pulumi.RegisterOutputType(VersionPtrOutput{})
}
