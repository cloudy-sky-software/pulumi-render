// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class ListServices
    {
        public static Task<ListServicesResult> InvokeAsync(ListServicesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ListServicesResult>("render:services:listServices", args ?? new ListServicesArgs(), options.WithDefaults());
    }


    public sealed class ListServicesArgs : Pulumi.InvokeArgs
    {
        public ListServicesArgs()
        {
        }
    }


    [OutputType]
    public sealed class ListServicesResult
    {
        public readonly ImmutableArray<Outputs.ListServiceResponse> Value;

        [OutputConstructor]
        private ListServicesResult(ImmutableArray<Outputs.ListServiceResponse> value)
        {
            Value = value;
        }
    }
}
