// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package envgroups

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEnvGroupEnvVar(ctx *pulumi.Context, args *LookupEnvGroupEnvVarArgs, opts ...pulumi.InvokeOption) (*LookupEnvGroupEnvVarResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnvGroupEnvVarResult
	err := ctx.Invoke("render:env-groups:getEnvGroupEnvVar", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvGroupEnvVarArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId string `pulumi:"envGroupId"`
	// The name of the environment variable
	EnvVarKey string `pulumi:"envVarKey"`
}

type LookupEnvGroupEnvVarResult struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func LookupEnvGroupEnvVarOutput(ctx *pulumi.Context, args LookupEnvGroupEnvVarOutputArgs, opts ...pulumi.InvokeOption) LookupEnvGroupEnvVarResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnvGroupEnvVarResultOutput, error) {
			args := v.(LookupEnvGroupEnvVarArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:env-groups:getEnvGroupEnvVar", args, LookupEnvGroupEnvVarResultOutput{}, options).(LookupEnvGroupEnvVarResultOutput), nil
		}).(LookupEnvGroupEnvVarResultOutput)
}

type LookupEnvGroupEnvVarOutputArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId pulumi.StringInput `pulumi:"envGroupId"`
	// The name of the environment variable
	EnvVarKey pulumi.StringInput `pulumi:"envVarKey"`
}

func (LookupEnvGroupEnvVarOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvGroupEnvVarArgs)(nil)).Elem()
}

type LookupEnvGroupEnvVarResultOutput struct{ *pulumi.OutputState }

func (LookupEnvGroupEnvVarResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvGroupEnvVarResult)(nil)).Elem()
}

func (o LookupEnvGroupEnvVarResultOutput) ToLookupEnvGroupEnvVarResultOutput() LookupEnvGroupEnvVarResultOutput {
	return o
}

func (o LookupEnvGroupEnvVarResultOutput) ToLookupEnvGroupEnvVarResultOutputWithContext(ctx context.Context) LookupEnvGroupEnvVarResultOutput {
	return o
}

func (o LookupEnvGroupEnvVarResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvGroupEnvVarResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupEnvGroupEnvVarResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvGroupEnvVarResult) string { return v.Value }).(pulumi.StringOutput)
}

type LookupEnvGroupEnvVarResultArrayOutput struct{ *pulumi.OutputState }

func (LookupEnvGroupEnvVarResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupEnvGroupEnvVarResult)(nil)).Elem()
}

func (o LookupEnvGroupEnvVarResultArrayOutput) ToLookupEnvGroupEnvVarResultArrayOutput() LookupEnvGroupEnvVarResultArrayOutput {
	return o
}

func (o LookupEnvGroupEnvVarResultArrayOutput) ToLookupEnvGroupEnvVarResultArrayOutputWithContext(ctx context.Context) LookupEnvGroupEnvVarResultArrayOutput {
	return o
}

func (o LookupEnvGroupEnvVarResultArrayOutput) Index(i pulumi.IntInput) LookupEnvGroupEnvVarResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupEnvGroupEnvVarResult {
		return vs[0].([]LookupEnvGroupEnvVarResult)[vs[1].(int)]
	}).(LookupEnvGroupEnvVarResultOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvGroupEnvVarResultOutput{})
}
