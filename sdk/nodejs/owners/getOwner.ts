// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getOwner(args: GetOwnerArgs, opts?: pulumi.InvokeOptions): Promise<GetOwnerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:owners:getOwner", {
        "id": args.id,
    }, opts);
}

export interface GetOwnerArgs {
    /**
     * (Required) The ID of the user or team
     */
    id: string;
}

export interface GetOwnerResult {
    readonly items: outputs.owners.Owner;
}

export function getOwnerOutput(args: GetOwnerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOwnerResult> {
    return pulumi.output(args).apply(a => getOwner(a, opts))
}

export interface GetOwnerOutputArgs {
    /**
     * (Required) The ID of the user or team
     */
    id: pulumi.Input<string>;
}
