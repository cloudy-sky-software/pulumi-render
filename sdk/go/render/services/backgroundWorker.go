// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackgroundWorker struct {
	pulumi.CustomResourceState

	AutoDeploy     BackgroundWorkerAutoDeployOutput          `pulumi:"autoDeploy"`
	Branch         pulumi.StringPtrOutput                    `pulumi:"branch"`
	BuildFilter    BuildFilterPtrOutput                      `pulumi:"buildFilter"`
	CreatedAt      pulumi.StringOutput                       `pulumi:"createdAt"`
	ImagePath      pulumi.StringPtrOutput                    `pulumi:"imagePath"`
	Name           pulumi.StringOutput                       `pulumi:"name"`
	NotifyOnFail   BackgroundWorkerNotifyOnFailOutput        `pulumi:"notifyOnFail"`
	OwnerId        pulumi.StringOutput                       `pulumi:"ownerId"`
	Repo           pulumi.StringPtrOutput                    `pulumi:"repo"`
	RootDir        pulumi.StringOutput                       `pulumi:"rootDir"`
	ServiceDetails pulumi.AnyOutput                          `pulumi:"serviceDetails"`
	Slug           pulumi.StringOutput                       `pulumi:"slug"`
	Suspended      BackgroundWorkerSuspendedOutput           `pulumi:"suspended"`
	Suspenders     BackgroundWorkerSuspendersItemArrayOutput `pulumi:"suspenders"`
	Type           pulumi.StringOutput                       `pulumi:"type"`
	UpdatedAt      pulumi.StringOutput                       `pulumi:"updatedAt"`
}

// NewBackgroundWorker registers a new resource with the given unique name, arguments, and options.
func NewBackgroundWorker(ctx *pulumi.Context,
	name string, args *BackgroundWorkerArgs, opts ...pulumi.ResourceOption) (*BackgroundWorker, error) {
	if args == nil {
		args = &BackgroundWorkerArgs{}
	}

	if args.Type == nil {
		args.Type = pulumi.StringPtr("background_worker")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackgroundWorker
	err := ctx.RegisterResource("render:services:BackgroundWorker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackgroundWorker gets an existing BackgroundWorker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackgroundWorker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackgroundWorkerState, opts ...pulumi.ResourceOption) (*BackgroundWorker, error) {
	var resource BackgroundWorker
	err := ctx.ReadResource("render:services:BackgroundWorker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackgroundWorker resources.
type backgroundWorkerState struct {
}

type BackgroundWorkerState struct {
}

func (BackgroundWorkerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backgroundWorkerState)(nil)).Elem()
}

type backgroundWorkerArgs struct {
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a BackgroundWorker resource.
type BackgroundWorkerArgs struct {
	Type pulumi.StringPtrInput
}

func (BackgroundWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backgroundWorkerArgs)(nil)).Elem()
}

type BackgroundWorkerInput interface {
	pulumi.Input

	ToBackgroundWorkerOutput() BackgroundWorkerOutput
	ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput
}

func (*BackgroundWorker) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorker)(nil)).Elem()
}

func (i *BackgroundWorker) ToBackgroundWorkerOutput() BackgroundWorkerOutput {
	return i.ToBackgroundWorkerOutputWithContext(context.Background())
}

func (i *BackgroundWorker) ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackgroundWorkerOutput)
}

type BackgroundWorkerOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorker)(nil)).Elem()
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutput() BackgroundWorkerOutput {
	return o
}

func (o BackgroundWorkerOutput) ToBackgroundWorkerOutputWithContext(ctx context.Context) BackgroundWorkerOutput {
	return o
}

func (o BackgroundWorkerOutput) AutoDeploy() BackgroundWorkerAutoDeployOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerAutoDeployOutput { return v.AutoDeploy }).(BackgroundWorkerAutoDeployOutput)
}

func (o BackgroundWorkerOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) BuildFilterPtrOutput { return v.BuildFilter }).(BuildFilterPtrOutput)
}

func (o BackgroundWorkerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.ImagePath }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) NotifyOnFail() BackgroundWorkerNotifyOnFailOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerNotifyOnFailOutput { return v.NotifyOnFail }).(BackgroundWorkerNotifyOnFailOutput)
}

func (o BackgroundWorkerOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringPtrOutput { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerOutput) RootDir() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.RootDir }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) ServiceDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.AnyOutput { return v.ServiceDetails }).(pulumi.AnyOutput)
}

func (o BackgroundWorkerOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) Suspended() BackgroundWorkerSuspendedOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerSuspendedOutput { return v.Suspended }).(BackgroundWorkerSuspendedOutput)
}

func (o BackgroundWorkerOutput) Suspenders() BackgroundWorkerSuspendersItemArrayOutput {
	return o.ApplyT(func(v *BackgroundWorker) BackgroundWorkerSuspendersItemArrayOutput { return v.Suspenders }).(BackgroundWorkerSuspendersItemArrayOutput)
}

func (o BackgroundWorkerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o BackgroundWorkerOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *BackgroundWorker) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackgroundWorkerInput)(nil)).Elem(), &BackgroundWorker{})
	pulumi.RegisterOutputType(BackgroundWorkerOutput{})
}
