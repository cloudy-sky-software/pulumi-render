# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'BlueprintWithCursor',
    'BlueprintWithCursorBlueprintProperties',
    'GetBlueprintPropertiesResourcesItemProperties',
    'SyncWithCursor',
    'SyncWithCursorSyncProperties',
    'SyncWithCursorSyncPropertiesCommitProperties',
]

@pulumi.output_type
class BlueprintWithCursor(dict):
    """
    A Blueprint with a cursor
    """
    def __init__(__self__, *,
                 blueprint: 'outputs.BlueprintWithCursorBlueprintProperties',
                 cursor: _builtins.str):
        """
        A Blueprint with a cursor
        """
        pulumi.set(__self__, "blueprint", blueprint)
        pulumi.set(__self__, "cursor", cursor)

    @_builtins.property
    @pulumi.getter
    def blueprint(self) -> 'outputs.BlueprintWithCursorBlueprintProperties':
        return pulumi.get(self, "blueprint")

    @_builtins.property
    @pulumi.getter
    def cursor(self) -> _builtins.str:
        return pulumi.get(self, "cursor")


@pulumi.output_type
class BlueprintWithCursorBlueprintProperties(dict):
    def __init__(__self__, *,
                 auto_sync: _builtins.bool,
                 branch: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 repo: _builtins.str,
                 status: 'BlueprintWithCursorBlueprintPropertiesStatus',
                 last_sync: Optional[_builtins.str] = None):
        """
        :param _builtins.bool auto_sync: Automatically sync changes to render.yaml
        """
        pulumi.set(__self__, "auto_sync", auto_sync)
        pulumi.set(__self__, "branch", branch)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "repo", repo)
        pulumi.set(__self__, "status", status)
        if last_sync is not None:
            pulumi.set(__self__, "last_sync", last_sync)

    @_builtins.property
    @pulumi.getter(name="autoSync")
    def auto_sync(self) -> _builtins.bool:
        """
        Automatically sync changes to render.yaml
        """
        return pulumi.get(self, "auto_sync")

    @_builtins.property
    @pulumi.getter
    def branch(self) -> _builtins.str:
        return pulumi.get(self, "branch")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def repo(self) -> _builtins.str:
        return pulumi.get(self, "repo")

    @_builtins.property
    @pulumi.getter
    def status(self) -> 'BlueprintWithCursorBlueprintPropertiesStatus':
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="lastSync")
    def last_sync(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "last_sync")


@pulumi.output_type
class GetBlueprintPropertiesResourcesItemProperties(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 type: 'GetBlueprintPropertiesResourcesItemPropertiesType'):
        """
        :param 'GetBlueprintPropertiesResourcesItemPropertiesType' type: type of the resource (ex. web_service or postgres)
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'GetBlueprintPropertiesResourcesItemPropertiesType':
        """
        type of the resource (ex. web_service or postgres)
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class SyncWithCursor(dict):
    """
    A Blueprint sync with a cursor
    """
    def __init__(__self__, *,
                 cursor: _builtins.str,
                 sync: 'outputs.SyncWithCursorSyncProperties'):
        """
        A Blueprint sync with a cursor
        """
        pulumi.set(__self__, "cursor", cursor)
        pulumi.set(__self__, "sync", sync)

    @_builtins.property
    @pulumi.getter
    def cursor(self) -> _builtins.str:
        return pulumi.get(self, "cursor")

    @_builtins.property
    @pulumi.getter
    def sync(self) -> 'outputs.SyncWithCursorSyncProperties':
        return pulumi.get(self, "sync")


@pulumi.output_type
class SyncWithCursorSyncProperties(dict):
    def __init__(__self__, *,
                 commit: 'outputs.SyncWithCursorSyncPropertiesCommitProperties',
                 id: _builtins.str,
                 state: 'SyncWithCursorSyncPropertiesState',
                 completed_at: Optional[_builtins.str] = None,
                 started_at: Optional[_builtins.str] = None):
        pulumi.set(__self__, "commit", commit)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "state", state)
        if completed_at is not None:
            pulumi.set(__self__, "completed_at", completed_at)
        if started_at is not None:
            pulumi.set(__self__, "started_at", started_at)

    @_builtins.property
    @pulumi.getter
    def commit(self) -> 'outputs.SyncWithCursorSyncPropertiesCommitProperties':
        return pulumi.get(self, "commit")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> 'SyncWithCursorSyncPropertiesState':
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="completedAt")
    def completed_at(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "completed_at")

    @_builtins.property
    @pulumi.getter(name="startedAt")
    def started_at(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "started_at")


@pulumi.output_type
class SyncWithCursorSyncPropertiesCommitProperties(dict):
    def __init__(__self__, *,
                 id: _builtins.str):
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")


