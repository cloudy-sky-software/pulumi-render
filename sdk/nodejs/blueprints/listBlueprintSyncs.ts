// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listBlueprintSyncs(args: ListBlueprintSyncsArgs, opts?: pulumi.InvokeOptions): Promise<ListBlueprintSyncsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:blueprints:listBlueprintSyncs", {
        "blueprintId": args.blueprintId,
    }, opts);
}

export interface ListBlueprintSyncsArgs {
    /**
     * The ID of the blueprint
     */
    blueprintId: string;
}

export interface ListBlueprintSyncsResult {
    readonly items: outputs.blueprints.SyncWithCursor[];
}
export function listBlueprintSyncsOutput(args: ListBlueprintSyncsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListBlueprintSyncsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:blueprints:listBlueprintSyncs", {
        "blueprintId": args.blueprintId,
    }, opts);
}

export interface ListBlueprintSyncsOutputArgs {
    /**
     * The ID of the blueprint
     */
    blueprintId: pulumi.Input<string>;
}
