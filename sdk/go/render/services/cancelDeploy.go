// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CancelDeploy struct {
	pulumi.CustomResourceState

	Commit     CommitPropertiesPtrOutput `pulumi:"commit"`
	CreatedAt  pulumi.StringPtrOutput    `pulumi:"createdAt"`
	FinishedAt pulumi.StringPtrOutput    `pulumi:"finishedAt"`
	// Image information used when creating the deploy. Not present for Git-backed deploys
	Image     ImagePropertiesPtrOutput     `pulumi:"image"`
	Status    CancelDeployStatusPtrOutput  `pulumi:"status"`
	Trigger   CancelDeployTriggerPtrOutput `pulumi:"trigger"`
	UpdatedAt pulumi.StringPtrOutput       `pulumi:"updatedAt"`
}

// NewCancelDeploy registers a new resource with the given unique name, arguments, and options.
func NewCancelDeploy(ctx *pulumi.Context,
	name string, args *CancelDeployArgs, opts ...pulumi.ResourceOption) (*CancelDeploy, error) {
	if args == nil {
		args = &CancelDeployArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CancelDeploy
	err := ctx.RegisterResource("render:services:CancelDeploy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCancelDeploy gets an existing CancelDeploy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCancelDeploy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CancelDeployState, opts ...pulumi.ResourceOption) (*CancelDeploy, error) {
	var resource CancelDeploy
	err := ctx.ReadResource("render:services:CancelDeploy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CancelDeploy resources.
type cancelDeployState struct {
}

type CancelDeployState struct {
}

func (CancelDeployState) ElementType() reflect.Type {
	return reflect.TypeOf((*cancelDeployState)(nil)).Elem()
}

type cancelDeployArgs struct {
	// The ID of the deploy
	DeployId *string `pulumi:"deployId"`
	// The ID of the service
	ServiceId *string `pulumi:"serviceId"`
}

// The set of arguments for constructing a CancelDeploy resource.
type CancelDeployArgs struct {
	// The ID of the deploy
	DeployId pulumi.StringPtrInput
	// The ID of the service
	ServiceId pulumi.StringPtrInput
}

func (CancelDeployArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cancelDeployArgs)(nil)).Elem()
}

type CancelDeployInput interface {
	pulumi.Input

	ToCancelDeployOutput() CancelDeployOutput
	ToCancelDeployOutputWithContext(ctx context.Context) CancelDeployOutput
}

func (*CancelDeploy) ElementType() reflect.Type {
	return reflect.TypeOf((**CancelDeploy)(nil)).Elem()
}

func (i *CancelDeploy) ToCancelDeployOutput() CancelDeployOutput {
	return i.ToCancelDeployOutputWithContext(context.Background())
}

func (i *CancelDeploy) ToCancelDeployOutputWithContext(ctx context.Context) CancelDeployOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CancelDeployOutput)
}

type CancelDeployOutput struct{ *pulumi.OutputState }

func (CancelDeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CancelDeploy)(nil)).Elem()
}

func (o CancelDeployOutput) ToCancelDeployOutput() CancelDeployOutput {
	return o
}

func (o CancelDeployOutput) ToCancelDeployOutputWithContext(ctx context.Context) CancelDeployOutput {
	return o
}

func (o CancelDeployOutput) Commit() CommitPropertiesPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) CommitPropertiesPtrOutput { return v.Commit }).(CommitPropertiesPtrOutput)
}

func (o CancelDeployOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o CancelDeployOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) pulumi.StringPtrOutput { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
func (o CancelDeployOutput) Image() ImagePropertiesPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) ImagePropertiesPtrOutput { return v.Image }).(ImagePropertiesPtrOutput)
}

func (o CancelDeployOutput) Status() CancelDeployStatusPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) CancelDeployStatusPtrOutput { return v.Status }).(CancelDeployStatusPtrOutput)
}

func (o CancelDeployOutput) Trigger() CancelDeployTriggerPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) CancelDeployTriggerPtrOutput { return v.Trigger }).(CancelDeployTriggerPtrOutput)
}

func (o CancelDeployOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CancelDeploy) pulumi.StringPtrOutput { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CancelDeployInput)(nil)).Elem(), &CancelDeploy{})
	pulumi.RegisterOutputType(CancelDeployOutput{})
}
