// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Blueprints
{
    public static class GetBlueprint
    {
        public static Task<GetBlueprintResult> InvokeAsync(GetBlueprintArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBlueprintResult>("render:blueprints:getBlueprint", args ?? new GetBlueprintArgs(), options.WithDefaults());

        public static Output<GetBlueprintResult> Invoke(GetBlueprintInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBlueprintResult>("render:blueprints:getBlueprint", args ?? new GetBlueprintInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlueprintArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the blueprint
        /// </summary>
        [Input("blueprintId", required: true)]
        public string BlueprintId { get; set; } = null!;

        public GetBlueprintArgs()
        {
        }
        public static new GetBlueprintArgs Empty => new GetBlueprintArgs();
    }

    public sealed class GetBlueprintInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the blueprint
        /// </summary>
        [Input("blueprintId", required: true)]
        public Input<string> BlueprintId { get; set; } = null!;

        public GetBlueprintInvokeArgs()
        {
        }
        public static new GetBlueprintInvokeArgs Empty => new GetBlueprintInvokeArgs();
    }


    [OutputType]
    public sealed class GetBlueprintResult
    {
        public readonly Outputs.GetBlueprintProperties Items;

        [OutputConstructor]
        private GetBlueprintResult(Outputs.GetBlueprintProperties items)
        {
            Items = items;
        }
    }
}
