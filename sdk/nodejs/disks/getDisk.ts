// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getDisk(args: GetDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:disks:getDisk", {
        "diskId": args.diskId,
    }, opts);
}

export interface GetDiskArgs {
    /**
     * The ID of the disk
     */
    diskId: string;
}

export interface GetDiskResult {
    readonly createdAt: string;
    readonly id: string;
    readonly mountPath: string;
    readonly name: string;
    readonly serviceId?: string;
    readonly sizeGB: number;
    readonly updatedAt: string;
}
export function getDiskOutput(args: GetDiskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:disks:getDisk", {
        "diskId": args.diskId,
    }, opts);
}

export interface GetDiskOutputArgs {
    /**
     * The ID of the disk
     */
    diskId: pulumi.Input<string>;
}
