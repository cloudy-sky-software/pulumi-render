// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListProjects(ctx *pulumi.Context, args *ListProjectsArgs, opts ...pulumi.InvokeOption) (*ListProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListProjectsResult
	err := ctx.Invoke("render:projects:listProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListProjectsArgs struct {
}

type ListProjectsResult struct {
	Items []ProjectWithCursor `pulumi:"items"`
}

func ListProjectsOutput(ctx *pulumi.Context, args ListProjectsOutputArgs, opts ...pulumi.InvokeOption) ListProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListProjectsResult, error) {
			args := v.(ListProjectsArgs)
			r, err := ListProjects(ctx, &args, opts...)
			var s ListProjectsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListProjectsResultOutput)
}

type ListProjectsOutputArgs struct {
}

func (ListProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectsArgs)(nil)).Elem()
}

type ListProjectsResultOutput struct{ *pulumi.OutputState }

func (ListProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectsResult)(nil)).Elem()
}

func (o ListProjectsResultOutput) ToListProjectsResultOutput() ListProjectsResultOutput {
	return o
}

func (o ListProjectsResultOutput) ToListProjectsResultOutputWithContext(ctx context.Context) ListProjectsResultOutput {
	return o
}

func (o ListProjectsResultOutput) Items() ProjectWithCursorArrayOutput {
	return o.ApplyT(func(v ListProjectsResult) []ProjectWithCursor { return v.Items }).(ProjectWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListProjectsResultOutput{})
}
