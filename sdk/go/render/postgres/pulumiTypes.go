// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgres

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CidrBlockAndDescription struct {
	CidrBlock string `pulumi:"cidrBlock"`
	// User-provided description of the CIDR block
	Description string `pulumi:"description"`
}

// CidrBlockAndDescriptionInput is an input type that accepts CidrBlockAndDescriptionArgs and CidrBlockAndDescriptionOutput values.
// You can construct a concrete instance of `CidrBlockAndDescriptionInput` via:
//
//	CidrBlockAndDescriptionArgs{...}
type CidrBlockAndDescriptionInput interface {
	pulumi.Input

	ToCidrBlockAndDescriptionOutput() CidrBlockAndDescriptionOutput
	ToCidrBlockAndDescriptionOutputWithContext(context.Context) CidrBlockAndDescriptionOutput
}

type CidrBlockAndDescriptionArgs struct {
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// User-provided description of the CIDR block
	Description pulumi.StringInput `pulumi:"description"`
}

func (CidrBlockAndDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrBlockAndDescription)(nil)).Elem()
}

func (i CidrBlockAndDescriptionArgs) ToCidrBlockAndDescriptionOutput() CidrBlockAndDescriptionOutput {
	return i.ToCidrBlockAndDescriptionOutputWithContext(context.Background())
}

func (i CidrBlockAndDescriptionArgs) ToCidrBlockAndDescriptionOutputWithContext(ctx context.Context) CidrBlockAndDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CidrBlockAndDescriptionOutput)
}

// CidrBlockAndDescriptionArrayInput is an input type that accepts CidrBlockAndDescriptionArray and CidrBlockAndDescriptionArrayOutput values.
// You can construct a concrete instance of `CidrBlockAndDescriptionArrayInput` via:
//
//	CidrBlockAndDescriptionArray{ CidrBlockAndDescriptionArgs{...} }
type CidrBlockAndDescriptionArrayInput interface {
	pulumi.Input

	ToCidrBlockAndDescriptionArrayOutput() CidrBlockAndDescriptionArrayOutput
	ToCidrBlockAndDescriptionArrayOutputWithContext(context.Context) CidrBlockAndDescriptionArrayOutput
}

type CidrBlockAndDescriptionArray []CidrBlockAndDescriptionInput

func (CidrBlockAndDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CidrBlockAndDescription)(nil)).Elem()
}

func (i CidrBlockAndDescriptionArray) ToCidrBlockAndDescriptionArrayOutput() CidrBlockAndDescriptionArrayOutput {
	return i.ToCidrBlockAndDescriptionArrayOutputWithContext(context.Background())
}

func (i CidrBlockAndDescriptionArray) ToCidrBlockAndDescriptionArrayOutputWithContext(ctx context.Context) CidrBlockAndDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CidrBlockAndDescriptionArrayOutput)
}

type CidrBlockAndDescriptionOutput struct{ *pulumi.OutputState }

func (CidrBlockAndDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrBlockAndDescription)(nil)).Elem()
}

func (o CidrBlockAndDescriptionOutput) ToCidrBlockAndDescriptionOutput() CidrBlockAndDescriptionOutput {
	return o
}

func (o CidrBlockAndDescriptionOutput) ToCidrBlockAndDescriptionOutputWithContext(ctx context.Context) CidrBlockAndDescriptionOutput {
	return o
}

func (o CidrBlockAndDescriptionOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v CidrBlockAndDescription) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// User-provided description of the CIDR block
func (o CidrBlockAndDescriptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CidrBlockAndDescription) string { return v.Description }).(pulumi.StringOutput)
}

type CidrBlockAndDescriptionArrayOutput struct{ *pulumi.OutputState }

func (CidrBlockAndDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CidrBlockAndDescription)(nil)).Elem()
}

func (o CidrBlockAndDescriptionArrayOutput) ToCidrBlockAndDescriptionArrayOutput() CidrBlockAndDescriptionArrayOutput {
	return o
}

func (o CidrBlockAndDescriptionArrayOutput) ToCidrBlockAndDescriptionArrayOutputWithContext(ctx context.Context) CidrBlockAndDescriptionArrayOutput {
	return o
}

func (o CidrBlockAndDescriptionArrayOutput) Index(i pulumi.IntInput) CidrBlockAndDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CidrBlockAndDescription {
		return vs[0].([]CidrBlockAndDescription)[vs[1].(int)]
	}).(CidrBlockAndDescriptionOutput)
}

type GetPostgresRecoveryInfoProperties struct {
	// Availability of point-in-time recovery.
	RecoveryStatus GetPostgresRecoveryInfoPropertiesRecoveryStatus `pulumi:"recoveryStatus"`
	StartsAt       *string                                         `pulumi:"startsAt"`
}

type ListPostgresExportItemProperties struct {
	CreatedAt string `pulumi:"createdAt"`
	Id        string `pulumi:"id"`
	// URL to download the Postgres export
	Url *string `pulumi:"url"`
}

type ListPostgresExportItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListPostgresExportItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPostgresExportItemProperties)(nil)).Elem()
}

func (o ListPostgresExportItemPropertiesOutput) ToListPostgresExportItemPropertiesOutput() ListPostgresExportItemPropertiesOutput {
	return o
}

func (o ListPostgresExportItemPropertiesOutput) ToListPostgresExportItemPropertiesOutputWithContext(ctx context.Context) ListPostgresExportItemPropertiesOutput {
	return o
}

func (o ListPostgresExportItemPropertiesOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ListPostgresExportItemProperties) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ListPostgresExportItemPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListPostgresExportItemProperties) string { return v.Id }).(pulumi.StringOutput)
}

// URL to download the Postgres export
func (o ListPostgresExportItemPropertiesOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListPostgresExportItemProperties) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ListPostgresExportItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListPostgresExportItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListPostgresExportItemProperties)(nil)).Elem()
}

func (o ListPostgresExportItemPropertiesArrayOutput) ToListPostgresExportItemPropertiesArrayOutput() ListPostgresExportItemPropertiesArrayOutput {
	return o
}

func (o ListPostgresExportItemPropertiesArrayOutput) ToListPostgresExportItemPropertiesArrayOutputWithContext(ctx context.Context) ListPostgresExportItemPropertiesArrayOutput {
	return o
}

func (o ListPostgresExportItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListPostgresExportItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListPostgresExportItemProperties {
		return vs[0].([]ListPostgresExportItemProperties)[vs[1].(int)]
	}).(ListPostgresExportItemPropertiesOutput)
}

type Owner struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	// Whether two-factor authentication is enabled for the owner. Only present for user owners.
	TwoFactorAuthEnabled *bool     `pulumi:"twoFactorAuthEnabled"`
	Type                 OwnerType `pulumi:"type"`
}

type OwnerOutput struct{ *pulumi.OutputState }

func (OwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Owner)(nil)).Elem()
}

func (o OwnerOutput) ToOwnerOutput() OwnerOutput {
	return o
}

func (o OwnerOutput) ToOwnerOutputWithContext(ctx context.Context) OwnerOutput {
	return o
}

func (o OwnerOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v Owner) string { return v.Email }).(pulumi.StringOutput)
}

func (o OwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Owner) string { return v.Id }).(pulumi.StringOutput)
}

func (o OwnerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Owner) string { return v.Name }).(pulumi.StringOutput)
}

// Whether two-factor authentication is enabled for the owner. Only present for user owners.
func (o OwnerOutput) TwoFactorAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Owner) *bool { return v.TwoFactorAuthEnabled }).(pulumi.BoolPtrOutput)
}

func (o OwnerOutput) Type() OwnerTypeOutput {
	return o.ApplyT(func(v Owner) OwnerType { return v.Type }).(OwnerTypeOutput)
}

type PostgresType struct {
	CreatedAt string `pulumi:"createdAt"`
	// The URL to view the Postgres instance in the Render Dashboard
	DashboardUrl  string  `pulumi:"dashboardUrl"`
	DatabaseName  string  `pulumi:"databaseName"`
	DatabaseUser  string  `pulumi:"databaseUser"`
	DiskSizeGB    *int    `pulumi:"diskSizeGB"`
	EnvironmentId *string `pulumi:"environmentId"`
	// The time at which the database will be expire. Applies to free tier databases only.
	ExpiresAt               *string                   `pulumi:"expiresAt"`
	HighAvailabilityEnabled bool                      `pulumi:"highAvailabilityEnabled"`
	Id                      string                    `pulumi:"id"`
	IpAllowList             []CidrBlockAndDescription `pulumi:"ipAllowList"`
	Name                    string                    `pulumi:"name"`
	Owner                   Owner                     `pulumi:"owner"`
	Plan                    PostgresPlan              `pulumi:"plan"`
	PrimaryPostgresID       *string                   `pulumi:"primaryPostgresID"`
	ReadReplicas            []ReadReplica             `pulumi:"readReplicas"`
	// Defaults to "oregon"
	Region     PostgresRegion           `pulumi:"region"`
	Role       PostgresRole             `pulumi:"role"`
	Status     PostgresStatus           `pulumi:"status"`
	Suspended  PostgresSuspended        `pulumi:"suspended"`
	Suspenders []PostgresSuspendersItem `pulumi:"suspenders"`
	UpdatedAt  string                   `pulumi:"updatedAt"`
	// The PostgreSQL version
	Version PostgresVersion `pulumi:"version"`
}

// Defaults sets the appropriate defaults for PostgresType
func (val *PostgresType) Defaults() *PostgresType {
	if val == nil {
		return nil
	}
	tmp := *val
	if internal.IsZero(tmp.Region) {
		tmp.Region = PostgresRegion("oregon")
	}
	return &tmp
}

type PostgresTypeOutput struct{ *pulumi.OutputState }

func (PostgresTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresType)(nil)).Elem()
}

func (o PostgresTypeOutput) ToPostgresTypeOutput() PostgresTypeOutput {
	return o
}

func (o PostgresTypeOutput) ToPostgresTypeOutputWithContext(ctx context.Context) PostgresTypeOutput {
	return o
}

func (o PostgresTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The URL to view the Postgres instance in the Render Dashboard
func (o PostgresTypeOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

func (o PostgresTypeOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o PostgresTypeOutput) DatabaseUser() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.DatabaseUser }).(pulumi.StringOutput)
}

func (o PostgresTypeOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresType) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

func (o PostgresTypeOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresType) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The time at which the database will be expire. Applies to free tier databases only.
func (o PostgresTypeOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresType) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

func (o PostgresTypeOutput) HighAvailabilityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PostgresType) bool { return v.HighAvailabilityEnabled }).(pulumi.BoolOutput)
}

func (o PostgresTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.Id }).(pulumi.StringOutput)
}

func (o PostgresTypeOutput) IpAllowList() CidrBlockAndDescriptionArrayOutput {
	return o.ApplyT(func(v PostgresType) []CidrBlockAndDescription { return v.IpAllowList }).(CidrBlockAndDescriptionArrayOutput)
}

func (o PostgresTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.Name }).(pulumi.StringOutput)
}

func (o PostgresTypeOutput) Owner() OwnerOutput {
	return o.ApplyT(func(v PostgresType) Owner { return v.Owner }).(OwnerOutput)
}

func (o PostgresTypeOutput) Plan() PostgresPlanOutput {
	return o.ApplyT(func(v PostgresType) PostgresPlan { return v.Plan }).(PostgresPlanOutput)
}

func (o PostgresTypeOutput) PrimaryPostgresID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresType) *string { return v.PrimaryPostgresID }).(pulumi.StringPtrOutput)
}

func (o PostgresTypeOutput) ReadReplicas() ReadReplicaArrayOutput {
	return o.ApplyT(func(v PostgresType) []ReadReplica { return v.ReadReplicas }).(ReadReplicaArrayOutput)
}

// Defaults to "oregon"
func (o PostgresTypeOutput) Region() PostgresRegionOutput {
	return o.ApplyT(func(v PostgresType) PostgresRegion { return v.Region }).(PostgresRegionOutput)
}

func (o PostgresTypeOutput) Role() PostgresRoleOutput {
	return o.ApplyT(func(v PostgresType) PostgresRole { return v.Role }).(PostgresRoleOutput)
}

func (o PostgresTypeOutput) Status() PostgresStatusOutput {
	return o.ApplyT(func(v PostgresType) PostgresStatus { return v.Status }).(PostgresStatusOutput)
}

func (o PostgresTypeOutput) Suspended() PostgresSuspendedOutput {
	return o.ApplyT(func(v PostgresType) PostgresSuspended { return v.Suspended }).(PostgresSuspendedOutput)
}

func (o PostgresTypeOutput) Suspenders() PostgresSuspendersItemArrayOutput {
	return o.ApplyT(func(v PostgresType) []PostgresSuspendersItem { return v.Suspenders }).(PostgresSuspendersItemArrayOutput)
}

func (o PostgresTypeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresType) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The PostgreSQL version
func (o PostgresTypeOutput) Version() PostgresVersionOutput {
	return o.ApplyT(func(v PostgresType) PostgresVersion { return v.Version }).(PostgresVersionOutput)
}

type PostgresConnectionInfo struct {
	ExternalConnectionString string `pulumi:"externalConnectionString"`
	InternalConnectionString string `pulumi:"internalConnectionString"`
	Password                 string `pulumi:"password"`
	PsqlCommand              string `pulumi:"psqlCommand"`
}

type PostgresDetail struct {
	CreatedAt string `pulumi:"createdAt"`
	// The URL to view the Postgres instance in the Render Dashboard
	DashboardUrl  string  `pulumi:"dashboardUrl"`
	DatabaseName  string  `pulumi:"databaseName"`
	DatabaseUser  string  `pulumi:"databaseUser"`
	DiskSizeGB    *int    `pulumi:"diskSizeGB"`
	EnvironmentId *string `pulumi:"environmentId"`
	// The time at which the database will be expire. Applies to free tier databases only.
	ExpiresAt               *string                           `pulumi:"expiresAt"`
	HighAvailabilityEnabled bool                              `pulumi:"highAvailabilityEnabled"`
	Id                      string                            `pulumi:"id"`
	IpAllowList             []CidrBlockAndDescription         `pulumi:"ipAllowList"`
	Maintenance             *RedisDetailpropertiesmaintenance `pulumi:"maintenance"`
	Name                    string                            `pulumi:"name"`
	Owner                   Owner                             `pulumi:"owner"`
	Plan                    PostgresDetailPlan                `pulumi:"plan"`
	PrimaryPostgresID       *string                           `pulumi:"primaryPostgresID"`
	ReadReplicas            []ReadReplica                     `pulumi:"readReplicas"`
	// Defaults to "oregon"
	Region     PostgresDetailRegion           `pulumi:"region"`
	Role       PostgresDetailRole             `pulumi:"role"`
	Status     PostgresDetailStatus           `pulumi:"status"`
	Suspended  PostgresDetailSuspended        `pulumi:"suspended"`
	Suspenders []PostgresDetailSuspendersItem `pulumi:"suspenders"`
	UpdatedAt  string                         `pulumi:"updatedAt"`
	// The PostgreSQL version
	Version PostgresDetailVersion `pulumi:"version"`
}

// Defaults sets the appropriate defaults for PostgresDetail
func (val *PostgresDetail) Defaults() *PostgresDetail {
	if val == nil {
		return nil
	}
	tmp := *val
	if internal.IsZero(tmp.Region) {
		tmp.Region = PostgresDetailRegion("oregon")
	}
	return &tmp
}

type PostgresWithCursor struct {
	Cursor   string       `pulumi:"cursor"`
	Postgres PostgresType `pulumi:"postgres"`
}

// Defaults sets the appropriate defaults for PostgresWithCursor
func (val *PostgresWithCursor) Defaults() *PostgresWithCursor {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Postgres = *tmp.Postgres.Defaults()

	return &tmp
}

type PostgresWithCursorOutput struct{ *pulumi.OutputState }

func (PostgresWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresWithCursor)(nil)).Elem()
}

func (o PostgresWithCursorOutput) ToPostgresWithCursorOutput() PostgresWithCursorOutput {
	return o
}

func (o PostgresWithCursorOutput) ToPostgresWithCursorOutputWithContext(ctx context.Context) PostgresWithCursorOutput {
	return o
}

func (o PostgresWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o PostgresWithCursorOutput) Postgres() PostgresTypeOutput {
	return o.ApplyT(func(v PostgresWithCursor) PostgresType { return v.Postgres }).(PostgresTypeOutput)
}

type PostgresWithCursorArrayOutput struct{ *pulumi.OutputState }

func (PostgresWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PostgresWithCursor)(nil)).Elem()
}

func (o PostgresWithCursorArrayOutput) ToPostgresWithCursorArrayOutput() PostgresWithCursorArrayOutput {
	return o
}

func (o PostgresWithCursorArrayOutput) ToPostgresWithCursorArrayOutputWithContext(ctx context.Context) PostgresWithCursorArrayOutput {
	return o
}

func (o PostgresWithCursorArrayOutput) Index(i pulumi.IntInput) PostgresWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PostgresWithCursor {
		return vs[0].([]PostgresWithCursor)[vs[1].(int)]
	}).(PostgresWithCursorOutput)
}

type ReadReplica struct {
	// The replica instance identifier.
	Id string `pulumi:"id"`
	// The display name of the replica instance.
	Name string `pulumi:"name"`
}

type ReadReplicaOutput struct{ *pulumi.OutputState }

func (ReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplica)(nil)).Elem()
}

func (o ReadReplicaOutput) ToReadReplicaOutput() ReadReplicaOutput {
	return o
}

func (o ReadReplicaOutput) ToReadReplicaOutputWithContext(ctx context.Context) ReadReplicaOutput {
	return o
}

// The replica instance identifier.
func (o ReadReplicaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplica) string { return v.Id }).(pulumi.StringOutput)
}

// The display name of the replica instance.
func (o ReadReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplica) string { return v.Name }).(pulumi.StringOutput)
}

type ReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (ReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplica)(nil)).Elem()
}

func (o ReadReplicaArrayOutput) ToReadReplicaArrayOutput() ReadReplicaArrayOutput {
	return o
}

func (o ReadReplicaArrayOutput) ToReadReplicaArrayOutputWithContext(ctx context.Context) ReadReplicaArrayOutput {
	return o
}

func (o ReadReplicaArrayOutput) Index(i pulumi.IntInput) ReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadReplica {
		return vs[0].([]ReadReplica)[vs[1].(int)]
	}).(ReadReplicaOutput)
}

type ReadReplicaInputType struct {
	// The display name of the replica instance.
	Name string `pulumi:"name"`
}

// ReadReplicaInputTypeInput is an input type that accepts ReadReplicaInputTypeArgs and ReadReplicaInputTypeOutput values.
// You can construct a concrete instance of `ReadReplicaInputTypeInput` via:
//
//	ReadReplicaInputTypeArgs{...}
type ReadReplicaInputTypeInput interface {
	pulumi.Input

	ToReadReplicaInputTypeOutput() ReadReplicaInputTypeOutput
	ToReadReplicaInputTypeOutputWithContext(context.Context) ReadReplicaInputTypeOutput
}

type ReadReplicaInputTypeArgs struct {
	// The display name of the replica instance.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ReadReplicaInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInputType)(nil)).Elem()
}

func (i ReadReplicaInputTypeArgs) ToReadReplicaInputTypeOutput() ReadReplicaInputTypeOutput {
	return i.ToReadReplicaInputTypeOutputWithContext(context.Background())
}

func (i ReadReplicaInputTypeArgs) ToReadReplicaInputTypeOutputWithContext(ctx context.Context) ReadReplicaInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInputTypeOutput)
}

// ReadReplicaInputTypeArrayInput is an input type that accepts ReadReplicaInputTypeArray and ReadReplicaInputTypeArrayOutput values.
// You can construct a concrete instance of `ReadReplicaInputTypeArrayInput` via:
//
//	ReadReplicaInputTypeArray{ ReadReplicaInputTypeArgs{...} }
type ReadReplicaInputTypeArrayInput interface {
	pulumi.Input

	ToReadReplicaInputTypeArrayOutput() ReadReplicaInputTypeArrayOutput
	ToReadReplicaInputTypeArrayOutputWithContext(context.Context) ReadReplicaInputTypeArrayOutput
}

type ReadReplicaInputTypeArray []ReadReplicaInputTypeInput

func (ReadReplicaInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInputType)(nil)).Elem()
}

func (i ReadReplicaInputTypeArray) ToReadReplicaInputTypeArrayOutput() ReadReplicaInputTypeArrayOutput {
	return i.ToReadReplicaInputTypeArrayOutputWithContext(context.Background())
}

func (i ReadReplicaInputTypeArray) ToReadReplicaInputTypeArrayOutputWithContext(ctx context.Context) ReadReplicaInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInputTypeArrayOutput)
}

type ReadReplicaInputTypeOutput struct{ *pulumi.OutputState }

func (ReadReplicaInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInputType)(nil)).Elem()
}

func (o ReadReplicaInputTypeOutput) ToReadReplicaInputTypeOutput() ReadReplicaInputTypeOutput {
	return o
}

func (o ReadReplicaInputTypeOutput) ToReadReplicaInputTypeOutputWithContext(ctx context.Context) ReadReplicaInputTypeOutput {
	return o
}

// The display name of the replica instance.
func (o ReadReplicaInputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplicaInputType) string { return v.Name }).(pulumi.StringOutput)
}

type ReadReplicaInputTypeArrayOutput struct{ *pulumi.OutputState }

func (ReadReplicaInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInputType)(nil)).Elem()
}

func (o ReadReplicaInputTypeArrayOutput) ToReadReplicaInputTypeArrayOutput() ReadReplicaInputTypeArrayOutput {
	return o
}

func (o ReadReplicaInputTypeArrayOutput) ToReadReplicaInputTypeArrayOutputWithContext(ctx context.Context) ReadReplicaInputTypeArrayOutput {
	return o
}

func (o ReadReplicaInputTypeArrayOutput) Index(i pulumi.IntInput) ReadReplicaInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadReplicaInputType {
		return vs[0].([]ReadReplicaInputType)[vs[1].(int)]
	}).(ReadReplicaInputTypeOutput)
}

type RedisDetailpropertiesmaintenance struct {
	Id string `pulumi:"id"`
	// If present, the maintenance run cannot be scheduled for later than this date-time.
	PendingMaintenanceBy *string                               `pulumi:"pendingMaintenanceBy"`
	ScheduledAt          string                                `pulumi:"scheduledAt"`
	State                RedisDetailpropertiesmaintenanceState `pulumi:"state"`
	Type                 string                                `pulumi:"type"`
}

type RedisDetailpropertiesmaintenanceOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisDetailpropertiesmaintenance)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenanceOutput) ToRedisDetailpropertiesmaintenanceOutput() RedisDetailpropertiesmaintenanceOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceOutput) ToRedisDetailpropertiesmaintenanceOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenanceOutput {
	return o
}

func (o RedisDetailpropertiesmaintenanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RedisDetailpropertiesmaintenance) string { return v.Id }).(pulumi.StringOutput)
}

// If present, the maintenance run cannot be scheduled for later than this date-time.
func (o RedisDetailpropertiesmaintenanceOutput) PendingMaintenanceBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisDetailpropertiesmaintenance) *string { return v.PendingMaintenanceBy }).(pulumi.StringPtrOutput)
}

func (o RedisDetailpropertiesmaintenanceOutput) ScheduledAt() pulumi.StringOutput {
	return o.ApplyT(func(v RedisDetailpropertiesmaintenance) string { return v.ScheduledAt }).(pulumi.StringOutput)
}

func (o RedisDetailpropertiesmaintenanceOutput) State() RedisDetailpropertiesmaintenanceStateOutput {
	return o.ApplyT(func(v RedisDetailpropertiesmaintenance) RedisDetailpropertiesmaintenanceState { return v.State }).(RedisDetailpropertiesmaintenanceStateOutput)
}

func (o RedisDetailpropertiesmaintenanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RedisDetailpropertiesmaintenance) string { return v.Type }).(pulumi.StringOutput)
}

type RedisDetailpropertiesmaintenancePtrOutput struct{ *pulumi.OutputState }

func (RedisDetailpropertiesmaintenancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisDetailpropertiesmaintenance)(nil)).Elem()
}

func (o RedisDetailpropertiesmaintenancePtrOutput) ToRedisDetailpropertiesmaintenancePtrOutput() RedisDetailpropertiesmaintenancePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenancePtrOutput) ToRedisDetailpropertiesmaintenancePtrOutputWithContext(ctx context.Context) RedisDetailpropertiesmaintenancePtrOutput {
	return o
}

func (o RedisDetailpropertiesmaintenancePtrOutput) Elem() RedisDetailpropertiesmaintenanceOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) RedisDetailpropertiesmaintenance {
		if v != nil {
			return *v
		}
		var ret RedisDetailpropertiesmaintenance
		return ret
	}).(RedisDetailpropertiesmaintenanceOutput)
}

func (o RedisDetailpropertiesmaintenancePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// If present, the maintenance run cannot be scheduled for later than this date-time.
func (o RedisDetailpropertiesmaintenancePtrOutput) PendingMaintenanceBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) *string {
		if v == nil {
			return nil
		}
		return v.PendingMaintenanceBy
	}).(pulumi.StringPtrOutput)
}

func (o RedisDetailpropertiesmaintenancePtrOutput) ScheduledAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduledAt
	}).(pulumi.StringPtrOutput)
}

func (o RedisDetailpropertiesmaintenancePtrOutput) State() RedisDetailpropertiesmaintenanceStatePtrOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) *RedisDetailpropertiesmaintenanceState {
		if v == nil {
			return nil
		}
		return &v.State
	}).(RedisDetailpropertiesmaintenanceStatePtrOutput)
}

func (o RedisDetailpropertiesmaintenancePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisDetailpropertiesmaintenance) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CidrBlockAndDescriptionInput)(nil)).Elem(), CidrBlockAndDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CidrBlockAndDescriptionArrayInput)(nil)).Elem(), CidrBlockAndDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInputTypeInput)(nil)).Elem(), ReadReplicaInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInputTypeArrayInput)(nil)).Elem(), ReadReplicaInputTypeArray{})
	pulumi.RegisterOutputType(CidrBlockAndDescriptionOutput{})
	pulumi.RegisterOutputType(CidrBlockAndDescriptionArrayOutput{})
	pulumi.RegisterOutputType(ListPostgresExportItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListPostgresExportItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(OwnerOutput{})
	pulumi.RegisterOutputType(PostgresTypeOutput{})
	pulumi.RegisterOutputType(PostgresWithCursorOutput{})
	pulumi.RegisterOutputType(PostgresWithCursorArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaOutput{})
	pulumi.RegisterOutputType(ReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaInputTypeOutput{})
	pulumi.RegisterOutputType(ReadReplicaInputTypeArrayOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenanceOutput{})
	pulumi.RegisterOutputType(RedisDetailpropertiesmaintenancePtrOutput{})
}
