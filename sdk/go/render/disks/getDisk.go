// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package disks

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDisk(ctx *pulumi.Context, args *LookupDiskArgs, opts ...pulumi.InvokeOption) (*LookupDiskResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiskResult
	err := ctx.Invoke("render:disks:getDisk", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiskArgs struct {
	// The ID of the disk
	DiskId string `pulumi:"diskId"`
}

type LookupDiskResult struct {
	CreatedAt string  `pulumi:"createdAt"`
	Id        string  `pulumi:"id"`
	MountPath string  `pulumi:"mountPath"`
	Name      string  `pulumi:"name"`
	ServiceId *string `pulumi:"serviceId"`
	SizeGB    int     `pulumi:"sizeGB"`
	UpdatedAt string  `pulumi:"updatedAt"`
}

func LookupDiskOutput(ctx *pulumi.Context, args LookupDiskOutputArgs, opts ...pulumi.InvokeOption) LookupDiskResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDiskResultOutput, error) {
			args := v.(LookupDiskArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:disks:getDisk", args, LookupDiskResultOutput{}, options).(LookupDiskResultOutput), nil
		}).(LookupDiskResultOutput)
}

type LookupDiskOutputArgs struct {
	// The ID of the disk
	DiskId pulumi.StringInput `pulumi:"diskId"`
}

func (LookupDiskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiskArgs)(nil)).Elem()
}

type LookupDiskResultOutput struct{ *pulumi.OutputState }

func (LookupDiskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiskResult)(nil)).Elem()
}

func (o LookupDiskResultOutput) ToLookupDiskResultOutput() LookupDiskResultOutput {
	return o
}

func (o LookupDiskResultOutput) ToLookupDiskResultOutputWithContext(ctx context.Context) LookupDiskResultOutput {
	return o
}

func (o LookupDiskResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiskResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupDiskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiskResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDiskResultOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiskResult) string { return v.MountPath }).(pulumi.StringOutput)
}

func (o LookupDiskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiskResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDiskResultOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskResult) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

func (o LookupDiskResultOutput) SizeGB() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDiskResult) int { return v.SizeGB }).(pulumi.IntOutput)
}

func (o LookupDiskResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiskResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiskResultOutput{})
}
