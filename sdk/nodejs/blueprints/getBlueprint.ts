// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getBlueprint(args: GetBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:blueprints:getBlueprint", {
        "blueprintId": args.blueprintId,
    }, opts);
}

export interface GetBlueprintArgs {
    /**
     * The ID of the blueprint
     */
    blueprintId: string;
}

export interface GetBlueprintResult {
    readonly items: outputs.blueprints.GetBlueprintProperties;
}
export function getBlueprintOutput(args: GetBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintResult> {
    return pulumi.output(args).apply((a: any) => getBlueprint(a, opts))
}

export interface GetBlueprintOutputArgs {
    /**
     * The ID of the blueprint
     */
    blueprintId: pulumi.Input<string>;
}
