// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Postgres
{
    /// <summary>
    /// Input for creating a database
    /// </summary>
    [RenderResourceType("render:postgres:Postgres")]
    public partial class Postgres : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The URL to view the Postgres instance in the Render Dashboard
        /// </summary>
        [Output("dashboardUrl")]
        public Output<string> DashboardUrl { get; private set; } = null!;

        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        [Output("databaseUser")]
        public Output<string> DatabaseUser { get; private set; } = null!;

        /// <summary>
        /// The Datadog API key for the Datadog agent to monitor the new database.
        /// </summary>
        [Output("datadogAPIKey")]
        public Output<string?> DatadogAPIKey { get; private set; } = null!;

        /// <summary>
        /// Datadog region to use for monitoring the new database. Defaults to 'US1'.
        /// </summary>
        [Output("datadogSite")]
        public Output<string?> DatadogSite { get; private set; } = null!;

        [Output("diskSizeGB")]
        public Output<int?> DiskSizeGB { get; private set; } = null!;

        [Output("enableHighAvailability")]
        public Output<bool?> EnableHighAvailability { get; private set; } = null!;

        [Output("environmentId")]
        public Output<string?> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The time at which the database will be expire. Applies to free tier databases only.
        /// </summary>
        [Output("expiresAt")]
        public Output<string?> ExpiresAt { get; private set; } = null!;

        [Output("highAvailabilityEnabled")]
        public Output<bool> HighAvailabilityEnabled { get; private set; } = null!;

        [Output("ipAllowList")]
        public Output<ImmutableArray<Outputs.CidrBlockAndDescription>> IpAllowList { get; private set; } = null!;

        [Output("maintenance")]
        public Output<Outputs.RedisDetailpropertiesmaintenance?> Maintenance { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("owner")]
        public Output<Outputs.Owner> Owner { get; private set; } = null!;

        /// <summary>
        /// The ID of the workspace to create the database for
        /// </summary>
        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        [Output("plan")]
        public Output<Pulumi.Render.Postgres.Plan> Plan { get; private set; } = null!;

        [Output("primaryPostgresID")]
        public Output<string?> PrimaryPostgresID { get; private set; } = null!;

        [Output("readReplicas")]
        public Output<ImmutableArray<Outputs.ReadReplica>> ReadReplicas { get; private set; } = null!;

        /// <summary>
        /// Defaults to "oregon"
        /// </summary>
        [Output("region")]
        public Output<Pulumi.Render.Postgres.Region> Region { get; private set; } = null!;

        [Output("role")]
        public Output<Pulumi.Render.Postgres.Role> Role { get; private set; } = null!;

        [Output("status")]
        public Output<Pulumi.Render.Postgres.Status> Status { get; private set; } = null!;

        [Output("suspended")]
        public Output<Pulumi.Render.Postgres.Suspended> Suspended { get; private set; } = null!;

        [Output("suspenders")]
        public Output<ImmutableArray<Pulumi.Render.Postgres.SuspendersItem>> Suspenders { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The PostgreSQL version
        /// </summary>
        [Output("version")]
        public Output<Pulumi.Render.Postgres.Version> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Postgres resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Postgres(string name, PostgresArgs args, CustomResourceOptions? options = null)
            : base("render:postgres:Postgres", name, args ?? new PostgresArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Postgres(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("render:postgres:Postgres", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-render",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Postgres resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Postgres Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Postgres(name, id, options);
        }
    }

    public sealed class PostgresArgs : global::Pulumi.ResourceArgs
    {
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        [Input("databaseUser")]
        public Input<string>? DatabaseUser { get; set; }

        /// <summary>
        /// The Datadog API key for the Datadog agent to monitor the new database.
        /// </summary>
        [Input("datadogAPIKey")]
        public Input<string>? DatadogAPIKey { get; set; }

        /// <summary>
        /// Datadog region to use for monitoring the new database. Defaults to 'US1'.
        /// </summary>
        [Input("datadogSite")]
        public Input<string>? DatadogSite { get; set; }

        /// <summary>
        /// The number of gigabytes of disk space to allocate for the database
        /// </summary>
        [Input("diskSizeGB")]
        public Input<int>? DiskSizeGB { get; set; }

        [Input("enableHighAvailability")]
        public Input<bool>? EnableHighAvailability { get; set; }

        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("ipAllowList")]
        private InputList<Inputs.CidrBlockAndDescriptionArgs>? _ipAllowList;
        public InputList<Inputs.CidrBlockAndDescriptionArgs> IpAllowList
        {
            get => _ipAllowList ?? (_ipAllowList = new InputList<Inputs.CidrBlockAndDescriptionArgs>());
            set => _ipAllowList = value;
        }

        /// <summary>
        /// The name of the database as it will appear in the Render Dashboard
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the workspace to create the database for
        /// </summary>
        [Input("ownerId", required: true)]
        public Input<string> OwnerId { get; set; } = null!;

        [Input("plan", required: true)]
        public Input<Pulumi.Render.Postgres.Plan> Plan { get; set; } = null!;

        [Input("readReplicas")]
        private InputList<Inputs.ReadReplicaInputArgs>? _readReplicas;
        public InputList<Inputs.ReadReplicaInputArgs> ReadReplicas
        {
            get => _readReplicas ?? (_readReplicas = new InputList<Inputs.ReadReplicaInputArgs>());
            set => _readReplicas = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The PostgreSQL version
        /// </summary>
        [Input("version", required: true)]
        public Input<Pulumi.Render.Postgres.Version> Version { get; set; } = null!;

        public PostgresArgs()
        {
            DatabaseName = "randomly generated";
            DatabaseUser = "randomly generated";
            EnableHighAvailability = false;
        }
        public static new PostgresArgs Empty => new PostgresArgs();
    }
}
