// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notificationsettings

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListNotificationOverrides(ctx *pulumi.Context, args *ListNotificationOverridesArgs, opts ...pulumi.InvokeOption) (*ListNotificationOverridesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListNotificationOverridesResult
	err := ctx.Invoke("render:notification-settings:listNotificationOverrides", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNotificationOverridesArgs struct {
}

type ListNotificationOverridesResult struct {
	Items []NotificationOverrideWithCursor `pulumi:"items"`
}

func ListNotificationOverridesOutput(ctx *pulumi.Context, args ListNotificationOverridesOutputArgs, opts ...pulumi.InvokeOption) ListNotificationOverridesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListNotificationOverridesResultOutput, error) {
			args := v.(ListNotificationOverridesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:notification-settings:listNotificationOverrides", args, ListNotificationOverridesResultOutput{}, options).(ListNotificationOverridesResultOutput), nil
		}).(ListNotificationOverridesResultOutput)
}

type ListNotificationOverridesOutputArgs struct {
}

func (ListNotificationOverridesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotificationOverridesArgs)(nil)).Elem()
}

type ListNotificationOverridesResultOutput struct{ *pulumi.OutputState }

func (ListNotificationOverridesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotificationOverridesResult)(nil)).Elem()
}

func (o ListNotificationOverridesResultOutput) ToListNotificationOverridesResultOutput() ListNotificationOverridesResultOutput {
	return o
}

func (o ListNotificationOverridesResultOutput) ToListNotificationOverridesResultOutputWithContext(ctx context.Context) ListNotificationOverridesResultOutput {
	return o
}

func (o ListNotificationOverridesResultOutput) Items() NotificationOverrideWithCursorArrayOutput {
	return o.ApplyT(func(v ListNotificationOverridesResult) []NotificationOverrideWithCursor { return v.Items }).(NotificationOverrideWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNotificationOverridesResultOutput{})
}
