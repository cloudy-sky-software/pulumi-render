// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AutoscalingConfig struct {
	Criteria AutoscalingCriteria `pulumi:"criteria"`
	Enabled  bool                `pulumi:"enabled"`
	// The maximum number of instances for the service
	Max int `pulumi:"max"`
	// The minimum number of instances for the service
	Min int `pulumi:"min"`
}

// Defaults sets the appropriate defaults for AutoscalingConfig
func (val *AutoscalingConfig) Defaults() *AutoscalingConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Criteria = *tmp.Criteria.Defaults()

	if internal.IsZero(tmp.Enabled) {
		tmp.Enabled = false
	}
	return &tmp
}

type AutoscalingConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutput() AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutputWithContext(ctx context.Context) AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) Criteria() AutoscalingCriteriaOutput {
	return o.ApplyT(func(v AutoscalingConfig) AutoscalingCriteria { return v.Criteria }).(AutoscalingCriteriaOutput)
}

func (o AutoscalingConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AutoscalingConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The maximum number of instances for the service
func (o AutoscalingConfigOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingConfig) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum number of instances for the service
func (o AutoscalingConfigOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingConfig) int { return v.Min }).(pulumi.IntOutput)
}

type AutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) Elem() AutoscalingConfigOutput {
	return o.ApplyT(func(v *AutoscalingConfig) AutoscalingConfig {
		if v != nil {
			return *v
		}
		var ret AutoscalingConfig
		return ret
	}).(AutoscalingConfigOutput)
}

func (o AutoscalingConfigPtrOutput) Criteria() AutoscalingCriteriaPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *AutoscalingCriteria {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(AutoscalingCriteriaPtrOutput)
}

func (o AutoscalingConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of instances for the service
func (o AutoscalingConfigPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of instances for the service
func (o AutoscalingConfigPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type AutoscalingCriteria struct {
	Cpu    AutoscalingCriteriaPercentage `pulumi:"cpu"`
	Memory AutoscalingCriteriaPercentage `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for AutoscalingCriteria
func (val *AutoscalingCriteria) Defaults() *AutoscalingCriteria {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Cpu = *tmp.Cpu.Defaults()

	tmp.Memory = *tmp.Memory.Defaults()

	return &tmp
}

// AutoscalingCriteriaInput is an input type that accepts AutoscalingCriteriaArgs and AutoscalingCriteriaOutput values.
// You can construct a concrete instance of `AutoscalingCriteriaInput` via:
//
//	AutoscalingCriteriaArgs{...}
type AutoscalingCriteriaInput interface {
	pulumi.Input

	ToAutoscalingCriteriaOutput() AutoscalingCriteriaOutput
	ToAutoscalingCriteriaOutputWithContext(context.Context) AutoscalingCriteriaOutput
}

type AutoscalingCriteriaArgs struct {
	Cpu    AutoscalingCriteriaPercentageInput `pulumi:"cpu"`
	Memory AutoscalingCriteriaPercentageInput `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for AutoscalingCriteriaArgs
func (val *AutoscalingCriteriaArgs) Defaults() *AutoscalingCriteriaArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AutoscalingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCriteria)(nil)).Elem()
}

func (i AutoscalingCriteriaArgs) ToAutoscalingCriteriaOutput() AutoscalingCriteriaOutput {
	return i.ToAutoscalingCriteriaOutputWithContext(context.Background())
}

func (i AutoscalingCriteriaArgs) ToAutoscalingCriteriaOutputWithContext(ctx context.Context) AutoscalingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingCriteriaOutput)
}

type AutoscalingCriteriaOutput struct{ *pulumi.OutputState }

func (AutoscalingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCriteria)(nil)).Elem()
}

func (o AutoscalingCriteriaOutput) ToAutoscalingCriteriaOutput() AutoscalingCriteriaOutput {
	return o
}

func (o AutoscalingCriteriaOutput) ToAutoscalingCriteriaOutputWithContext(ctx context.Context) AutoscalingCriteriaOutput {
	return o
}

func (o AutoscalingCriteriaOutput) Cpu() AutoscalingCriteriaPercentageOutput {
	return o.ApplyT(func(v AutoscalingCriteria) AutoscalingCriteriaPercentage { return v.Cpu }).(AutoscalingCriteriaPercentageOutput)
}

func (o AutoscalingCriteriaOutput) Memory() AutoscalingCriteriaPercentageOutput {
	return o.ApplyT(func(v AutoscalingCriteria) AutoscalingCriteriaPercentage { return v.Memory }).(AutoscalingCriteriaPercentageOutput)
}

type AutoscalingCriteriaPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingCriteria)(nil)).Elem()
}

func (o AutoscalingCriteriaPtrOutput) ToAutoscalingCriteriaPtrOutput() AutoscalingCriteriaPtrOutput {
	return o
}

func (o AutoscalingCriteriaPtrOutput) ToAutoscalingCriteriaPtrOutputWithContext(ctx context.Context) AutoscalingCriteriaPtrOutput {
	return o
}

func (o AutoscalingCriteriaPtrOutput) Elem() AutoscalingCriteriaOutput {
	return o.ApplyT(func(v *AutoscalingCriteria) AutoscalingCriteria {
		if v != nil {
			return *v
		}
		var ret AutoscalingCriteria
		return ret
	}).(AutoscalingCriteriaOutput)
}

func (o AutoscalingCriteriaPtrOutput) Cpu() AutoscalingCriteriaPercentagePtrOutput {
	return o.ApplyT(func(v *AutoscalingCriteria) *AutoscalingCriteriaPercentage {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(AutoscalingCriteriaPercentagePtrOutput)
}

func (o AutoscalingCriteriaPtrOutput) Memory() AutoscalingCriteriaPercentagePtrOutput {
	return o.ApplyT(func(v *AutoscalingCriteria) *AutoscalingCriteriaPercentage {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(AutoscalingCriteriaPercentagePtrOutput)
}

type AutoscalingCriteriaPercentage struct {
	Enabled bool `pulumi:"enabled"`
	// Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.
	Percentage int `pulumi:"percentage"`
}

// Defaults sets the appropriate defaults for AutoscalingCriteriaPercentage
func (val *AutoscalingCriteriaPercentage) Defaults() *AutoscalingCriteriaPercentage {
	if val == nil {
		return nil
	}
	tmp := *val
	if internal.IsZero(tmp.Enabled) {
		tmp.Enabled = false
	}
	return &tmp
}

// AutoscalingCriteriaPercentageInput is an input type that accepts AutoscalingCriteriaPercentageArgs and AutoscalingCriteriaPercentageOutput values.
// You can construct a concrete instance of `AutoscalingCriteriaPercentageInput` via:
//
//	AutoscalingCriteriaPercentageArgs{...}
type AutoscalingCriteriaPercentageInput interface {
	pulumi.Input

	ToAutoscalingCriteriaPercentageOutput() AutoscalingCriteriaPercentageOutput
	ToAutoscalingCriteriaPercentageOutputWithContext(context.Context) AutoscalingCriteriaPercentageOutput
}

type AutoscalingCriteriaPercentageArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.
	Percentage pulumi.IntInput `pulumi:"percentage"`
}

// Defaults sets the appropriate defaults for AutoscalingCriteriaPercentageArgs
func (val *AutoscalingCriteriaPercentageArgs) Defaults() *AutoscalingCriteriaPercentageArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		tmp.Enabled = pulumi.Bool(false)
	}
	return &tmp
}
func (AutoscalingCriteriaPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCriteriaPercentage)(nil)).Elem()
}

func (i AutoscalingCriteriaPercentageArgs) ToAutoscalingCriteriaPercentageOutput() AutoscalingCriteriaPercentageOutput {
	return i.ToAutoscalingCriteriaPercentageOutputWithContext(context.Background())
}

func (i AutoscalingCriteriaPercentageArgs) ToAutoscalingCriteriaPercentageOutputWithContext(ctx context.Context) AutoscalingCriteriaPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingCriteriaPercentageOutput)
}

type AutoscalingCriteriaPercentageOutput struct{ *pulumi.OutputState }

func (AutoscalingCriteriaPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCriteriaPercentage)(nil)).Elem()
}

func (o AutoscalingCriteriaPercentageOutput) ToAutoscalingCriteriaPercentageOutput() AutoscalingCriteriaPercentageOutput {
	return o
}

func (o AutoscalingCriteriaPercentageOutput) ToAutoscalingCriteriaPercentageOutputWithContext(ctx context.Context) AutoscalingCriteriaPercentageOutput {
	return o
}

func (o AutoscalingCriteriaPercentageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AutoscalingCriteriaPercentage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.
func (o AutoscalingCriteriaPercentageOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingCriteriaPercentage) int { return v.Percentage }).(pulumi.IntOutput)
}

type AutoscalingCriteriaPercentagePtrOutput struct{ *pulumi.OutputState }

func (AutoscalingCriteriaPercentagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingCriteriaPercentage)(nil)).Elem()
}

func (o AutoscalingCriteriaPercentagePtrOutput) ToAutoscalingCriteriaPercentagePtrOutput() AutoscalingCriteriaPercentagePtrOutput {
	return o
}

func (o AutoscalingCriteriaPercentagePtrOutput) ToAutoscalingCriteriaPercentagePtrOutputWithContext(ctx context.Context) AutoscalingCriteriaPercentagePtrOutput {
	return o
}

func (o AutoscalingCriteriaPercentagePtrOutput) Elem() AutoscalingCriteriaPercentageOutput {
	return o.ApplyT(func(v *AutoscalingCriteriaPercentage) AutoscalingCriteriaPercentage {
		if v != nil {
			return *v
		}
		var ret AutoscalingCriteriaPercentage
		return ret
	}).(AutoscalingCriteriaPercentageOutput)
}

func (o AutoscalingCriteriaPercentagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalingCriteriaPercentage) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.
func (o AutoscalingCriteriaPercentagePtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingCriteriaPercentage) *int {
		if v == nil {
			return nil
		}
		return &v.Percentage
	}).(pulumi.IntPtrOutput)
}

type BackgroundWorkerDetails struct {
	Autoscaling *AutoscalingConfig `pulumi:"autoscaling"`
	BuildPlan   string             `pulumi:"buildPlan"`
	Disk        *Disk              `pulumi:"disk"`
	// Environment (runtime)
	Env                BackgroundWorkerDetailsEnv `pulumi:"env"`
	EnvSpecificDetails interface{}                `pulumi:"envSpecificDetails"`
	// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int       `pulumi:"numInstances"`
	ParentServer *Resource `pulumi:"parentServer"`
	// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       BackgroundWorkerDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled BackgroundWorkerDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     BackgroundWorkerDetailsRegion                     `pulumi:"region"`
}

// Defaults sets the appropriate defaults for BackgroundWorkerDetails
func (val *BackgroundWorkerDetails) Defaults() *BackgroundWorkerDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Autoscaling = tmp.Autoscaling.Defaults()

	return &tmp
}

type BackgroundWorkerDetailsOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundWorkerDetails)(nil)).Elem()
}

func (o BackgroundWorkerDetailsOutput) ToBackgroundWorkerDetailsOutput() BackgroundWorkerDetailsOutput {
	return o
}

func (o BackgroundWorkerDetailsOutput) ToBackgroundWorkerDetailsOutputWithContext(ctx context.Context) BackgroundWorkerDetailsOutput {
	return o
}

func (o BackgroundWorkerDetailsOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) *AutoscalingConfig { return v.Autoscaling }).(AutoscalingConfigPtrOutput)
}

func (o BackgroundWorkerDetailsOutput) BuildPlan() pulumi.StringOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) string { return v.BuildPlan }).(pulumi.StringOutput)
}

func (o BackgroundWorkerDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

// Environment (runtime)
func (o BackgroundWorkerDetailsOutput) Env() BackgroundWorkerDetailsEnvOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) BackgroundWorkerDetailsEnv { return v.Env }).(BackgroundWorkerDetailsEnvOutput)
}

func (o BackgroundWorkerDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o BackgroundWorkerDetailsOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) int { return v.NumInstances }).(pulumi.IntOutput)
}

func (o BackgroundWorkerDetailsOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) *Resource { return v.ParentServer }).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o BackgroundWorkerDetailsOutput) Plan() BackgroundWorkerDetailsPlanOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) BackgroundWorkerDetailsPlan { return v.Plan }).(BackgroundWorkerDetailsPlanOutput)
}

func (o BackgroundWorkerDetailsOutput) PullRequestPreviewsEnabled() BackgroundWorkerDetailsPullRequestPreviewsEnabledOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) BackgroundWorkerDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(BackgroundWorkerDetailsPullRequestPreviewsEnabledOutput)
}

func (o BackgroundWorkerDetailsOutput) Region() BackgroundWorkerDetailsRegionOutput {
	return o.ApplyT(func(v BackgroundWorkerDetails) BackgroundWorkerDetailsRegion { return v.Region }).(BackgroundWorkerDetailsRegionOutput)
}

type BackgroundWorkerDetailsPtrOutput struct{ *pulumi.OutputState }

func (BackgroundWorkerDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundWorkerDetails)(nil)).Elem()
}

func (o BackgroundWorkerDetailsPtrOutput) ToBackgroundWorkerDetailsPtrOutput() BackgroundWorkerDetailsPtrOutput {
	return o
}

func (o BackgroundWorkerDetailsPtrOutput) ToBackgroundWorkerDetailsPtrOutputWithContext(ctx context.Context) BackgroundWorkerDetailsPtrOutput {
	return o
}

func (o BackgroundWorkerDetailsPtrOutput) Elem() BackgroundWorkerDetailsOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) BackgroundWorkerDetails {
		if v != nil {
			return *v
		}
		var ret BackgroundWorkerDetails
		return ret
	}).(BackgroundWorkerDetailsOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *AutoscalingConfig {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(AutoscalingConfigPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) BuildPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildPlan
	}).(pulumi.StringPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

// Environment (runtime)
func (o BackgroundWorkerDetailsPtrOutput) Env() BackgroundWorkerDetailsEnvPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *BackgroundWorkerDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(BackgroundWorkerDetailsEnvPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o BackgroundWorkerDetailsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *Resource {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o BackgroundWorkerDetailsPtrOutput) Plan() BackgroundWorkerDetailsPlanPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *BackgroundWorkerDetailsPlan {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(BackgroundWorkerDetailsPlanPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) PullRequestPreviewsEnabled() BackgroundWorkerDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *BackgroundWorkerDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return &v.PullRequestPreviewsEnabled
	}).(BackgroundWorkerDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o BackgroundWorkerDetailsPtrOutput) Region() BackgroundWorkerDetailsRegionPtrOutput {
	return o.ApplyT(func(v *BackgroundWorkerDetails) *BackgroundWorkerDetailsRegion {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(BackgroundWorkerDetailsRegionPtrOutput)
}

type BackgroundWorkerPropertiesDiskProperties struct {
	MountPath string `pulumi:"mountPath"`
	Name      string `pulumi:"name"`
	// Defaults to 1
	SizeGB *int `pulumi:"sizeGB"`
}

type BuildFilter struct {
	IgnoredPaths []string `pulumi:"ignoredPaths"`
	Paths        []string `pulumi:"paths"`
}

type BuildFilterOutput struct{ *pulumi.OutputState }

func (BuildFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildFilter)(nil)).Elem()
}

func (o BuildFilterOutput) ToBuildFilterOutput() BuildFilterOutput {
	return o
}

func (o BuildFilterOutput) ToBuildFilterOutputWithContext(ctx context.Context) BuildFilterOutput {
	return o
}

func (o BuildFilterOutput) IgnoredPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildFilter) []string { return v.IgnoredPaths }).(pulumi.StringArrayOutput)
}

func (o BuildFilterOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildFilter) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type BuildFilterPtrOutput struct{ *pulumi.OutputState }

func (BuildFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildFilter)(nil)).Elem()
}

func (o BuildFilterPtrOutput) ToBuildFilterPtrOutput() BuildFilterPtrOutput {
	return o
}

func (o BuildFilterPtrOutput) ToBuildFilterPtrOutputWithContext(ctx context.Context) BuildFilterPtrOutput {
	return o
}

func (o BuildFilterPtrOutput) Elem() BuildFilterOutput {
	return o.ApplyT(func(v *BuildFilter) BuildFilter {
		if v != nil {
			return *v
		}
		var ret BuildFilter
		return ret
	}).(BuildFilterOutput)
}

func (o BuildFilterPtrOutput) IgnoredPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildFilter) []string {
		if v == nil {
			return nil
		}
		return v.IgnoredPaths
	}).(pulumi.StringArrayOutput)
}

func (o BuildFilterPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildFilter) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

type CommitProperties struct {
	CreatedAt *string `pulumi:"createdAt"`
	Id        *string `pulumi:"id"`
	Message   *string `pulumi:"message"`
}

type CommitPropertiesOutput struct{ *pulumi.OutputState }

func (CommitPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitProperties)(nil)).Elem()
}

func (o CommitPropertiesOutput) ToCommitPropertiesOutput() CommitPropertiesOutput {
	return o
}

func (o CommitPropertiesOutput) ToCommitPropertiesOutputWithContext(ctx context.Context) CommitPropertiesOutput {
	return o
}

func (o CommitPropertiesOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitProperties) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o CommitPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CommitPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type CommitPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CommitPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitProperties)(nil)).Elem()
}

func (o CommitPropertiesPtrOutput) ToCommitPropertiesPtrOutput() CommitPropertiesPtrOutput {
	return o
}

func (o CommitPropertiesPtrOutput) ToCommitPropertiesPtrOutputWithContext(ctx context.Context) CommitPropertiesPtrOutput {
	return o
}

func (o CommitPropertiesPtrOutput) Elem() CommitPropertiesOutput {
	return o.ApplyT(func(v *CommitProperties) CommitProperties {
		if v != nil {
			return *v
		}
		var ret CommitProperties
		return ret
	}).(CommitPropertiesOutput)
}

func (o CommitPropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o CommitPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CommitPropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type CronJobDetails struct {
	BuildPlan string `pulumi:"buildPlan"`
	// Environment (runtime)
	Env                 CronJobDetailsEnv `pulumi:"env"`
	EnvSpecificDetails  interface{}       `pulumi:"envSpecificDetails"`
	LastSuccessfulRunAt *string           `pulumi:"lastSuccessfulRunAt"`
	// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan     CronJobDetailsPlan   `pulumi:"plan"`
	Region   CronJobDetailsRegion `pulumi:"region"`
	Schedule string               `pulumi:"schedule"`
}

type CronJobDetailsOutput struct{ *pulumi.OutputState }

func (CronJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CronJobDetails)(nil)).Elem()
}

func (o CronJobDetailsOutput) ToCronJobDetailsOutput() CronJobDetailsOutput {
	return o
}

func (o CronJobDetailsOutput) ToCronJobDetailsOutputWithContext(ctx context.Context) CronJobDetailsOutput {
	return o
}

func (o CronJobDetailsOutput) BuildPlan() pulumi.StringOutput {
	return o.ApplyT(func(v CronJobDetails) string { return v.BuildPlan }).(pulumi.StringOutput)
}

// Environment (runtime)
func (o CronJobDetailsOutput) Env() CronJobDetailsEnvOutput {
	return o.ApplyT(func(v CronJobDetails) CronJobDetailsEnv { return v.Env }).(CronJobDetailsEnvOutput)
}

func (o CronJobDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v CronJobDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o CronJobDetailsOutput) LastSuccessfulRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CronJobDetails) *string { return v.LastSuccessfulRunAt }).(pulumi.StringPtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o CronJobDetailsOutput) Plan() CronJobDetailsPlanOutput {
	return o.ApplyT(func(v CronJobDetails) CronJobDetailsPlan { return v.Plan }).(CronJobDetailsPlanOutput)
}

func (o CronJobDetailsOutput) Region() CronJobDetailsRegionOutput {
	return o.ApplyT(func(v CronJobDetails) CronJobDetailsRegion { return v.Region }).(CronJobDetailsRegionOutput)
}

func (o CronJobDetailsOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v CronJobDetails) string { return v.Schedule }).(pulumi.StringOutput)
}

type CronJobDetailsPtrOutput struct{ *pulumi.OutputState }

func (CronJobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJobDetails)(nil)).Elem()
}

func (o CronJobDetailsPtrOutput) ToCronJobDetailsPtrOutput() CronJobDetailsPtrOutput {
	return o
}

func (o CronJobDetailsPtrOutput) ToCronJobDetailsPtrOutputWithContext(ctx context.Context) CronJobDetailsPtrOutput {
	return o
}

func (o CronJobDetailsPtrOutput) Elem() CronJobDetailsOutput {
	return o.ApplyT(func(v *CronJobDetails) CronJobDetails {
		if v != nil {
			return *v
		}
		var ret CronJobDetails
		return ret
	}).(CronJobDetailsOutput)
}

func (o CronJobDetailsPtrOutput) BuildPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildPlan
	}).(pulumi.StringPtrOutput)
}

// Environment (runtime)
func (o CronJobDetailsPtrOutput) Env() CronJobDetailsEnvPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *CronJobDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(CronJobDetailsEnvPtrOutput)
}

func (o CronJobDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *CronJobDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o CronJobDetailsPtrOutput) LastSuccessfulRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulRunAt
	}).(pulumi.StringPtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o CronJobDetailsPtrOutput) Plan() CronJobDetailsPlanPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *CronJobDetailsPlan {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(CronJobDetailsPlanPtrOutput)
}

func (o CronJobDetailsPtrOutput) Region() CronJobDetailsRegionPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *CronJobDetailsRegion {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(CronJobDetailsRegionPtrOutput)
}

func (o CronJobDetailsPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

type CustomDomainType struct {
	CreatedAt          string                         `pulumi:"createdAt"`
	DomainType         CustomDomainDomainType         `pulumi:"domainType"`
	Id                 string                         `pulumi:"id"`
	Name               string                         `pulumi:"name"`
	PublicSuffix       string                         `pulumi:"publicSuffix"`
	RedirectForName    string                         `pulumi:"redirectForName"`
	Server             *CustomDomainServerProperties  `pulumi:"server"`
	VerificationStatus CustomDomainVerificationStatus `pulumi:"verificationStatus"`
}

type CustomDomainTypeOutput struct{ *pulumi.OutputState }

func (CustomDomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainType)(nil)).Elem()
}

func (o CustomDomainTypeOutput) ToCustomDomainTypeOutput() CustomDomainTypeOutput {
	return o
}

func (o CustomDomainTypeOutput) ToCustomDomainTypeOutputWithContext(ctx context.Context) CustomDomainTypeOutput {
	return o
}

func (o CustomDomainTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o CustomDomainTypeOutput) DomainType() CustomDomainDomainTypeOutput {
	return o.ApplyT(func(v CustomDomainType) CustomDomainDomainType { return v.DomainType }).(CustomDomainDomainTypeOutput)
}

func (o CustomDomainTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.Id }).(pulumi.StringOutput)
}

func (o CustomDomainTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.Name }).(pulumi.StringOutput)
}

func (o CustomDomainTypeOutput) PublicSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.PublicSuffix }).(pulumi.StringOutput)
}

func (o CustomDomainTypeOutput) RedirectForName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.RedirectForName }).(pulumi.StringOutput)
}

func (o CustomDomainTypeOutput) Server() CustomDomainServerPropertiesPtrOutput {
	return o.ApplyT(func(v CustomDomainType) *CustomDomainServerProperties { return v.Server }).(CustomDomainServerPropertiesPtrOutput)
}

func (o CustomDomainTypeOutput) VerificationStatus() CustomDomainVerificationStatusOutput {
	return o.ApplyT(func(v CustomDomainType) CustomDomainVerificationStatus { return v.VerificationStatus }).(CustomDomainVerificationStatusOutput)
}

type CustomDomainTypePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainType)(nil)).Elem()
}

func (o CustomDomainTypePtrOutput) ToCustomDomainTypePtrOutput() CustomDomainTypePtrOutput {
	return o
}

func (o CustomDomainTypePtrOutput) ToCustomDomainTypePtrOutputWithContext(ctx context.Context) CustomDomainTypePtrOutput {
	return o
}

func (o CustomDomainTypePtrOutput) Elem() CustomDomainTypeOutput {
	return o.ApplyT(func(v *CustomDomainType) CustomDomainType {
		if v != nil {
			return *v
		}
		var ret CustomDomainType
		return ret
	}).(CustomDomainTypeOutput)
}

func (o CustomDomainTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainTypePtrOutput) DomainType() CustomDomainDomainTypePtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *CustomDomainDomainType {
		if v == nil {
			return nil
		}
		return &v.DomainType
	}).(CustomDomainDomainTypePtrOutput)
}

func (o CustomDomainTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainTypePtrOutput) PublicSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *string {
		if v == nil {
			return nil
		}
		return &v.PublicSuffix
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainTypePtrOutput) RedirectForName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectForName
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainTypePtrOutput) Server() CustomDomainServerPropertiesPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *CustomDomainServerProperties {
		if v == nil {
			return nil
		}
		return v.Server
	}).(CustomDomainServerPropertiesPtrOutput)
}

func (o CustomDomainTypePtrOutput) VerificationStatus() CustomDomainVerificationStatusPtrOutput {
	return o.ApplyT(func(v *CustomDomainType) *CustomDomainVerificationStatus {
		if v == nil {
			return nil
		}
		return &v.VerificationStatus
	}).(CustomDomainVerificationStatusPtrOutput)
}

type CustomDomainServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type CustomDomainServerPropertiesOutput struct{ *pulumi.OutputState }

func (CustomDomainServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainServerProperties)(nil)).Elem()
}

func (o CustomDomainServerPropertiesOutput) ToCustomDomainServerPropertiesOutput() CustomDomainServerPropertiesOutput {
	return o
}

func (o CustomDomainServerPropertiesOutput) ToCustomDomainServerPropertiesOutputWithContext(ctx context.Context) CustomDomainServerPropertiesOutput {
	return o
}

func (o CustomDomainServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CustomDomainServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CustomDomainServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainServerProperties)(nil)).Elem()
}

func (o CustomDomainServerPropertiesPtrOutput) ToCustomDomainServerPropertiesPtrOutput() CustomDomainServerPropertiesPtrOutput {
	return o
}

func (o CustomDomainServerPropertiesPtrOutput) ToCustomDomainServerPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainServerPropertiesPtrOutput {
	return o
}

func (o CustomDomainServerPropertiesPtrOutput) Elem() CustomDomainServerPropertiesOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) CustomDomainServerProperties {
		if v != nil {
			return *v
		}
		var ret CustomDomainServerProperties
		return ret
	}).(CustomDomainServerPropertiesOutput)
}

func (o CustomDomainServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CustomDomainServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type DeployType struct {
	Commit     *DeployCommitProperties `pulumi:"commit"`
	CreatedAt  *string                 `pulumi:"createdAt"`
	FinishedAt *string                 `pulumi:"finishedAt"`
	Id         string                  `pulumi:"id"`
	// Image information used when creating the deploy. Not present for Git-backed deploys
	Image     *DeployImageProperties `pulumi:"image"`
	Status    *DeployStatus          `pulumi:"status"`
	Trigger   *DeployTrigger         `pulumi:"trigger"`
	UpdatedAt *string                `pulumi:"updatedAt"`
}

type DeployTypeOutput struct{ *pulumi.OutputState }

func (DeployTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeployType)(nil)).Elem()
}

func (o DeployTypeOutput) ToDeployTypeOutput() DeployTypeOutput {
	return o
}

func (o DeployTypeOutput) ToDeployTypeOutputWithContext(ctx context.Context) DeployTypeOutput {
	return o
}

func (o DeployTypeOutput) Commit() DeployCommitPropertiesPtrOutput {
	return o.ApplyT(func(v DeployType) *DeployCommitProperties { return v.Commit }).(DeployCommitPropertiesPtrOutput)
}

func (o DeployTypeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployType) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o DeployTypeOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployType) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o DeployTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DeployType) string { return v.Id }).(pulumi.StringOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
func (o DeployTypeOutput) Image() DeployImagePropertiesPtrOutput {
	return o.ApplyT(func(v DeployType) *DeployImageProperties { return v.Image }).(DeployImagePropertiesPtrOutput)
}

func (o DeployTypeOutput) Status() DeployStatusPtrOutput {
	return o.ApplyT(func(v DeployType) *DeployStatus { return v.Status }).(DeployStatusPtrOutput)
}

func (o DeployTypeOutput) Trigger() DeployTriggerPtrOutput {
	return o.ApplyT(func(v DeployType) *DeployTrigger { return v.Trigger }).(DeployTriggerPtrOutput)
}

func (o DeployTypeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployType) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type DeployTypePtrOutput struct{ *pulumi.OutputState }

func (DeployTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployType)(nil)).Elem()
}

func (o DeployTypePtrOutput) ToDeployTypePtrOutput() DeployTypePtrOutput {
	return o
}

func (o DeployTypePtrOutput) ToDeployTypePtrOutputWithContext(ctx context.Context) DeployTypePtrOutput {
	return o
}

func (o DeployTypePtrOutput) Elem() DeployTypeOutput {
	return o.ApplyT(func(v *DeployType) DeployType {
		if v != nil {
			return *v
		}
		var ret DeployType
		return ret
	}).(DeployTypeOutput)
}

func (o DeployTypePtrOutput) Commit() DeployCommitPropertiesPtrOutput {
	return o.ApplyT(func(v *DeployType) *DeployCommitProperties {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(DeployCommitPropertiesPtrOutput)
}

func (o DeployTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployType) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o DeployTypePtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployType) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o DeployTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployType) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
func (o DeployTypePtrOutput) Image() DeployImagePropertiesPtrOutput {
	return o.ApplyT(func(v *DeployType) *DeployImageProperties {
		if v == nil {
			return nil
		}
		return v.Image
	}).(DeployImagePropertiesPtrOutput)
}

func (o DeployTypePtrOutput) Status() DeployStatusPtrOutput {
	return o.ApplyT(func(v *DeployType) *DeployStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DeployStatusPtrOutput)
}

func (o DeployTypePtrOutput) Trigger() DeployTriggerPtrOutput {
	return o.ApplyT(func(v *DeployType) *DeployTrigger {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(DeployTriggerPtrOutput)
}

func (o DeployTypePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployType) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type DeployCommitProperties struct {
	CreatedAt *string `pulumi:"createdAt"`
	Id        *string `pulumi:"id"`
	Message   *string `pulumi:"message"`
}

type DeployCommitPropertiesOutput struct{ *pulumi.OutputState }

func (DeployCommitPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeployCommitProperties)(nil)).Elem()
}

func (o DeployCommitPropertiesOutput) ToDeployCommitPropertiesOutput() DeployCommitPropertiesOutput {
	return o
}

func (o DeployCommitPropertiesOutput) ToDeployCommitPropertiesOutputWithContext(ctx context.Context) DeployCommitPropertiesOutput {
	return o
}

func (o DeployCommitPropertiesOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployCommitProperties) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o DeployCommitPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployCommitProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DeployCommitPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployCommitProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type DeployCommitPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeployCommitPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployCommitProperties)(nil)).Elem()
}

func (o DeployCommitPropertiesPtrOutput) ToDeployCommitPropertiesPtrOutput() DeployCommitPropertiesPtrOutput {
	return o
}

func (o DeployCommitPropertiesPtrOutput) ToDeployCommitPropertiesPtrOutputWithContext(ctx context.Context) DeployCommitPropertiesPtrOutput {
	return o
}

func (o DeployCommitPropertiesPtrOutput) Elem() DeployCommitPropertiesOutput {
	return o.ApplyT(func(v *DeployCommitProperties) DeployCommitProperties {
		if v != nil {
			return *v
		}
		var ret DeployCommitProperties
		return ret
	}).(DeployCommitPropertiesOutput)
}

func (o DeployCommitPropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployCommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o DeployCommitPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployCommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DeployCommitPropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployCommitProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
type DeployImageProperties struct {
	// Image reference used when creating the deploy
	Ref *string `pulumi:"ref"`
	// Name of credential used to pull the image, if provided
	RegistryCredential *string `pulumi:"registryCredential"`
	// SHA that the image reference was resolved to when creating the deploy
	Sha *string `pulumi:"sha"`
}

// Image information used when creating the deploy. Not present for Git-backed deploys
type DeployImagePropertiesOutput struct{ *pulumi.OutputState }

func (DeployImagePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeployImageProperties)(nil)).Elem()
}

func (o DeployImagePropertiesOutput) ToDeployImagePropertiesOutput() DeployImagePropertiesOutput {
	return o
}

func (o DeployImagePropertiesOutput) ToDeployImagePropertiesOutputWithContext(ctx context.Context) DeployImagePropertiesOutput {
	return o
}

// Image reference used when creating the deploy
func (o DeployImagePropertiesOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployImageProperties) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

// Name of credential used to pull the image, if provided
func (o DeployImagePropertiesOutput) RegistryCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployImageProperties) *string { return v.RegistryCredential }).(pulumi.StringPtrOutput)
}

// SHA that the image reference was resolved to when creating the deploy
func (o DeployImagePropertiesOutput) Sha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeployImageProperties) *string { return v.Sha }).(pulumi.StringPtrOutput)
}

type DeployImagePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeployImagePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployImageProperties)(nil)).Elem()
}

func (o DeployImagePropertiesPtrOutput) ToDeployImagePropertiesPtrOutput() DeployImagePropertiesPtrOutput {
	return o
}

func (o DeployImagePropertiesPtrOutput) ToDeployImagePropertiesPtrOutputWithContext(ctx context.Context) DeployImagePropertiesPtrOutput {
	return o
}

func (o DeployImagePropertiesPtrOutput) Elem() DeployImagePropertiesOutput {
	return o.ApplyT(func(v *DeployImageProperties) DeployImageProperties {
		if v != nil {
			return *v
		}
		var ret DeployImageProperties
		return ret
	}).(DeployImagePropertiesOutput)
}

// Image reference used when creating the deploy
func (o DeployImagePropertiesPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.Ref
	}).(pulumi.StringPtrOutput)
}

// Name of credential used to pull the image, if provided
func (o DeployImagePropertiesPtrOutput) RegistryCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(pulumi.StringPtrOutput)
}

// SHA that the image reference was resolved to when creating the deploy
func (o DeployImagePropertiesPtrOutput) Sha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.Sha
	}).(pulumi.StringPtrOutput)
}

type Disk struct {
	Id        string `pulumi:"id"`
	MountPath string `pulumi:"mountPath"`
	Name      string `pulumi:"name"`
	SizeGB    int    `pulumi:"sizeGB"`
}

type DiskOutput struct{ *pulumi.OutputState }

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

func (o DiskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Disk) string { return v.Id }).(pulumi.StringOutput)
}

func (o DiskOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v Disk) string { return v.MountPath }).(pulumi.StringOutput)
}

func (o DiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Disk) string { return v.Name }).(pulumi.StringOutput)
}

func (o DiskOutput) SizeGB() pulumi.IntOutput {
	return o.ApplyT(func(v Disk) int { return v.SizeGB }).(pulumi.IntOutput)
}

type DiskPtrOutput struct{ *pulumi.OutputState }

func (DiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Disk)(nil)).Elem()
}

func (o DiskPtrOutput) ToDiskPtrOutput() DiskPtrOutput {
	return o
}

func (o DiskPtrOutput) ToDiskPtrOutputWithContext(ctx context.Context) DiskPtrOutput {
	return o
}

func (o DiskPtrOutput) Elem() DiskOutput {
	return o.ApplyT(func(v *Disk) Disk {
		if v != nil {
			return *v
		}
		var ret Disk
		return ret
	}).(DiskOutput)
}

func (o DiskPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DiskPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

func (o DiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DiskPtrOutput) SizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Disk) *int {
		if v == nil {
			return nil
		}
		return &v.SizeGB
	}).(pulumi.IntPtrOutput)
}

type DockerDetails struct {
	DockerCommand      string              `pulumi:"dockerCommand"`
	DockerContext      string              `pulumi:"dockerContext"`
	DockerfilePath     string              `pulumi:"dockerfilePath"`
	PreDeployCommand   *string             `pulumi:"preDeployCommand"`
	RegistryCredential *RegistryCredential `pulumi:"registryCredential"`
}

type DockerDetailsOutput struct{ *pulumi.OutputState }

func (DockerDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerDetails)(nil)).Elem()
}

func (o DockerDetailsOutput) ToDockerDetailsOutput() DockerDetailsOutput {
	return o
}

func (o DockerDetailsOutput) ToDockerDetailsOutputWithContext(ctx context.Context) DockerDetailsOutput {
	return o
}

func (o DockerDetailsOutput) DockerCommand() pulumi.StringOutput {
	return o.ApplyT(func(v DockerDetails) string { return v.DockerCommand }).(pulumi.StringOutput)
}

func (o DockerDetailsOutput) DockerContext() pulumi.StringOutput {
	return o.ApplyT(func(v DockerDetails) string { return v.DockerContext }).(pulumi.StringOutput)
}

func (o DockerDetailsOutput) DockerfilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerDetails) string { return v.DockerfilePath }).(pulumi.StringOutput)
}

func (o DockerDetailsOutput) PreDeployCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerDetails) *string { return v.PreDeployCommand }).(pulumi.StringPtrOutput)
}

func (o DockerDetailsOutput) RegistryCredential() RegistryCredentialPtrOutput {
	return o.ApplyT(func(v DockerDetails) *RegistryCredential { return v.RegistryCredential }).(RegistryCredentialPtrOutput)
}

type DockerDetailsPtrOutput struct{ *pulumi.OutputState }

func (DockerDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerDetails)(nil)).Elem()
}

func (o DockerDetailsPtrOutput) ToDockerDetailsPtrOutput() DockerDetailsPtrOutput {
	return o
}

func (o DockerDetailsPtrOutput) ToDockerDetailsPtrOutputWithContext(ctx context.Context) DockerDetailsPtrOutput {
	return o
}

func (o DockerDetailsPtrOutput) Elem() DockerDetailsOutput {
	return o.ApplyT(func(v *DockerDetails) DockerDetails {
		if v != nil {
			return *v
		}
		var ret DockerDetails
		return ret
	}).(DockerDetailsOutput)
}

func (o DockerDetailsPtrOutput) DockerCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DockerCommand
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) DockerContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DockerContext
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DockerfilePath
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) PreDeployCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *string {
		if v == nil {
			return nil
		}
		return v.PreDeployCommand
	}).(pulumi.StringPtrOutput)
}

func (o DockerDetailsPtrOutput) RegistryCredential() RegistryCredentialPtrOutput {
	return o.ApplyT(func(v *DockerDetails) *RegistryCredential {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(RegistryCredentialPtrOutput)
}

type EnvVar struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type EnvVarOutput struct{ *pulumi.OutputState }

func (EnvVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVar)(nil)).Elem()
}

func (o EnvVarOutput) ToEnvVarOutput() EnvVarOutput {
	return o
}

func (o EnvVarOutput) ToEnvVarOutputWithContext(ctx context.Context) EnvVarOutput {
	return o
}

func (o EnvVarOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVar) string { return v.Key }).(pulumi.StringOutput)
}

func (o EnvVarOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVar) string { return v.Value }).(pulumi.StringOutput)
}

type EnvVarKeyGenerateValue struct {
	GenerateValue bool   `pulumi:"generateValue"`
	Key           string `pulumi:"key"`
}

// EnvVarKeyGenerateValueInput is an input type that accepts EnvVarKeyGenerateValueArgs and EnvVarKeyGenerateValueOutput values.
// You can construct a concrete instance of `EnvVarKeyGenerateValueInput` via:
//
//	EnvVarKeyGenerateValueArgs{...}
type EnvVarKeyGenerateValueInput interface {
	pulumi.Input

	ToEnvVarKeyGenerateValueOutput() EnvVarKeyGenerateValueOutput
	ToEnvVarKeyGenerateValueOutputWithContext(context.Context) EnvVarKeyGenerateValueOutput
}

type EnvVarKeyGenerateValueArgs struct {
	GenerateValue pulumi.BoolInput   `pulumi:"generateValue"`
	Key           pulumi.StringInput `pulumi:"key"`
}

func (EnvVarKeyGenerateValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyGenerateValue)(nil)).Elem()
}

func (i EnvVarKeyGenerateValueArgs) ToEnvVarKeyGenerateValueOutput() EnvVarKeyGenerateValueOutput {
	return i.ToEnvVarKeyGenerateValueOutputWithContext(context.Background())
}

func (i EnvVarKeyGenerateValueArgs) ToEnvVarKeyGenerateValueOutputWithContext(ctx context.Context) EnvVarKeyGenerateValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarKeyGenerateValueOutput)
}

type EnvVarKeyGenerateValueOutput struct{ *pulumi.OutputState }

func (EnvVarKeyGenerateValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyGenerateValue)(nil)).Elem()
}

func (o EnvVarKeyGenerateValueOutput) ToEnvVarKeyGenerateValueOutput() EnvVarKeyGenerateValueOutput {
	return o
}

func (o EnvVarKeyGenerateValueOutput) ToEnvVarKeyGenerateValueOutputWithContext(ctx context.Context) EnvVarKeyGenerateValueOutput {
	return o
}

func (o EnvVarKeyGenerateValueOutput) GenerateValue() pulumi.BoolOutput {
	return o.ApplyT(func(v EnvVarKeyGenerateValue) bool { return v.GenerateValue }).(pulumi.BoolOutput)
}

func (o EnvVarKeyGenerateValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVarKeyGenerateValue) string { return v.Key }).(pulumi.StringOutput)
}

type EnvVarKeyValue struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// EnvVarKeyValueInput is an input type that accepts EnvVarKeyValueArgs and EnvVarKeyValueOutput values.
// You can construct a concrete instance of `EnvVarKeyValueInput` via:
//
//	EnvVarKeyValueArgs{...}
type EnvVarKeyValueInput interface {
	pulumi.Input

	ToEnvVarKeyValueOutput() EnvVarKeyValueOutput
	ToEnvVarKeyValueOutputWithContext(context.Context) EnvVarKeyValueOutput
}

type EnvVarKeyValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvVarKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyValue)(nil)).Elem()
}

func (i EnvVarKeyValueArgs) ToEnvVarKeyValueOutput() EnvVarKeyValueOutput {
	return i.ToEnvVarKeyValueOutputWithContext(context.Background())
}

func (i EnvVarKeyValueArgs) ToEnvVarKeyValueOutputWithContext(ctx context.Context) EnvVarKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvVarKeyValueOutput)
}

type EnvVarKeyValueOutput struct{ *pulumi.OutputState }

func (EnvVarKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarKeyValue)(nil)).Elem()
}

func (o EnvVarKeyValueOutput) ToEnvVarKeyValueOutput() EnvVarKeyValueOutput {
	return o
}

func (o EnvVarKeyValueOutput) ToEnvVarKeyValueOutputWithContext(ctx context.Context) EnvVarKeyValueOutput {
	return o
}

func (o EnvVarKeyValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVarKeyValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o EnvVarKeyValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVarKeyValue) string { return v.Value }).(pulumi.StringOutput)
}

type EnvVarWithCursor struct {
	Cursor string `pulumi:"cursor"`
	EnvVar EnvVar `pulumi:"envVar"`
}

type EnvVarWithCursorOutput struct{ *pulumi.OutputState }

func (EnvVarWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvVarWithCursor)(nil)).Elem()
}

func (o EnvVarWithCursorOutput) ToEnvVarWithCursorOutput() EnvVarWithCursorOutput {
	return o
}

func (o EnvVarWithCursorOutput) ToEnvVarWithCursorOutputWithContext(ctx context.Context) EnvVarWithCursorOutput {
	return o
}

func (o EnvVarWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v EnvVarWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o EnvVarWithCursorOutput) EnvVar() EnvVarOutput {
	return o.ApplyT(func(v EnvVarWithCursor) EnvVar { return v.EnvVar }).(EnvVarOutput)
}

type EnvVarWithCursorArrayOutput struct{ *pulumi.OutputState }

func (EnvVarWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvVarWithCursor)(nil)).Elem()
}

func (o EnvVarWithCursorArrayOutput) ToEnvVarWithCursorArrayOutput() EnvVarWithCursorArrayOutput {
	return o
}

func (o EnvVarWithCursorArrayOutput) ToEnvVarWithCursorArrayOutputWithContext(ctx context.Context) EnvVarWithCursorArrayOutput {
	return o
}

func (o EnvVarWithCursorArrayOutput) Index(i pulumi.IntInput) EnvVarWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvVarWithCursor {
		return vs[0].([]EnvVarWithCursor)[vs[1].(int)]
	}).(EnvVarWithCursorOutput)
}

type Header struct {
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Path  string `pulumi:"path"`
	Value string `pulumi:"value"`
}

type HeaderOutput struct{ *pulumi.OutputState }

func (HeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Header)(nil)).Elem()
}

func (o HeaderOutput) ToHeaderOutput() HeaderOutput {
	return o
}

func (o HeaderOutput) ToHeaderOutputWithContext(ctx context.Context) HeaderOutput {
	return o
}

func (o HeaderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Header) string { return v.Id }).(pulumi.StringOutput)
}

func (o HeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Header) string { return v.Name }).(pulumi.StringOutput)
}

func (o HeaderOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v Header) string { return v.Path }).(pulumi.StringOutput)
}

func (o HeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v Header) string { return v.Value }).(pulumi.StringOutput)
}

type HeaderPtrOutput struct{ *pulumi.OutputState }

func (HeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Header)(nil)).Elem()
}

func (o HeaderPtrOutput) ToHeaderPtrOutput() HeaderPtrOutput {
	return o
}

func (o HeaderPtrOutput) ToHeaderPtrOutputWithContext(ctx context.Context) HeaderPtrOutput {
	return o
}

func (o HeaderPtrOutput) Elem() HeaderOutput {
	return o.ApplyT(func(v *Header) Header {
		if v != nil {
			return *v
		}
		var ret Header
		return ret
	}).(HeaderOutput)
}

func (o HeaderPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Header) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o HeaderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Header) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o HeaderPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Header) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o HeaderPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Header) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type HeaderCreate struct {
	// Header name
	Name string `pulumi:"name"`
	// The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.
	Path string `pulumi:"path"`
	// Header value
	Value string `pulumi:"value"`
}

type Image struct {
	// Path to the image used for this server (e.g docker.io/library/nginx:latest).
	ImagePath string `pulumi:"imagePath"`
	// The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential.
	OwnerId string `pulumi:"ownerId"`
	// Optional reference to the registry credential passed to the image repository to retrieve this image.
	RegistryCredentialId *string `pulumi:"registryCredentialId"`
}

// Image information used when creating the deploy. Not present for Git-backed deploys
type ImageProperties struct {
	// Image reference used when creating the deploy
	Ref *string `pulumi:"ref"`
	// Name of credential used to pull the image, if provided
	RegistryCredential *string `pulumi:"registryCredential"`
	// SHA that the image reference was resolved to when creating the deploy
	Sha *string `pulumi:"sha"`
}

// Image information used when creating the deploy. Not present for Git-backed deploys
type ImagePropertiesOutput struct{ *pulumi.OutputState }

func (ImagePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageProperties)(nil)).Elem()
}

func (o ImagePropertiesOutput) ToImagePropertiesOutput() ImagePropertiesOutput {
	return o
}

func (o ImagePropertiesOutput) ToImagePropertiesOutputWithContext(ctx context.Context) ImagePropertiesOutput {
	return o
}

// Image reference used when creating the deploy
func (o ImagePropertiesOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageProperties) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

// Name of credential used to pull the image, if provided
func (o ImagePropertiesOutput) RegistryCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageProperties) *string { return v.RegistryCredential }).(pulumi.StringPtrOutput)
}

// SHA that the image reference was resolved to when creating the deploy
func (o ImagePropertiesOutput) Sha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageProperties) *string { return v.Sha }).(pulumi.StringPtrOutput)
}

type ImagePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ImagePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageProperties)(nil)).Elem()
}

func (o ImagePropertiesPtrOutput) ToImagePropertiesPtrOutput() ImagePropertiesPtrOutput {
	return o
}

func (o ImagePropertiesPtrOutput) ToImagePropertiesPtrOutputWithContext(ctx context.Context) ImagePropertiesPtrOutput {
	return o
}

func (o ImagePropertiesPtrOutput) Elem() ImagePropertiesOutput {
	return o.ApplyT(func(v *ImageProperties) ImageProperties {
		if v != nil {
			return *v
		}
		var ret ImageProperties
		return ret
	}).(ImagePropertiesOutput)
}

// Image reference used when creating the deploy
func (o ImagePropertiesPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.Ref
	}).(pulumi.StringPtrOutput)
}

// Name of credential used to pull the image, if provided
func (o ImagePropertiesPtrOutput) RegistryCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(pulumi.StringPtrOutput)
}

// SHA that the image reference was resolved to when creating the deploy
func (o ImagePropertiesPtrOutput) Sha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.Sha
	}).(pulumi.StringPtrOutput)
}

type JobType struct {
	CreatedAt    string  `pulumi:"createdAt"`
	FinishedAt   *string `pulumi:"finishedAt"`
	Id           string  `pulumi:"id"`
	PlanId       string  `pulumi:"planId"`
	ServiceId    string  `pulumi:"serviceId"`
	StartCommand string  `pulumi:"startCommand"`
	StartedAt    *string `pulumi:"startedAt"`
	Status       *string `pulumi:"status"`
}

type JobTypeOutput struct{ *pulumi.OutputState }

func (JobTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobType)(nil)).Elem()
}

func (o JobTypeOutput) ToJobTypeOutput() JobTypeOutput {
	return o
}

func (o JobTypeOutput) ToJobTypeOutputWithContext(ctx context.Context) JobTypeOutput {
	return o
}

func (o JobTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v JobType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o JobTypeOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobType) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o JobTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v JobType) string { return v.Id }).(pulumi.StringOutput)
}

func (o JobTypeOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v JobType) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o JobTypeOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v JobType) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o JobTypeOutput) StartCommand() pulumi.StringOutput {
	return o.ApplyT(func(v JobType) string { return v.StartCommand }).(pulumi.StringOutput)
}

func (o JobTypeOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobType) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

func (o JobTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type JobTypePtrOutput struct{ *pulumi.OutputState }

func (JobTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobType)(nil)).Elem()
}

func (o JobTypePtrOutput) ToJobTypePtrOutput() JobTypePtrOutput {
	return o
}

func (o JobTypePtrOutput) ToJobTypePtrOutputWithContext(ctx context.Context) JobTypePtrOutput {
	return o
}

func (o JobTypePtrOutput) Elem() JobTypeOutput {
	return o.ApplyT(func(v *JobType) JobType {
		if v != nil {
			return *v
		}
		var ret JobType
		return ret
	}).(JobTypeOutput)
}

func (o JobTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return &v.PlanId
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return &v.StartCommand
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

func (o JobTypePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobType) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ListCustomDomainsItemProperties struct {
	Cursor       *string           `pulumi:"cursor"`
	CustomDomain *CustomDomainType `pulumi:"customDomain"`
}

type ListCustomDomainsItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListCustomDomainsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCustomDomainsItemProperties)(nil)).Elem()
}

func (o ListCustomDomainsItemPropertiesOutput) ToListCustomDomainsItemPropertiesOutput() ListCustomDomainsItemPropertiesOutput {
	return o
}

func (o ListCustomDomainsItemPropertiesOutput) ToListCustomDomainsItemPropertiesOutputWithContext(ctx context.Context) ListCustomDomainsItemPropertiesOutput {
	return o
}

func (o ListCustomDomainsItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListCustomDomainsItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListCustomDomainsItemPropertiesOutput) CustomDomain() CustomDomainTypePtrOutput {
	return o.ApplyT(func(v ListCustomDomainsItemProperties) *CustomDomainType { return v.CustomDomain }).(CustomDomainTypePtrOutput)
}

type ListCustomDomainsItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListCustomDomainsItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListCustomDomainsItemProperties)(nil)).Elem()
}

func (o ListCustomDomainsItemPropertiesArrayOutput) ToListCustomDomainsItemPropertiesArrayOutput() ListCustomDomainsItemPropertiesArrayOutput {
	return o
}

func (o ListCustomDomainsItemPropertiesArrayOutput) ToListCustomDomainsItemPropertiesArrayOutputWithContext(ctx context.Context) ListCustomDomainsItemPropertiesArrayOutput {
	return o
}

func (o ListCustomDomainsItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListCustomDomainsItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListCustomDomainsItemProperties {
		return vs[0].([]ListCustomDomainsItemProperties)[vs[1].(int)]
	}).(ListCustomDomainsItemPropertiesOutput)
}

type ListDeploysItemProperties struct {
	Cursor *string     `pulumi:"cursor"`
	Deploy *DeployType `pulumi:"deploy"`
}

type ListDeploysItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListDeploysItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDeploysItemProperties)(nil)).Elem()
}

func (o ListDeploysItemPropertiesOutput) ToListDeploysItemPropertiesOutput() ListDeploysItemPropertiesOutput {
	return o
}

func (o ListDeploysItemPropertiesOutput) ToListDeploysItemPropertiesOutputWithContext(ctx context.Context) ListDeploysItemPropertiesOutput {
	return o
}

func (o ListDeploysItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDeploysItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListDeploysItemPropertiesOutput) Deploy() DeployTypePtrOutput {
	return o.ApplyT(func(v ListDeploysItemProperties) *DeployType { return v.Deploy }).(DeployTypePtrOutput)
}

type ListDeploysItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListDeploysItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListDeploysItemProperties)(nil)).Elem()
}

func (o ListDeploysItemPropertiesArrayOutput) ToListDeploysItemPropertiesArrayOutput() ListDeploysItemPropertiesArrayOutput {
	return o
}

func (o ListDeploysItemPropertiesArrayOutput) ToListDeploysItemPropertiesArrayOutputWithContext(ctx context.Context) ListDeploysItemPropertiesArrayOutput {
	return o
}

func (o ListDeploysItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListDeploysItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListDeploysItemProperties {
		return vs[0].([]ListDeploysItemProperties)[vs[1].(int)]
	}).(ListDeploysItemPropertiesOutput)
}

type ListJobItemProperties struct {
	Cursor *string  `pulumi:"cursor"`
	Job    *JobType `pulumi:"job"`
}

type ListJobItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListJobItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListJobItemProperties)(nil)).Elem()
}

func (o ListJobItemPropertiesOutput) ToListJobItemPropertiesOutput() ListJobItemPropertiesOutput {
	return o
}

func (o ListJobItemPropertiesOutput) ToListJobItemPropertiesOutputWithContext(ctx context.Context) ListJobItemPropertiesOutput {
	return o
}

func (o ListJobItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListJobItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListJobItemPropertiesOutput) Job() JobTypePtrOutput {
	return o.ApplyT(func(v ListJobItemProperties) *JobType { return v.Job }).(JobTypePtrOutput)
}

type ListJobItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListJobItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListJobItemProperties)(nil)).Elem()
}

func (o ListJobItemPropertiesArrayOutput) ToListJobItemPropertiesArrayOutput() ListJobItemPropertiesArrayOutput {
	return o
}

func (o ListJobItemPropertiesArrayOutput) ToListJobItemPropertiesArrayOutputWithContext(ctx context.Context) ListJobItemPropertiesArrayOutput {
	return o
}

func (o ListJobItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListJobItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListJobItemProperties {
		return vs[0].([]ListJobItemProperties)[vs[1].(int)]
	}).(ListJobItemPropertiesOutput)
}

type ListRetrieveHeadersItemProperties struct {
	Cursor  *string `pulumi:"cursor"`
	Headers *Header `pulumi:"headers"`
}

type ListRetrieveHeadersItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListRetrieveHeadersItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRetrieveHeadersItemProperties)(nil)).Elem()
}

func (o ListRetrieveHeadersItemPropertiesOutput) ToListRetrieveHeadersItemPropertiesOutput() ListRetrieveHeadersItemPropertiesOutput {
	return o
}

func (o ListRetrieveHeadersItemPropertiesOutput) ToListRetrieveHeadersItemPropertiesOutputWithContext(ctx context.Context) ListRetrieveHeadersItemPropertiesOutput {
	return o
}

func (o ListRetrieveHeadersItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListRetrieveHeadersItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListRetrieveHeadersItemPropertiesOutput) Headers() HeaderPtrOutput {
	return o.ApplyT(func(v ListRetrieveHeadersItemProperties) *Header { return v.Headers }).(HeaderPtrOutput)
}

type ListRetrieveHeadersItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListRetrieveHeadersItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListRetrieveHeadersItemProperties)(nil)).Elem()
}

func (o ListRetrieveHeadersItemPropertiesArrayOutput) ToListRetrieveHeadersItemPropertiesArrayOutput() ListRetrieveHeadersItemPropertiesArrayOutput {
	return o
}

func (o ListRetrieveHeadersItemPropertiesArrayOutput) ToListRetrieveHeadersItemPropertiesArrayOutputWithContext(ctx context.Context) ListRetrieveHeadersItemPropertiesArrayOutput {
	return o
}

func (o ListRetrieveHeadersItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListRetrieveHeadersItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListRetrieveHeadersItemProperties {
		return vs[0].([]ListRetrieveHeadersItemProperties)[vs[1].(int)]
	}).(ListRetrieveHeadersItemPropertiesOutput)
}

type ListRetrieveRoutesItemProperties struct {
	Cursor *string `pulumi:"cursor"`
	Routes *Route  `pulumi:"routes"`
}

type ListRetrieveRoutesItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListRetrieveRoutesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRetrieveRoutesItemProperties)(nil)).Elem()
}

func (o ListRetrieveRoutesItemPropertiesOutput) ToListRetrieveRoutesItemPropertiesOutput() ListRetrieveRoutesItemPropertiesOutput {
	return o
}

func (o ListRetrieveRoutesItemPropertiesOutput) ToListRetrieveRoutesItemPropertiesOutputWithContext(ctx context.Context) ListRetrieveRoutesItemPropertiesOutput {
	return o
}

func (o ListRetrieveRoutesItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListRetrieveRoutesItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListRetrieveRoutesItemPropertiesOutput) Routes() RoutePtrOutput {
	return o.ApplyT(func(v ListRetrieveRoutesItemProperties) *Route { return v.Routes }).(RoutePtrOutput)
}

type ListRetrieveRoutesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListRetrieveRoutesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListRetrieveRoutesItemProperties)(nil)).Elem()
}

func (o ListRetrieveRoutesItemPropertiesArrayOutput) ToListRetrieveRoutesItemPropertiesArrayOutput() ListRetrieveRoutesItemPropertiesArrayOutput {
	return o
}

func (o ListRetrieveRoutesItemPropertiesArrayOutput) ToListRetrieveRoutesItemPropertiesArrayOutputWithContext(ctx context.Context) ListRetrieveRoutesItemPropertiesArrayOutput {
	return o
}

func (o ListRetrieveRoutesItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListRetrieveRoutesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListRetrieveRoutesItemProperties {
		return vs[0].([]ListRetrieveRoutesItemProperties)[vs[1].(int)]
	}).(ListRetrieveRoutesItemPropertiesOutput)
}

type ListServicesItemProperties struct {
	Cursor  *string  `pulumi:"cursor"`
	Service *Service `pulumi:"service"`
}

type ListServicesItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListServicesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServicesItemProperties)(nil)).Elem()
}

func (o ListServicesItemPropertiesOutput) ToListServicesItemPropertiesOutput() ListServicesItemPropertiesOutput {
	return o
}

func (o ListServicesItemPropertiesOutput) ToListServicesItemPropertiesOutputWithContext(ctx context.Context) ListServicesItemPropertiesOutput {
	return o
}

func (o ListServicesItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListServicesItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListServicesItemPropertiesOutput) Service() ServicePtrOutput {
	return o.ApplyT(func(v ListServicesItemProperties) *Service { return v.Service }).(ServicePtrOutput)
}

type ListServicesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListServicesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListServicesItemProperties)(nil)).Elem()
}

func (o ListServicesItemPropertiesArrayOutput) ToListServicesItemPropertiesArrayOutput() ListServicesItemPropertiesArrayOutput {
	return o
}

func (o ListServicesItemPropertiesArrayOutput) ToListServicesItemPropertiesArrayOutputWithContext(ctx context.Context) ListServicesItemPropertiesArrayOutput {
	return o
}

func (o ListServicesItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListServicesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListServicesItemProperties {
		return vs[0].([]ListServicesItemProperties)[vs[1].(int)]
	}).(ListServicesItemPropertiesOutput)
}

type NativeEnvironmentDetails struct {
	BuildCommand     string  `pulumi:"buildCommand"`
	PreDeployCommand *string `pulumi:"preDeployCommand"`
	StartCommand     string  `pulumi:"startCommand"`
}

type NativeEnvironmentDetailsOutput struct{ *pulumi.OutputState }

func (NativeEnvironmentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeEnvironmentDetails)(nil)).Elem()
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsOutput() NativeEnvironmentDetailsOutput {
	return o
}

func (o NativeEnvironmentDetailsOutput) ToNativeEnvironmentDetailsOutputWithContext(ctx context.Context) NativeEnvironmentDetailsOutput {
	return o
}

func (o NativeEnvironmentDetailsOutput) BuildCommand() pulumi.StringOutput {
	return o.ApplyT(func(v NativeEnvironmentDetails) string { return v.BuildCommand }).(pulumi.StringOutput)
}

func (o NativeEnvironmentDetailsOutput) PreDeployCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NativeEnvironmentDetails) *string { return v.PreDeployCommand }).(pulumi.StringPtrOutput)
}

func (o NativeEnvironmentDetailsOutput) StartCommand() pulumi.StringOutput {
	return o.ApplyT(func(v NativeEnvironmentDetails) string { return v.StartCommand }).(pulumi.StringOutput)
}

type NativeEnvironmentDetailsPtrOutput struct{ *pulumi.OutputState }

func (NativeEnvironmentDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NativeEnvironmentDetails)(nil)).Elem()
}

func (o NativeEnvironmentDetailsPtrOutput) ToNativeEnvironmentDetailsPtrOutput() NativeEnvironmentDetailsPtrOutput {
	return o
}

func (o NativeEnvironmentDetailsPtrOutput) ToNativeEnvironmentDetailsPtrOutputWithContext(ctx context.Context) NativeEnvironmentDetailsPtrOutput {
	return o
}

func (o NativeEnvironmentDetailsPtrOutput) Elem() NativeEnvironmentDetailsOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) NativeEnvironmentDetails {
		if v != nil {
			return *v
		}
		var ret NativeEnvironmentDetails
		return ret
	}).(NativeEnvironmentDetailsOutput)
}

func (o NativeEnvironmentDetailsPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

func (o NativeEnvironmentDetailsPtrOutput) PreDeployCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) *string {
		if v == nil {
			return nil
		}
		return v.PreDeployCommand
	}).(pulumi.StringPtrOutput)
}

func (o NativeEnvironmentDetailsPtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NativeEnvironmentDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartCommand
	}).(pulumi.StringPtrOutput)
}

type PrivateServiceDetails struct {
	Autoscaling *AutoscalingConfig `pulumi:"autoscaling"`
	BuildPlan   string             `pulumi:"buildPlan"`
	Disk        *Disk              `pulumi:"disk"`
	// Environment (runtime)
	Env                PrivateServiceDetailsEnv `pulumi:"env"`
	EnvSpecificDetails interface{}              `pulumi:"envSpecificDetails"`
	// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `pulumi:"numInstances"`
	OpenPorts    []ServerPort `pulumi:"openPorts"`
	ParentServer *Resource    `pulumi:"parentServer"`
	// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       PrivateServiceDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled PrivateServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     PrivateServiceDetailsRegion                     `pulumi:"region"`
	Url                        string                                          `pulumi:"url"`
}

// Defaults sets the appropriate defaults for PrivateServiceDetails
func (val *PrivateServiceDetails) Defaults() *PrivateServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Autoscaling = tmp.Autoscaling.Defaults()

	return &tmp
}

type PrivateServiceDetailsOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateServiceDetails)(nil)).Elem()
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsOutput() PrivateServiceDetailsOutput {
	return o
}

func (o PrivateServiceDetailsOutput) ToPrivateServiceDetailsOutputWithContext(ctx context.Context) PrivateServiceDetailsOutput {
	return o
}

func (o PrivateServiceDetailsOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *AutoscalingConfig { return v.Autoscaling }).(AutoscalingConfigPtrOutput)
}

func (o PrivateServiceDetailsOutput) BuildPlan() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateServiceDetails) string { return v.BuildPlan }).(pulumi.StringOutput)
}

func (o PrivateServiceDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

// Environment (runtime)
func (o PrivateServiceDetailsOutput) Env() PrivateServiceDetailsEnvOutput {
	return o.ApplyT(func(v PrivateServiceDetails) PrivateServiceDetailsEnv { return v.Env }).(PrivateServiceDetailsEnvOutput)
}

func (o PrivateServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PrivateServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o PrivateServiceDetailsOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v PrivateServiceDetails) int { return v.NumInstances }).(pulumi.IntOutput)
}

func (o PrivateServiceDetailsOutput) OpenPorts() ServerPortArrayOutput {
	return o.ApplyT(func(v PrivateServiceDetails) []ServerPort { return v.OpenPorts }).(ServerPortArrayOutput)
}

func (o PrivateServiceDetailsOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v PrivateServiceDetails) *Resource { return v.ParentServer }).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o PrivateServiceDetailsOutput) Plan() PrivateServiceDetailsPlanOutput {
	return o.ApplyT(func(v PrivateServiceDetails) PrivateServiceDetailsPlan { return v.Plan }).(PrivateServiceDetailsPlanOutput)
}

func (o PrivateServiceDetailsOutput) PullRequestPreviewsEnabled() PrivateServiceDetailsPullRequestPreviewsEnabledOutput {
	return o.ApplyT(func(v PrivateServiceDetails) PrivateServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(PrivateServiceDetailsPullRequestPreviewsEnabledOutput)
}

func (o PrivateServiceDetailsOutput) Region() PrivateServiceDetailsRegionOutput {
	return o.ApplyT(func(v PrivateServiceDetails) PrivateServiceDetailsRegion { return v.Region }).(PrivateServiceDetailsRegionOutput)
}

func (o PrivateServiceDetailsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateServiceDetails) string { return v.Url }).(pulumi.StringOutput)
}

type PrivateServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (PrivateServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateServiceDetails)(nil)).Elem()
}

func (o PrivateServiceDetailsPtrOutput) ToPrivateServiceDetailsPtrOutput() PrivateServiceDetailsPtrOutput {
	return o
}

func (o PrivateServiceDetailsPtrOutput) ToPrivateServiceDetailsPtrOutputWithContext(ctx context.Context) PrivateServiceDetailsPtrOutput {
	return o
}

func (o PrivateServiceDetailsPtrOutput) Elem() PrivateServiceDetailsOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) PrivateServiceDetails {
		if v != nil {
			return *v
		}
		var ret PrivateServiceDetails
		return ret
	}).(PrivateServiceDetailsOutput)
}

func (o PrivateServiceDetailsPtrOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *AutoscalingConfig {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(AutoscalingConfigPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) BuildPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildPlan
	}).(pulumi.StringPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

// Environment (runtime)
func (o PrivateServiceDetailsPtrOutput) Env() PrivateServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(PrivateServiceDetailsEnvPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o PrivateServiceDetailsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) OpenPorts() ServerPortArrayOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) []ServerPort {
		if v == nil {
			return nil
		}
		return v.OpenPorts
	}).(ServerPortArrayOutput)
}

func (o PrivateServiceDetailsPtrOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *Resource {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o PrivateServiceDetailsPtrOutput) Plan() PrivateServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(PrivateServiceDetailsPlanPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) PullRequestPreviewsEnabled() PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return &v.PullRequestPreviewsEnabled
	}).(PrivateServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Region() PrivateServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *PrivateServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(PrivateServiceDetailsRegionPtrOutput)
}

func (o PrivateServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type PrivateServicePropertiesDiskProperties struct {
	MountPath string `pulumi:"mountPath"`
	Name      string `pulumi:"name"`
	// Defaults to 1
	SizeGB *int `pulumi:"sizeGB"`
}

type RegistryCredential struct {
	// Unique identifier for this credential
	Id string `pulumi:"id"`
	// Descriptive name for this credential
	Name string `pulumi:"name"`
	// The registry to use this credential with
	Registry RegistryCredentialRegistry `pulumi:"registry"`
	// The username associated with the credential
	Username string `pulumi:"username"`
}

type RegistryCredentialOutput struct{ *pulumi.OutputState }

func (RegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutput() RegistryCredentialOutput {
	return o
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutputWithContext(ctx context.Context) RegistryCredentialOutput {
	return o
}

// Unique identifier for this credential
func (o RegistryCredentialOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryCredential) string { return v.Id }).(pulumi.StringOutput)
}

// Descriptive name for this credential
func (o RegistryCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryCredential) string { return v.Name }).(pulumi.StringOutput)
}

// The registry to use this credential with
func (o RegistryCredentialOutput) Registry() RegistryCredentialRegistryOutput {
	return o.ApplyT(func(v RegistryCredential) RegistryCredentialRegistry { return v.Registry }).(RegistryCredentialRegistryOutput)
}

// The username associated with the credential
func (o RegistryCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryCredential) string { return v.Username }).(pulumi.StringOutput)
}

type RegistryCredentialPtrOutput struct{ *pulumi.OutputState }

func (RegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialPtrOutput) ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput {
	return o
}

func (o RegistryCredentialPtrOutput) ToRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryCredentialPtrOutput {
	return o
}

func (o RegistryCredentialPtrOutput) Elem() RegistryCredentialOutput {
	return o.ApplyT(func(v *RegistryCredential) RegistryCredential {
		if v != nil {
			return *v
		}
		var ret RegistryCredential
		return ret
	}).(RegistryCredentialOutput)
}

// Unique identifier for this credential
func (o RegistryCredentialPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Descriptive name for this credential
func (o RegistryCredentialPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The registry to use this credential with
func (o RegistryCredentialPtrOutput) Registry() RegistryCredentialRegistryPtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *RegistryCredentialRegistry {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(RegistryCredentialRegistryPtrOutput)
}

// The username associated with the credential
func (o RegistryCredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type Resource struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

type ResourceOutput struct{ *pulumi.OutputState }

func (ResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Resource)(nil)).Elem()
}

func (o ResourceOutput) ToResourceOutput() ResourceOutput {
	return o
}

func (o ResourceOutput) ToResourceOutputWithContext(ctx context.Context) ResourceOutput {
	return o
}

func (o ResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Resource) string { return v.Id }).(pulumi.StringOutput)
}

func (o ResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Resource) string { return v.Name }).(pulumi.StringOutput)
}

type ResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Resource)(nil)).Elem()
}

func (o ResourcePtrOutput) ToResourcePtrOutput() ResourcePtrOutput {
	return o
}

func (o ResourcePtrOutput) ToResourcePtrOutputWithContext(ctx context.Context) ResourcePtrOutput {
	return o
}

func (o ResourcePtrOutput) Elem() ResourceOutput {
	return o.ApplyT(func(v *Resource) Resource {
		if v != nil {
			return *v
		}
		var ret Resource
		return ret
	}).(ResourceOutput)
}

func (o ResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Resource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Resource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type Route struct {
	Destination string `pulumi:"destination"`
	Id          string `pulumi:"id"`
	// Redirect and Rewrite Rules are applied in priority order starting at 0
	Priority int                 `pulumi:"priority"`
	Source   string              `pulumi:"source"`
	Type     StaticSiteRouteType `pulumi:"type"`
}

type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

func (o RouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Destination }).(pulumi.StringOutput)
}

func (o RouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Id }).(pulumi.StringOutput)
}

// Redirect and Rewrite Rules are applied in priority order starting at 0
func (o RouteOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v Route) int { return v.Priority }).(pulumi.IntOutput)
}

func (o RouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Source }).(pulumi.StringOutput)
}

func (o RouteOutput) Type() StaticSiteRouteTypeOutput {
	return o.ApplyT(func(v Route) StaticSiteRouteType { return v.Type }).(StaticSiteRouteTypeOutput)
}

type RoutePtrOutput struct{ *pulumi.OutputState }

func (RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (o RoutePtrOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) Elem() RouteOutput {
	return o.ApplyT(func(v *Route) Route {
		if v != nil {
			return *v
		}
		var ret Route
		return ret
	}).(RouteOutput)
}

func (o RoutePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o RoutePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Redirect and Rewrite Rules are applied in priority order starting at 0
func (o RoutePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Route) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o RoutePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

func (o RoutePtrOutput) Type() StaticSiteRouteTypePtrOutput {
	return o.ApplyT(func(v *Route) *StaticSiteRouteType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(StaticSiteRouteTypePtrOutput)
}

type SecretFile struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

type ServerPort struct {
	Port     int                `pulumi:"port"`
	Protocol ServerPortProtocol `pulumi:"protocol"`
}

type ServerPortOutput struct{ *pulumi.OutputState }

func (ServerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPort)(nil)).Elem()
}

func (o ServerPortOutput) ToServerPortOutput() ServerPortOutput {
	return o
}

func (o ServerPortOutput) ToServerPortOutputWithContext(ctx context.Context) ServerPortOutput {
	return o
}

func (o ServerPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerPort) int { return v.Port }).(pulumi.IntOutput)
}

func (o ServerPortOutput) Protocol() ServerPortProtocolOutput {
	return o.ApplyT(func(v ServerPort) ServerPortProtocol { return v.Protocol }).(ServerPortProtocolOutput)
}

type ServerPortArrayOutput struct{ *pulumi.OutputState }

func (ServerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPort)(nil)).Elem()
}

func (o ServerPortArrayOutput) ToServerPortArrayOutput() ServerPortArrayOutput {
	return o
}

func (o ServerPortArrayOutput) ToServerPortArrayOutputWithContext(ctx context.Context) ServerPortArrayOutput {
	return o
}

func (o ServerPortArrayOutput) Index(i pulumi.IntInput) ServerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPort {
		return vs[0].([]ServerPort)[vs[1].(int)]
	}).(ServerPortOutput)
}

type Service struct {
	AutoDeploy     ServiceAutoDeploy       `pulumi:"autoDeploy"`
	Branch         *string                 `pulumi:"branch"`
	BuildFilter    *BuildFilter            `pulumi:"buildFilter"`
	CreatedAt      string                  `pulumi:"createdAt"`
	Id             string                  `pulumi:"id"`
	ImagePath      *string                 `pulumi:"imagePath"`
	Name           string                  `pulumi:"name"`
	NotifyOnFail   ServiceNotifyOnFail     `pulumi:"notifyOnFail"`
	OwnerId        string                  `pulumi:"ownerId"`
	Repo           *string                 `pulumi:"repo"`
	RootDir        string                  `pulumi:"rootDir"`
	ServiceDetails interface{}             `pulumi:"serviceDetails"`
	Slug           string                  `pulumi:"slug"`
	Suspended      ServiceSuspended        `pulumi:"suspended"`
	Suspenders     []ServiceSuspendersItem `pulumi:"suspenders"`
	Type           ServiceType             `pulumi:"type"`
	UpdatedAt      string                  `pulumi:"updatedAt"`
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) AutoDeploy() ServiceAutoDeployOutput {
	return o.ApplyT(func(v Service) ServiceAutoDeploy { return v.AutoDeploy }).(ServiceAutoDeployOutput)
}

func (o ServiceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Service) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v Service) *BuildFilter { return v.BuildFilter }).(BuildFilterPtrOutput)
}

func (o ServiceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Service) *string { return v.ImagePath }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceOutput) NotifyOnFail() ServiceNotifyOnFailOutput {
	return o.ApplyT(func(v Service) ServiceNotifyOnFail { return v.NotifyOnFail }).(ServiceNotifyOnFailOutput)
}

func (o ServiceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o ServiceOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Service) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) RootDir() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.RootDir }).(pulumi.StringOutput)
}

func (o ServiceOutput) ServiceDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v Service) interface{} { return v.ServiceDetails }).(pulumi.AnyOutput)
}

func (o ServiceOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.Slug }).(pulumi.StringOutput)
}

func (o ServiceOutput) Suspended() ServiceSuspendedOutput {
	return o.ApplyT(func(v Service) ServiceSuspended { return v.Suspended }).(ServiceSuspendedOutput)
}

func (o ServiceOutput) Suspenders() ServiceSuspendersItemArrayOutput {
	return o.ApplyT(func(v Service) []ServiceSuspendersItem { return v.Suspenders }).(ServiceSuspendersItemArrayOutput)
}

func (o ServiceOutput) Type() ServiceTypeOutput {
	return o.ApplyT(func(v Service) ServiceType { return v.Type }).(ServiceTypeOutput)
}

func (o ServiceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Service) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ServicePtrOutput struct{ *pulumi.OutputState }

func (ServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServicePtrOutput) ToServicePtrOutput() ServicePtrOutput {
	return o
}

func (o ServicePtrOutput) ToServicePtrOutputWithContext(ctx context.Context) ServicePtrOutput {
	return o
}

func (o ServicePtrOutput) Elem() ServiceOutput {
	return o.ApplyT(func(v *Service) Service {
		if v != nil {
			return *v
		}
		var ret Service
		return ret
	}).(ServiceOutput)
}

func (o ServicePtrOutput) AutoDeploy() ServiceAutoDeployPtrOutput {
	return o.ApplyT(func(v *Service) *ServiceAutoDeploy {
		if v == nil {
			return nil
		}
		return &v.AutoDeploy
	}).(ServiceAutoDeployPtrOutput)
}

func (o ServicePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v *Service) *BuildFilter {
		if v == nil {
			return nil
		}
		return v.BuildFilter
	}).(BuildFilterPtrOutput)
}

func (o ServicePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return v.ImagePath
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) NotifyOnFail() ServiceNotifyOnFailPtrOutput {
	return o.ApplyT(func(v *Service) *ServiceNotifyOnFail {
		if v == nil {
			return nil
		}
		return &v.NotifyOnFail
	}).(ServiceNotifyOnFailPtrOutput)
}

func (o ServicePtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) RootDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.RootDir
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) ServiceDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *Service) interface{} {
		if v == nil {
			return nil
		}
		return v.ServiceDetails
	}).(pulumi.AnyOutput)
}

func (o ServicePtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o ServicePtrOutput) Suspended() ServiceSuspendedPtrOutput {
	return o.ApplyT(func(v *Service) *ServiceSuspended {
		if v == nil {
			return nil
		}
		return &v.Suspended
	}).(ServiceSuspendedPtrOutput)
}

func (o ServicePtrOutput) Suspenders() ServiceSuspendersItemArrayOutput {
	return o.ApplyT(func(v *Service) []ServiceSuspendersItem {
		if v == nil {
			return nil
		}
		return v.Suspenders
	}).(ServiceSuspendersItemArrayOutput)
}

func (o ServicePtrOutput) Type() ServiceTypePtrOutput {
	return o.ApplyT(func(v *Service) *ServiceType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ServiceTypePtrOutput)
}

func (o ServicePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type StaticSiteDetails struct {
	BuildCommand               string                                      `pulumi:"buildCommand"`
	BuildPlan                  string                                      `pulumi:"buildPlan"`
	ParentServer               *Resource                                   `pulumi:"parentServer"`
	PublishPath                string                                      `pulumi:"publishPath"`
	PullRequestPreviewsEnabled StaticSiteDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Url                        string                                      `pulumi:"url"`
}

type StaticSiteDetailsOutput struct{ *pulumi.OutputState }

func (StaticSiteDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteDetails)(nil)).Elem()
}

func (o StaticSiteDetailsOutput) ToStaticSiteDetailsOutput() StaticSiteDetailsOutput {
	return o
}

func (o StaticSiteDetailsOutput) ToStaticSiteDetailsOutputWithContext(ctx context.Context) StaticSiteDetailsOutput {
	return o
}

func (o StaticSiteDetailsOutput) BuildCommand() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteDetails) string { return v.BuildCommand }).(pulumi.StringOutput)
}

func (o StaticSiteDetailsOutput) BuildPlan() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteDetails) string { return v.BuildPlan }).(pulumi.StringOutput)
}

func (o StaticSiteDetailsOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v StaticSiteDetails) *Resource { return v.ParentServer }).(ResourcePtrOutput)
}

func (o StaticSiteDetailsOutput) PublishPath() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteDetails) string { return v.PublishPath }).(pulumi.StringOutput)
}

func (o StaticSiteDetailsOutput) PullRequestPreviewsEnabled() StaticSiteDetailsPullRequestPreviewsEnabledOutput {
	return o.ApplyT(func(v StaticSiteDetails) StaticSiteDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(StaticSiteDetailsPullRequestPreviewsEnabledOutput)
}

func (o StaticSiteDetailsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteDetails) string { return v.Url }).(pulumi.StringOutput)
}

type StaticSiteDetailsPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteDetails)(nil)).Elem()
}

func (o StaticSiteDetailsPtrOutput) ToStaticSiteDetailsPtrOutput() StaticSiteDetailsPtrOutput {
	return o
}

func (o StaticSiteDetailsPtrOutput) ToStaticSiteDetailsPtrOutputWithContext(ctx context.Context) StaticSiteDetailsPtrOutput {
	return o
}

func (o StaticSiteDetailsPtrOutput) Elem() StaticSiteDetailsOutput {
	return o.ApplyT(func(v *StaticSiteDetails) StaticSiteDetails {
		if v != nil {
			return *v
		}
		var ret StaticSiteDetails
		return ret
	}).(StaticSiteDetailsOutput)
}

func (o StaticSiteDetailsPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteDetailsPtrOutput) BuildPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildPlan
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteDetailsPtrOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *Resource {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(ResourcePtrOutput)
}

func (o StaticSiteDetailsPtrOutput) PublishPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PublishPath
	}).(pulumi.StringPtrOutput)
}

func (o StaticSiteDetailsPtrOutput) PullRequestPreviewsEnabled() StaticSiteDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *StaticSiteDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return &v.PullRequestPreviewsEnabled
	}).(StaticSiteDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o StaticSiteDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type WebServiceDetails struct {
	Autoscaling *AutoscalingConfig `pulumi:"autoscaling"`
	BuildPlan   string             `pulumi:"buildPlan"`
	Disk        *Disk              `pulumi:"disk"`
	// Environment (runtime)
	Env                WebServiceDetailsEnv `pulumi:"env"`
	EnvSpecificDetails interface{}          `pulumi:"envSpecificDetails"`
	HealthCheckPath    string               `pulumi:"healthCheckPath"`
	// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `pulumi:"numInstances"`
	OpenPorts    []ServerPort `pulumi:"openPorts"`
	ParentServer *Resource    `pulumi:"parentServer"`
	// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       WebServiceDetailsPlan                       `pulumi:"plan"`
	PullRequestPreviewsEnabled WebServiceDetailsPullRequestPreviewsEnabled `pulumi:"pullRequestPreviewsEnabled"`
	Region                     WebServiceDetailsRegion                     `pulumi:"region"`
	Url                        string                                      `pulumi:"url"`
}

// Defaults sets the appropriate defaults for WebServiceDetails
func (val *WebServiceDetails) Defaults() *WebServiceDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Autoscaling = tmp.Autoscaling.Defaults()

	return &tmp
}

type WebServiceDetailsOutput struct{ *pulumi.OutputState }

func (WebServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceDetails)(nil)).Elem()
}

func (o WebServiceDetailsOutput) ToWebServiceDetailsOutput() WebServiceDetailsOutput {
	return o
}

func (o WebServiceDetailsOutput) ToWebServiceDetailsOutputWithContext(ctx context.Context) WebServiceDetailsOutput {
	return o
}

func (o WebServiceDetailsOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v WebServiceDetails) *AutoscalingConfig { return v.Autoscaling }).(AutoscalingConfigPtrOutput)
}

func (o WebServiceDetailsOutput) BuildPlan() pulumi.StringOutput {
	return o.ApplyT(func(v WebServiceDetails) string { return v.BuildPlan }).(pulumi.StringOutput)
}

func (o WebServiceDetailsOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v WebServiceDetails) *Disk { return v.Disk }).(DiskPtrOutput)
}

// Environment (runtime)
func (o WebServiceDetailsOutput) Env() WebServiceDetailsEnvOutput {
	return o.ApplyT(func(v WebServiceDetails) WebServiceDetailsEnv { return v.Env }).(WebServiceDetailsEnvOutput)
}

func (o WebServiceDetailsOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v WebServiceDetails) interface{} { return v.EnvSpecificDetails }).(pulumi.AnyOutput)
}

func (o WebServiceDetailsOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebServiceDetails) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o WebServiceDetailsOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v WebServiceDetails) int { return v.NumInstances }).(pulumi.IntOutput)
}

func (o WebServiceDetailsOutput) OpenPorts() ServerPortArrayOutput {
	return o.ApplyT(func(v WebServiceDetails) []ServerPort { return v.OpenPorts }).(ServerPortArrayOutput)
}

func (o WebServiceDetailsOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v WebServiceDetails) *Resource { return v.ParentServer }).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o WebServiceDetailsOutput) Plan() WebServiceDetailsPlanOutput {
	return o.ApplyT(func(v WebServiceDetails) WebServiceDetailsPlan { return v.Plan }).(WebServiceDetailsPlanOutput)
}

func (o WebServiceDetailsOutput) PullRequestPreviewsEnabled() WebServiceDetailsPullRequestPreviewsEnabledOutput {
	return o.ApplyT(func(v WebServiceDetails) WebServiceDetailsPullRequestPreviewsEnabled {
		return v.PullRequestPreviewsEnabled
	}).(WebServiceDetailsPullRequestPreviewsEnabledOutput)
}

func (o WebServiceDetailsOutput) Region() WebServiceDetailsRegionOutput {
	return o.ApplyT(func(v WebServiceDetails) WebServiceDetailsRegion { return v.Region }).(WebServiceDetailsRegionOutput)
}

func (o WebServiceDetailsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WebServiceDetails) string { return v.Url }).(pulumi.StringOutput)
}

type WebServiceDetailsPtrOutput struct{ *pulumi.OutputState }

func (WebServiceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceDetails)(nil)).Elem()
}

func (o WebServiceDetailsPtrOutput) ToWebServiceDetailsPtrOutput() WebServiceDetailsPtrOutput {
	return o
}

func (o WebServiceDetailsPtrOutput) ToWebServiceDetailsPtrOutputWithContext(ctx context.Context) WebServiceDetailsPtrOutput {
	return o
}

func (o WebServiceDetailsPtrOutput) Elem() WebServiceDetailsOutput {
	return o.ApplyT(func(v *WebServiceDetails) WebServiceDetails {
		if v != nil {
			return *v
		}
		var ret WebServiceDetails
		return ret
	}).(WebServiceDetailsOutput)
}

func (o WebServiceDetailsPtrOutput) Autoscaling() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *AutoscalingConfig {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(AutoscalingConfigPtrOutput)
}

func (o WebServiceDetailsPtrOutput) BuildPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BuildPlan
	}).(pulumi.StringPtrOutput)
}

func (o WebServiceDetailsPtrOutput) Disk() DiskPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *Disk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(DiskPtrOutput)
}

// Environment (runtime)
func (o WebServiceDetailsPtrOutput) Env() WebServiceDetailsEnvPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *WebServiceDetailsEnv {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(WebServiceDetailsEnvPtrOutput)
}

func (o WebServiceDetailsPtrOutput) EnvSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebServiceDetails) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvSpecificDetails
	}).(pulumi.AnyOutput)
}

func (o WebServiceDetailsPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
func (o WebServiceDetailsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

func (o WebServiceDetailsPtrOutput) OpenPorts() ServerPortArrayOutput {
	return o.ApplyT(func(v *WebServiceDetails) []ServerPort {
		if v == nil {
			return nil
		}
		return v.OpenPorts
	}).(ServerPortArrayOutput)
}

func (o WebServiceDetailsPtrOutput) ParentServer() ResourcePtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *Resource {
		if v == nil {
			return nil
		}
		return v.ParentServer
	}).(ResourcePtrOutput)
}

// The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
func (o WebServiceDetailsPtrOutput) Plan() WebServiceDetailsPlanPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *WebServiceDetailsPlan {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(WebServiceDetailsPlanPtrOutput)
}

func (o WebServiceDetailsPtrOutput) PullRequestPreviewsEnabled() WebServiceDetailsPullRequestPreviewsEnabledPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *WebServiceDetailsPullRequestPreviewsEnabled {
		if v == nil {
			return nil
		}
		return &v.PullRequestPreviewsEnabled
	}).(WebServiceDetailsPullRequestPreviewsEnabledPtrOutput)
}

func (o WebServiceDetailsPtrOutput) Region() WebServiceDetailsRegionPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *WebServiceDetailsRegion {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(WebServiceDetailsRegionPtrOutput)
}

func (o WebServiceDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type WebServicePropertiesDiskProperties struct {
	MountPath string `pulumi:"mountPath"`
	Name      string `pulumi:"name"`
	// Defaults to 1
	SizeGB *int `pulumi:"sizeGB"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingCriteriaInput)(nil)).Elem(), AutoscalingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingCriteriaPercentageInput)(nil)).Elem(), AutoscalingCriteriaPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarKeyGenerateValueInput)(nil)).Elem(), EnvVarKeyGenerateValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvVarKeyValueInput)(nil)).Elem(), EnvVarKeyValueArgs{})
	pulumi.RegisterOutputType(AutoscalingConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingCriteriaOutput{})
	pulumi.RegisterOutputType(AutoscalingCriteriaPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingCriteriaPercentageOutput{})
	pulumi.RegisterOutputType(AutoscalingCriteriaPercentagePtrOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerDetailsOutput{})
	pulumi.RegisterOutputType(BackgroundWorkerDetailsPtrOutput{})
	pulumi.RegisterOutputType(BuildFilterOutput{})
	pulumi.RegisterOutputType(BuildFilterPtrOutput{})
	pulumi.RegisterOutputType(CommitPropertiesOutput{})
	pulumi.RegisterOutputType(CommitPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CronJobDetailsOutput{})
	pulumi.RegisterOutputType(CronJobDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainTypeOutput{})
	pulumi.RegisterOutputType(CustomDomainTypePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainServerPropertiesOutput{})
	pulumi.RegisterOutputType(CustomDomainServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeployTypeOutput{})
	pulumi.RegisterOutputType(DeployTypePtrOutput{})
	pulumi.RegisterOutputType(DeployCommitPropertiesOutput{})
	pulumi.RegisterOutputType(DeployCommitPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeployImagePropertiesOutput{})
	pulumi.RegisterOutputType(DeployImagePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DiskOutput{})
	pulumi.RegisterOutputType(DiskPtrOutput{})
	pulumi.RegisterOutputType(DockerDetailsOutput{})
	pulumi.RegisterOutputType(DockerDetailsPtrOutput{})
	pulumi.RegisterOutputType(EnvVarOutput{})
	pulumi.RegisterOutputType(EnvVarKeyGenerateValueOutput{})
	pulumi.RegisterOutputType(EnvVarKeyValueOutput{})
	pulumi.RegisterOutputType(EnvVarWithCursorOutput{})
	pulumi.RegisterOutputType(EnvVarWithCursorArrayOutput{})
	pulumi.RegisterOutputType(HeaderOutput{})
	pulumi.RegisterOutputType(HeaderPtrOutput{})
	pulumi.RegisterOutputType(ImagePropertiesOutput{})
	pulumi.RegisterOutputType(ImagePropertiesPtrOutput{})
	pulumi.RegisterOutputType(JobTypeOutput{})
	pulumi.RegisterOutputType(JobTypePtrOutput{})
	pulumi.RegisterOutputType(ListCustomDomainsItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListCustomDomainsItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListDeploysItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListDeploysItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListJobItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListJobItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListRetrieveHeadersItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListRetrieveHeadersItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListRetrieveRoutesItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListRetrieveRoutesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListServicesItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListServicesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(NativeEnvironmentDetailsOutput{})
	pulumi.RegisterOutputType(NativeEnvironmentDetailsPtrOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsOutput{})
	pulumi.RegisterOutputType(PrivateServiceDetailsPtrOutput{})
	pulumi.RegisterOutputType(RegistryCredentialOutput{})
	pulumi.RegisterOutputType(RegistryCredentialPtrOutput{})
	pulumi.RegisterOutputType(ResourceOutput{})
	pulumi.RegisterOutputType(ResourcePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RoutePtrOutput{})
	pulumi.RegisterOutputType(ServerPortOutput{})
	pulumi.RegisterOutputType(ServerPortArrayOutput{})
	pulumi.RegisterOutputType(ServiceOutput{})
	pulumi.RegisterOutputType(ServicePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteDetailsOutput{})
	pulumi.RegisterOutputType(StaticSiteDetailsPtrOutput{})
	pulumi.RegisterOutputType(WebServiceDetailsOutput{})
	pulumi.RegisterOutputType(WebServiceDetailsPtrOutput{})
}
