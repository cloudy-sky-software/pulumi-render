// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getRegistryCredential(args: GetRegistryCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:registrycredentials:getRegistryCredential", {
        "registryCredentialId": args.registryCredentialId,
    }, opts);
}

export interface GetRegistryCredentialArgs {
    /**
     * The ID of the registry credential
     */
    registryCredentialId: string;
}

export interface GetRegistryCredentialResult {
    /**
     * Unique identifier for this credential
     */
    readonly id: string;
    /**
     * Descriptive name for this credential
     */
    readonly name: string;
    /**
     * The registry to use this credential with
     */
    readonly registry: enums.registrycredentials.RegistryCredentialRegistry;
    /**
     * Last updated time for the credential
     */
    readonly updatedAt: string;
    /**
     * The username associated with the credential
     */
    readonly username: string;
}
export function getRegistryCredentialOutput(args: GetRegistryCredentialOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegistryCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:registrycredentials:getRegistryCredential", {
        "registryCredentialId": args.registryCredentialId,
    }, opts);
}

export interface GetRegistryCredentialOutputArgs {
    /**
     * The ID of the registry credential
     */
    registryCredentialId: pulumi.Input<string>;
}
