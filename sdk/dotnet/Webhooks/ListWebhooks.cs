// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Webhooks
{
    public static class ListWebhooks
    {
        public static Task<ListWebhooksResult> InvokeAsync(ListWebhooksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWebhooksResult>("render:webhooks:listWebhooks", args ?? new ListWebhooksArgs(), options.WithDefaults());

        public static Output<ListWebhooksResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWebhooksResult>("render:webhooks:listWebhooks", InvokeArgs.Empty, options.WithDefaults());

        public static Output<ListWebhooksResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListWebhooksResult>("render:webhooks:listWebhooks", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListWebhooksArgs : global::Pulumi.InvokeArgs
    {
        public ListWebhooksArgs()
        {
        }
        public static new ListWebhooksArgs Empty => new ListWebhooksArgs();
    }


    [OutputType]
    public sealed class ListWebhooksResult
    {
        public readonly ImmutableArray<Outputs.WebhookWithCursor> Items;

        [OutputConstructor]
        private ListWebhooksResult(ImmutableArray<Outputs.WebhookWithCursor> items)
        {
            Items = items;
        }
    }
}
