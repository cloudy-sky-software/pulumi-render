// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listOwnerMembers(args: ListOwnerMembersArgs, opts?: pulumi.InvokeOptions): Promise<ListOwnerMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:owners:listOwnerMembers", {
        "ownerId": args.ownerId,
    }, opts);
}

export interface ListOwnerMembersArgs {
    /**
     * The ID of the team
     */
    ownerId: string;
}

export interface ListOwnerMembersResult {
    readonly items: outputs.owners.TeamMember[];
}
export function listOwnerMembersOutput(args: ListOwnerMembersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListOwnerMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:owners:listOwnerMembers", {
        "ownerId": args.ownerId,
    }, opts);
}

export interface ListOwnerMembersOutputArgs {
    /**
     * The ID of the team
     */
    ownerId: pulumi.Input<string>;
}
