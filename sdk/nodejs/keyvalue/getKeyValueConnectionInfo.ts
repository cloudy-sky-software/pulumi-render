// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getKeyValueConnectionInfo(args: GetKeyValueConnectionInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyValueConnectionInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:key-value:getKeyValueConnectionInfo", {
        "keyValueId": args.keyValueId,
    }, opts);
}

export interface GetKeyValueConnectionInfoArgs {
    keyValueId: string;
}

/**
 * A Key Value instance
 */
export interface GetKeyValueConnectionInfoResult {
    /**
     * The CLI (redis-cli or valkey-cli) command to connect to the Key Value instance
     */
    readonly cliCommand: string;
    /**
     * The connection string to use from outside Render
     */
    readonly externalConnectionString: string;
    /**
     * The connection string to use from within Render
     */
    readonly internalConnectionString: string;
}
export function getKeyValueConnectionInfoOutput(args: GetKeyValueConnectionInfoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeyValueConnectionInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:key-value:getKeyValueConnectionInfo", {
        "keyValueId": args.keyValueId,
    }, opts);
}

export interface GetKeyValueConnectionInfoOutputArgs {
    keyValueId: pulumi.Input<string>;
}
