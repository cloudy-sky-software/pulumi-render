// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Input type for creating a Key Value instance
 */
export class KeyValue extends pulumi.CustomResource {
    /**
     * Get an existing KeyValue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KeyValue {
        return new KeyValue(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'render:key-value:KeyValue';

    /**
     * Returns true if the given object is an instance of KeyValue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyValue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyValue.__pulumiType;
    }

    /**
     * The creation time of the Key Value instance
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the environment the Key Value instance is associated with
     */
    public readonly environmentId!: pulumi.Output<string | undefined>;
    /**
     * The IP allow list for the Key Value instance
     */
    public readonly ipAllowList!: pulumi.Output<outputs.keyvalue.CidrBlockAndDescription[]>;
    public /*out*/ readonly maintenance!: pulumi.Output<outputs.keyvalue.RedisDetailpropertiesmaintenance | undefined>;
    /**
     * The eviction policy for the Key Value instance
     */
    public readonly maxmemoryPolicy!: pulumi.Output<enums.keyvalue.MaxmemoryPolicy | undefined>;
    /**
     * The name of the Key Value instance
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Options for a Key Value instance
     */
    public /*out*/ readonly options!: pulumi.Output<outputs.keyvalue.KeyValueOptions>;
    public /*out*/ readonly owner!: pulumi.Output<outputs.keyvalue.Owner>;
    /**
     * The ID of the owner of the Key Value instance
     */
    public readonly ownerId!: pulumi.Output<string>;
    public readonly plan!: pulumi.Output<enums.keyvalue.Plan>;
    /**
     * Defaults to "oregon"
     */
    public readonly region!: pulumi.Output<enums.keyvalue.Region>;
    public /*out*/ readonly status!: pulumi.Output<enums.keyvalue.Status>;
    /**
     * The last updated time of the Key Value instance
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The version of Key Value
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a KeyValue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyValueArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.ownerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'ownerId'");
            }
            if (args?.plan === undefined && !opts.urn) {
                throw new Error("Missing required property 'plan'");
            }
            resourceInputs["environmentId"] = args?.environmentId;
            resourceInputs["ipAllowList"] = args?.ipAllowList;
            resourceInputs["maxmemoryPolicy"] = args?.maxmemoryPolicy;
            resourceInputs["name"] = args?.name;
            resourceInputs["ownerId"] = args?.ownerId;
            resourceInputs["plan"] = args?.plan;
            resourceInputs["region"] = args?.region;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["maintenance"] = undefined /*out*/;
            resourceInputs["options"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["ipAllowList"] = undefined /*out*/;
            resourceInputs["maintenance"] = undefined /*out*/;
            resourceInputs["maxmemoryPolicy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["options"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["plan"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KeyValue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a KeyValue resource.
 */
export interface KeyValueArgs {
    environmentId?: pulumi.Input<string>;
    ipAllowList?: pulumi.Input<pulumi.Input<inputs.keyvalue.CidrBlockAndDescriptionArgs>[]>;
    /**
     * The eviction policy for the Key Value instance
     */
    maxmemoryPolicy?: pulumi.Input<enums.keyvalue.MaxmemoryPolicy>;
    /**
     * The name of the Key Value instance
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the owner of the Key Value instance
     */
    ownerId: pulumi.Input<string>;
    plan: pulumi.Input<enums.keyvalue.Plan>;
    /**
     * The region where the Key Value instance is located
     */
    region?: pulumi.Input<string>;
}
