// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    [RenderResourceType("render:services:PrivateService")]
    public partial class PrivateService : global::Pulumi.CustomResource
    {
        [Output("autoDeploy")]
        public Output<Pulumi.Render.Services.ServiceAutoDeploy?> AutoDeploy { get; private set; } = null!;

        [Output("branch")]
        public Output<string?> Branch { get; private set; } = null!;

        [Output("buildFilter")]
        public Output<Outputs.BuildFilter?> BuildFilter { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        [Output("envVars")]
        public Output<ImmutableArray<Union<Outputs.EnvVarKeyValue, Outputs.EnvVarKeyGenerateValue>>> EnvVars { get; private set; } = null!;

        [Output("image")]
        public Output<Outputs.Image?> Image { get; private set; } = null!;

        [Output("imagePath")]
        public Output<string?> ImagePath { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("notifyOnFail")]
        public Output<Pulumi.Render.Services.ServiceNotifyOnFail?> NotifyOnFail { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string?> OwnerId { get; private set; } = null!;

        [Output("repo")]
        public Output<string?> Repo { get; private set; } = null!;

        [Output("rootDir")]
        public Output<string?> RootDir { get; private set; } = null!;

        [Output("secretFiles")]
        public Output<ImmutableArray<Outputs.SecretFile>> SecretFiles { get; private set; } = null!;

        [Output("serviceDetails")]
        public Output<Outputs.PrivateServiceDetailsOutput?> ServiceDetails { get; private set; } = null!;

        [Output("slug")]
        public Output<string?> Slug { get; private set; } = null!;

        [Output("suspended")]
        public Output<Pulumi.Render.Services.ServiceSuspended?> Suspended { get; private set; } = null!;

        [Output("suspenders")]
        public Output<ImmutableArray<Pulumi.Render.Services.ServiceSuspendersItem>> Suspenders { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string?> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateService(string name, PrivateServiceArgs args, CustomResourceOptions? options = null)
            : base("render:services:PrivateService", name, args ?? new PrivateServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("render:services:PrivateService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-render",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PrivateService(name, id, options);
        }
    }

    public sealed class PrivateServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to "yes"
        /// </summary>
        [Input("autoDeploy")]
        public Input<Pulumi.Render.Services.ServiceCreateAutoDeploy>? AutoDeploy { get; set; }

        /// <summary>
        /// If left empty, this will fall back to the default branch of the repository
        /// </summary>
        [Input("branch")]
        public Input<string>? Branch { get; set; }

        [Input("buildFilter")]
        public Input<Inputs.BuildFilterArgs>? BuildFilter { get; set; }

        [Input("envVars")]
        private InputList<Union<Inputs.EnvVarKeyValueArgs, Inputs.EnvVarKeyGenerateValueArgs>>? _envVars;
        public InputList<Union<Inputs.EnvVarKeyValueArgs, Inputs.EnvVarKeyGenerateValueArgs>> EnvVars
        {
            get => _envVars ?? (_envVars = new InputList<Union<Inputs.EnvVarKeyValueArgs, Inputs.EnvVarKeyGenerateValueArgs>>());
            set => _envVars = value;
        }

        [Input("image")]
        public Input<Inputs.ImageArgs>? Image { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("ownerId", required: true)]
        public Input<string> OwnerId { get; set; } = null!;

        /// <summary>
        /// Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
        /// </summary>
        [Input("repo")]
        public Input<string>? Repo { get; set; }

        [Input("rootDir")]
        public Input<string>? RootDir { get; set; }

        [Input("secretFiles")]
        private InputList<Inputs.SecretFileArgs>? _secretFiles;
        public InputList<Inputs.SecretFileArgs> SecretFiles
        {
            get => _secretFiles ?? (_secretFiles = new InputList<Inputs.SecretFileArgs>());
            set => _secretFiles = value;
        }

        [Input("serviceDetails")]
        public Input<Inputs.PrivateServiceDetailsCreateArgs>? ServiceDetails { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public PrivateServiceArgs()
        {
            AutoDeploy = Pulumi.Render.Services.ServiceCreateAutoDeploy.Yes;
            Type = "private_service";
        }
        public static new PrivateServiceArgs Empty => new PrivateServiceArgs();
    }
}
