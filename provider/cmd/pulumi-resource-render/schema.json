{
    "name": "render",
    "displayName": "Render",
    "description": "A Pulumi package for creating and managing Render resources.",
    "keywords": [
        "pulumi",
        "render",
        "category/cloud",
        "kind/native"
    ],
    "homepage": "https://cloudysky.software",
    "license": "Apache-2.0",
    "repository": "https://github.com/cloudy-sky-software/pulumi-render",
    "pluginDownloadURL": "github://api.github.com/cloudy-sky-software/pulumi-render",
    "publisher": "Cloudy Sky Software",
    "language": {
        "csharp": {
            "namespaces": {
                "": "Provider",
                "owners": "Owners",
                "registrycredentials": "RegistryCredentials",
                "render": "Render",
                "services": "Services"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Pulumi"
        },
        "go": {
            "importBasePath": "github.com/cloudy-sky-software/pulumi-render/sdk/go/render"
        },
        "nodejs": {
            "packageName": "@cloudyskysoftware/pulumi-render"
        },
        "python": {
            "packageName": "pulumi_render",
            "pyproject": {
                "enabled": true
            },
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The Render API key",
                "language": {
                    "csharp": {
                        "name": "ApiKey"
                    }
                },
                "secret": true
            },
            "clearCacheOnServiceUpdateDeployments": {
                "$ref": "#/types/render:services:DeployClearCache",
                "description": "When a service is updated, a deployment is automatically triggered. This variable controls whether or not the service cache should be cleared upon deployment.",
                "language": {
                    "csharp": {
                        "name": "ClearCacheOnServiceUpdateDeployments"
                    }
                }
            }
        }
    },
    "types": {
        "render:owners:ListOwnersItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/types/render:owners:Owner"
                }
            },
            "type": "object"
        },
        "render:owners:Owner": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/render:owners:OwnerType"
                }
            },
            "type": "object",
            "required": [
                "email",
                "name",
                "type"
            ]
        },
        "render:owners:OwnerType": {
            "type": "string",
            "enum": [
                {
                    "name": "User",
                    "value": "user"
                },
                {
                    "name": "Team",
                    "value": "team"
                }
            ]
        },
        "render:registrycredentials:Registry": {
            "type": "string",
            "enum": [
                {
                    "name": "Github",
                    "value": "GITHUB"
                },
                {
                    "name": "Gitlab",
                    "value": "GITLAB"
                },
                {
                    "name": "Docker",
                    "value": "DOCKER"
                }
            ]
        },
        "render:registrycredentials:RegistryCredential": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Descriptive name for this credential"
                },
                "registry": {
                    "$ref": "#/types/render:registrycredentials:RegistryCredentialRegistry",
                    "description": "The registry to use this credential with"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential"
                }
            },
            "type": "object",
            "required": [
                "name",
                "registry",
                "username"
            ]
        },
        "render:registrycredentials:RegistryCredentialRegistry": {
            "description": "The registry to use this credential with",
            "type": "string",
            "enum": [
                {
                    "name": "Github",
                    "value": "GITHUB"
                },
                {
                    "name": "Gitlab",
                    "value": "GITLAB"
                },
                {
                    "name": "Docker",
                    "value": "DOCKER"
                }
            ]
        },
        "render:services:AutoDeploy": {
            "description": "Defaults to \"yes\"",
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:AutoscalingConfig": {
            "properties": {
                "criteria": {
                    "$ref": "#/types/render:services:AutoscalingCriteria"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false
                },
                "max": {
                    "type": "integer",
                    "description": "The maximum number of instances for the service"
                },
                "min": {
                    "type": "integer",
                    "description": "The minimum number of instances for the service"
                }
            },
            "type": "object",
            "required": [
                "criteria",
                "enabled",
                "max",
                "min"
            ]
        },
        "render:services:AutoscalingCriteria": {
            "properties": {
                "cpu": {
                    "$ref": "#/types/render:services:AutoscalingCriteriaPercentage"
                },
                "memory": {
                    "$ref": "#/types/render:services:AutoscalingCriteriaPercentage"
                }
            },
            "type": "object",
            "required": [
                "cpu",
                "memory"
            ]
        },
        "render:services:AutoscalingCriteriaPercentage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false
                },
                "percentage": {
                    "type": "integer",
                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "percentage"
            ]
        },
        "render:services:BackgroundWorkerDetails": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/render:services:AutoscalingConfig"
                },
                "buildPlan": {
                    "type": "string"
                },
                "disk": {
                    "$ref": "#/types/render:services:Disk"
                },
                "env": {
                    "$ref": "#/types/render:services:BackgroundWorkerDetailsEnv",
                    "description": "Environment (runtime)"
                },
                "envSpecificDetails": {
                    "$ref": "#/types/render:services:EnvSpecificDetails"
                },
                "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                },
                "parentServer": {
                    "$ref": "#/types/render:services:Resource"
                },
                "plan": {
                    "$ref": "#/types/render:services:BackgroundWorkerDetailsPlan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                },
                "pullRequestPreviewsEnabled": {
                    "$ref": "#/types/render:services:BackgroundWorkerDetailsPullRequestPreviewsEnabled"
                },
                "region": {
                    "$ref": "#/types/render:services:BackgroundWorkerDetailsRegion"
                }
            },
            "type": "object",
            "required": [
                "buildPlan",
                "env",
                "envSpecificDetails",
                "numInstances",
                "plan",
                "pullRequestPreviewsEnabled",
                "region"
            ]
        },
        "render:services:BackgroundWorkerDetailsEnv": {
            "description": "Environment (runtime)",
            "type": "string",
            "enum": [
                {
                    "name": "Docker",
                    "value": "docker"
                },
                {
                    "name": "Elixir",
                    "value": "elixir"
                },
                {
                    "name": "Go",
                    "value": "go"
                },
                {
                    "name": "Node",
                    "value": "node"
                },
                {
                    "name": "Python",
                    "value": "python"
                },
                {
                    "name": "Ruby",
                    "value": "ruby"
                },
                {
                    "name": "Rust",
                    "value": "rust"
                },
                {
                    "name": "Image",
                    "value": "image"
                }
            ]
        },
        "render:services:BackgroundWorkerDetailsPlan": {
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "StarterPlus",
                    "value": "starter_plus"
                },
                {
                    "name": "Standard",
                    "value": "standard"
                },
                {
                    "name": "StandardPlus",
                    "value": "standard_plus"
                },
                {
                    "name": "Pro",
                    "value": "pro"
                },
                {
                    "name": "ProPlus",
                    "value": "pro_plus"
                },
                {
                    "name": "ProMax",
                    "value": "pro_max"
                },
                {
                    "name": "ProUltra",
                    "value": "pro_ultra"
                },
                {
                    "name": "Free",
                    "value": "free"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "render:services:BackgroundWorkerDetailsPullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:BackgroundWorkerDetailsRegion": {
            "type": "string",
            "enum": [
                {
                    "name": "Frankfurt",
                    "value": "frankfurt"
                },
                {
                    "name": "Oregon",
                    "value": "oregon"
                },
                {
                    "name": "Ohio",
                    "value": "ohio"
                },
                {
                    "name": "Singapore",
                    "value": "singapore"
                }
            ]
        },
        "render:services:BuildFilter": {
            "properties": {
                "ignoredPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ignoredPaths",
                "paths"
            ]
        },
        "render:services:ClearCache": {
            "description": "Defaults to \"do_not_clear\"",
            "type": "string",
            "enum": [
                {
                    "name": "Clear",
                    "value": "clear"
                },
                {
                    "name": "DoNotClear",
                    "value": "do_not_clear"
                }
            ]
        },
        "render:services:CommitProperties": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "render:services:CronJobDetails": {
            "properties": {
                "buildPlan": {
                    "type": "string"
                },
                "env": {
                    "$ref": "#/types/render:services:CronJobDetailsEnv",
                    "description": "Environment (runtime)"
                },
                "envSpecificDetails": {
                    "$ref": "#/types/render:services:EnvSpecificDetails"
                },
                "lastSuccessfulRunAt": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/types/render:services:CronJobDetailsPlan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                },
                "region": {
                    "$ref": "#/types/render:services:CronJobDetailsRegion"
                },
                "schedule": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "buildPlan",
                "env",
                "envSpecificDetails",
                "plan",
                "region",
                "schedule"
            ]
        },
        "render:services:CronJobDetailsEnv": {
            "description": "Environment (runtime)",
            "type": "string",
            "enum": [
                {
                    "name": "Docker",
                    "value": "docker"
                },
                {
                    "name": "Elixir",
                    "value": "elixir"
                },
                {
                    "name": "Go",
                    "value": "go"
                },
                {
                    "name": "Node",
                    "value": "node"
                },
                {
                    "name": "Python",
                    "value": "python"
                },
                {
                    "name": "Ruby",
                    "value": "ruby"
                },
                {
                    "name": "Rust",
                    "value": "rust"
                },
                {
                    "name": "Image",
                    "value": "image"
                }
            ]
        },
        "render:services:CronJobDetailsPlan": {
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "StarterPlus",
                    "value": "starter_plus"
                },
                {
                    "name": "Standard",
                    "value": "standard"
                },
                {
                    "name": "StandardPlus",
                    "value": "standard_plus"
                },
                {
                    "name": "Pro",
                    "value": "pro"
                },
                {
                    "name": "ProPlus",
                    "value": "pro_plus"
                },
                {
                    "name": "ProMax",
                    "value": "pro_max"
                },
                {
                    "name": "ProUltra",
                    "value": "pro_ultra"
                },
                {
                    "name": "Free",
                    "value": "free"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "render:services:CronJobDetailsRegion": {
            "type": "string",
            "enum": [
                {
                    "name": "Frankfurt",
                    "value": "frankfurt"
                },
                {
                    "name": "Oregon",
                    "value": "oregon"
                },
                {
                    "name": "Ohio",
                    "value": "ohio"
                },
                {
                    "name": "Singapore",
                    "value": "singapore"
                }
            ]
        },
        "render:services:CustomDomain": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "domainType": {
                    "$ref": "#/types/render:services:CustomDomainDomainType"
                },
                "name": {
                    "type": "string"
                },
                "publicSuffix": {
                    "type": "string"
                },
                "redirectForName": {
                    "type": "string"
                },
                "server": {
                    "$ref": "#/types/render:services:CustomDomainServerProperties"
                },
                "verificationStatus": {
                    "$ref": "#/types/render:services:CustomDomainVerificationStatus"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "domainType",
                "name",
                "publicSuffix",
                "redirectForName",
                "verificationStatus"
            ]
        },
        "render:services:CustomDomainDomainType": {
            "type": "string",
            "enum": [
                {
                    "name": "Apex",
                    "value": "apex"
                },
                {
                    "name": "Subdomain",
                    "value": "subdomain"
                }
            ]
        },
        "render:services:CustomDomainServerProperties": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "render:services:CustomDomainVerificationStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Verified",
                    "value": "verified"
                },
                {
                    "name": "Unverified",
                    "value": "unverified"
                }
            ]
        },
        "render:services:Deploy": {
            "properties": {
                "commit": {
                    "$ref": "#/types/render:services:DeployCommitProperties"
                },
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/types/render:services:DeployImageProperties",
                    "description": "Image information used when creating the deploy. Not present for Git-backed deploys"
                },
                "status": {
                    "$ref": "#/types/render:services:DeployStatus"
                },
                "trigger": {
                    "$ref": "#/types/render:services:DeployTrigger"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "render:services:DeployCommitProperties": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "render:services:DeployImageProperties": {
            "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
            "properties": {
                "ref": {
                    "type": "string",
                    "description": "Image reference used when creating the deploy"
                },
                "registryCredential": {
                    "type": "string",
                    "description": "Name of credential used to pull the image, if provided"
                },
                "sha": {
                    "type": "string",
                    "description": "SHA that the image reference was resolved to when creating the deploy"
                }
            },
            "type": "object"
        },
        "render:services:DeployStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Created",
                    "value": "created"
                },
                {
                    "name": "BuildInProgress",
                    "value": "build_in_progress"
                },
                {
                    "name": "UpdateInProgress",
                    "value": "update_in_progress"
                },
                {
                    "name": "Live",
                    "value": "live"
                },
                {
                    "name": "Deactivated",
                    "value": "deactivated"
                },
                {
                    "name": "BuildFailed",
                    "value": "build_failed"
                },
                {
                    "name": "UpdateFailed",
                    "value": "update_failed"
                },
                {
                    "name": "Canceled",
                    "value": "canceled"
                },
                {
                    "name": "PreDeployInProgress",
                    "value": "pre_deploy_in_progress"
                },
                {
                    "name": "PreDeployFailed",
                    "value": "pre_deploy_failed"
                }
            ]
        },
        "render:services:DeployTrigger": {
            "type": "string",
            "enum": [
                {
                    "name": "Api",
                    "value": "api"
                },
                {
                    "name": "BlueprintSync",
                    "value": "blueprint_sync"
                },
                {
                    "name": "DeployHook",
                    "value": "deploy_hook"
                },
                {
                    "name": "DeployedByRender",
                    "value": "deployed_by_render"
                },
                {
                    "name": "Manual",
                    "value": "manual"
                },
                {
                    "name": "Other",
                    "value": "other"
                },
                {
                    "name": "NewCommit",
                    "value": "new_commit"
                },
                {
                    "name": "Rollback",
                    "value": "rollback"
                },
                {
                    "name": "ServiceResumed",
                    "value": "service_resumed"
                },
                {
                    "name": "ServiceUpdated",
                    "value": "service_updated"
                }
            ]
        },
        "render:services:Disk": {
            "properties": {
                "mountPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sizeGB": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "mountPath",
                "name",
                "sizeGB"
            ]
        },
        "render:services:DockerDetails": {
            "properties": {
                "dockerCommand": {
                    "type": "string"
                },
                "dockerContext": {
                    "type": "string"
                },
                "dockerfilePath": {
                    "type": "string"
                },
                "preDeployCommand": {
                    "type": "string"
                },
                "registryCredential": {
                    "$ref": "#/types/render:services:RegistryCredential"
                }
            },
            "type": "object",
            "required": [
                "dockerCommand",
                "dockerContext",
                "dockerfilePath"
            ]
        },
        "render:services:EnvVar": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "render:services:EnvVarKeyGenerateValue": {
            "properties": {
                "generateValue": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "generateValue",
                "key"
            ]
        },
        "render:services:EnvVarKeyValue": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "render:services:EnvVarWithCursor": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "envVar": {
                    "$ref": "#/types/render:services:EnvVar"
                }
            },
            "type": "object",
            "required": [
                "cursor",
                "envVar"
            ]
        },
        "render:services:Header": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "path",
                "value"
            ]
        },
        "render:services:Image": {
            "properties": {
                "imagePath": {
                    "type": "string",
                    "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
                },
                "ownerId": {
                    "type": "string",
                    "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
                },
                "registryCredentialId": {
                    "type": "string",
                    "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
                }
            },
            "type": "object",
            "required": [
                "imagePath",
                "ownerId"
            ]
        },
        "render:services:ImageProperties": {
            "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
            "properties": {
                "ref": {
                    "type": "string",
                    "description": "Image reference used when creating the deploy"
                },
                "registryCredential": {
                    "type": "string",
                    "description": "Name of credential used to pull the image, if provided"
                },
                "sha": {
                    "type": "string",
                    "description": "SHA that the image reference was resolved to when creating the deploy"
                }
            },
            "type": "object"
        },
        "render:services:Job": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "startCommand": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "planId",
                "serviceId",
                "startCommand"
            ]
        },
        "render:services:ListCustomDomainsItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "customDomain": {
                    "$ref": "#/types/render:services:CustomDomain"
                }
            },
            "type": "object"
        },
        "render:services:ListDeploysItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "deploy": {
                    "$ref": "#/types/render:services:Deploy"
                }
            },
            "type": "object"
        },
        "render:services:ListJobItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "job": {
                    "$ref": "#/types/render:services:Job"
                }
            },
            "type": "object"
        },
        "render:services:ListRetrieveHeadersItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/types/render:services:Header"
                }
            },
            "type": "object"
        },
        "render:services:ListRetrieveRoutesItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "routes": {
                    "$ref": "#/types/render:services:Route"
                }
            },
            "type": "object"
        },
        "render:services:ListServicesItemProperties": {
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "service": {
                    "$ref": "#/types/render:services:Service"
                }
            },
            "type": "object"
        },
        "render:services:NativeEnvironmentDetails": {
            "properties": {
                "buildCommand": {
                    "type": "string"
                },
                "preDeployCommand": {
                    "type": "string"
                },
                "startCommand": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "buildCommand",
                "startCommand"
            ]
        },
        "render:services:Plan": {
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "StarterPlus",
                    "value": "starter_plus"
                },
                {
                    "name": "Standard",
                    "value": "standard"
                },
                {
                    "name": "StandardPlus",
                    "value": "standard_plus"
                },
                {
                    "name": "Pro",
                    "value": "pro"
                },
                {
                    "name": "ProPlus",
                    "value": "pro_plus"
                },
                {
                    "name": "ProMax",
                    "value": "pro_max"
                },
                {
                    "name": "ProUltra",
                    "value": "pro_ultra"
                },
                {
                    "name": "Free",
                    "value": "free"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "render:services:PrivateServiceDetails": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/render:services:AutoscalingConfig"
                },
                "buildPlan": {
                    "type": "string"
                },
                "disk": {
                    "$ref": "#/types/render:services:Disk"
                },
                "env": {
                    "$ref": "#/types/render:services:PrivateServiceDetailsEnv",
                    "description": "Environment (runtime)"
                },
                "envSpecificDetails": {
                    "$ref": "#/types/render:services:EnvSpecificDetails"
                },
                "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                },
                "openPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/render:services:ServerPort"
                    }
                },
                "parentServer": {
                    "$ref": "#/types/render:services:Resource"
                },
                "plan": {
                    "$ref": "#/types/render:services:PrivateServiceDetailsPlan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                },
                "pullRequestPreviewsEnabled": {
                    "$ref": "#/types/render:services:PrivateServiceDetailsPullRequestPreviewsEnabled"
                },
                "region": {
                    "$ref": "#/types/render:services:PrivateServiceDetailsRegion"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "buildPlan",
                "env",
                "envSpecificDetails",
                "numInstances",
                "openPorts",
                "plan",
                "pullRequestPreviewsEnabled",
                "region",
                "url"
            ]
        },
        "render:services:PrivateServiceDetailsEnv": {
            "description": "Environment (runtime)",
            "type": "string",
            "enum": [
                {
                    "name": "Docker",
                    "value": "docker"
                },
                {
                    "name": "Elixir",
                    "value": "elixir"
                },
                {
                    "name": "Go",
                    "value": "go"
                },
                {
                    "name": "Node",
                    "value": "node"
                },
                {
                    "name": "Python",
                    "value": "python"
                },
                {
                    "name": "Ruby",
                    "value": "ruby"
                },
                {
                    "name": "Rust",
                    "value": "rust"
                },
                {
                    "name": "Image",
                    "value": "image"
                }
            ]
        },
        "render:services:PrivateServiceDetailsPlan": {
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "StarterPlus",
                    "value": "starter_plus"
                },
                {
                    "name": "Standard",
                    "value": "standard"
                },
                {
                    "name": "StandardPlus",
                    "value": "standard_plus"
                },
                {
                    "name": "Pro",
                    "value": "pro"
                },
                {
                    "name": "ProPlus",
                    "value": "pro_plus"
                },
                {
                    "name": "ProMax",
                    "value": "pro_max"
                },
                {
                    "name": "ProUltra",
                    "value": "pro_ultra"
                },
                {
                    "name": "Free",
                    "value": "free"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "render:services:PrivateServiceDetailsPullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:PrivateServiceDetailsRegion": {
            "type": "string",
            "enum": [
                {
                    "name": "Frankfurt",
                    "value": "frankfurt"
                },
                {
                    "name": "Oregon",
                    "value": "oregon"
                },
                {
                    "name": "Ohio",
                    "value": "ohio"
                },
                {
                    "name": "Singapore",
                    "value": "singapore"
                }
            ]
        },
        "render:services:RegistryCredential": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Descriptive name for this credential"
                },
                "registry": {
                    "$ref": "#/types/render:services:RegistryCredentialRegistry",
                    "description": "The registry to use this credential with"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential"
                }
            },
            "type": "object",
            "required": [
                "name",
                "registry",
                "username"
            ]
        },
        "render:services:RegistryCredentialRegistry": {
            "description": "The registry to use this credential with",
            "type": "string",
            "enum": [
                {
                    "name": "Github",
                    "value": "GITHUB"
                },
                {
                    "name": "Gitlab",
                    "value": "GITLAB"
                },
                {
                    "name": "Docker",
                    "value": "DOCKER"
                }
            ]
        },
        "render:services:Resource": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "render:services:Route": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "description": "Redirect and Rewrite Rules are applied in priority order starting at 0"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/render:services:RouteType"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "priority",
                "source",
                "type"
            ]
        },
        "render:services:RouteType": {
            "type": "string",
            "enum": [
                {
                    "name": "Redirect",
                    "value": "redirect"
                },
                {
                    "name": "Rewrite",
                    "value": "rewrite"
                }
            ]
        },
        "render:services:SecretFile": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "render:services:ServerPort": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "$ref": "#/types/render:services:ServerPortProtocol"
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ]
        },
        "render:services:ServerPortProtocol": {
            "type": "string",
            "enum": [
                {
                    "name": "Tcp",
                    "value": "TCP"
                },
                {
                    "name": "Udp",
                    "value": "UDP"
                }
            ]
        },
        "render:services:Service": {
            "properties": {
                "autoDeploy": {
                    "$ref": "#/types/render:services:ServiceAutoDeploy"
                },
                "branch": {
                    "type": "string"
                },
                "buildFilter": {
                    "$ref": "#/types/render:services:BuildFilter"
                },
                "createdAt": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifyOnFail": {
                    "$ref": "#/types/render:services:ServiceNotifyOnFail"
                },
                "ownerId": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "rootDir": {
                    "type": "string"
                },
                "serviceDetails": {
                    "oneOf": [
                        {
                            "$ref": "#/types/render:services:StaticSiteDetails"
                        },
                        {
                            "$ref": "#/types/render:services:WebServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:PrivateServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:BackgroundWorkerDetails"
                        },
                        {
                            "$ref": "#/types/render:services:CronJobDetails"
                        }
                    ]
                },
                "slug": {
                    "type": "string"
                },
                "suspended": {
                    "$ref": "#/types/render:services:ServiceSuspended"
                },
                "suspenders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/render:services:ServiceSuspendersItem"
                    }
                },
                "type": {
                    "$ref": "#/types/render:services:ServiceType"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "autoDeploy",
                "createdAt",
                "name",
                "notifyOnFail",
                "ownerId",
                "rootDir",
                "serviceDetails",
                "slug",
                "suspended",
                "suspenders",
                "type",
                "updatedAt"
            ]
        },
        "render:services:ServiceAutoDeploy": {
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:ServiceNotifyOnFail": {
            "type": "string",
            "enum": [
                {
                    "name": "Default",
                    "value": "default"
                },
                {
                    "name": "Notify",
                    "value": "notify"
                },
                {
                    "name": "Ignore",
                    "value": "ignore"
                }
            ]
        },
        "render:services:ServiceSuspended": {
            "type": "string",
            "enum": [
                {
                    "name": "Suspended",
                    "value": "suspended"
                },
                {
                    "name": "NotSuspended",
                    "value": "not_suspended"
                }
            ]
        },
        "render:services:ServiceSuspendersItem": {
            "type": "string",
            "enum": [
                {
                    "name": "Admin",
                    "value": "admin"
                },
                {
                    "name": "Billing",
                    "value": "billing"
                },
                {
                    "name": "User",
                    "value": "user"
                },
                {
                    "name": "ParentService",
                    "value": "parent_service"
                },
                {
                    "name": "Unknown",
                    "value": "unknown"
                }
            ]
        },
        "render:services:ServiceType": {
            "type": "string",
            "enum": [
                {
                    "name": "StaticSite",
                    "value": "static_site"
                },
                {
                    "name": "WebService",
                    "value": "web_service"
                },
                {
                    "name": "PrivateService",
                    "value": "private_service"
                },
                {
                    "name": "BackgroundWorker",
                    "value": "background_worker"
                },
                {
                    "name": "CronJob",
                    "value": "cron_job"
                }
            ]
        },
        "render:services:StaticSiteDetails": {
            "properties": {
                "buildCommand": {
                    "type": "string"
                },
                "buildPlan": {
                    "type": "string"
                },
                "parentServer": {
                    "$ref": "#/types/render:services:Resource"
                },
                "publishPath": {
                    "type": "string"
                },
                "pullRequestPreviewsEnabled": {
                    "$ref": "#/types/render:services:StaticSiteDetailsPullRequestPreviewsEnabled"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "buildCommand",
                "buildPlan",
                "publishPath",
                "pullRequestPreviewsEnabled",
                "url"
            ]
        },
        "render:services:StaticSiteDetailsPullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:Status": {
            "type": "string",
            "enum": [
                {
                    "name": "Created",
                    "value": "created"
                },
                {
                    "name": "BuildInProgress",
                    "value": "build_in_progress"
                },
                {
                    "name": "UpdateInProgress",
                    "value": "update_in_progress"
                },
                {
                    "name": "Live",
                    "value": "live"
                },
                {
                    "name": "Deactivated",
                    "value": "deactivated"
                },
                {
                    "name": "BuildFailed",
                    "value": "build_failed"
                },
                {
                    "name": "UpdateFailed",
                    "value": "update_failed"
                },
                {
                    "name": "Canceled",
                    "value": "canceled"
                },
                {
                    "name": "PreDeployInProgress",
                    "value": "pre_deploy_in_progress"
                },
                {
                    "name": "PreDeployFailed",
                    "value": "pre_deploy_failed"
                }
            ]
        },
        "render:services:Trigger": {
            "type": "string",
            "enum": [
                {
                    "name": "Api",
                    "value": "api"
                },
                {
                    "name": "BlueprintSync",
                    "value": "blueprint_sync"
                },
                {
                    "name": "DeployHook",
                    "value": "deploy_hook"
                },
                {
                    "name": "DeployedByRender",
                    "value": "deployed_by_render"
                },
                {
                    "name": "Manual",
                    "value": "manual"
                },
                {
                    "name": "Other",
                    "value": "other"
                },
                {
                    "name": "NewCommit",
                    "value": "new_commit"
                },
                {
                    "name": "Rollback",
                    "value": "rollback"
                },
                {
                    "name": "ServiceResumed",
                    "value": "service_resumed"
                },
                {
                    "name": "ServiceUpdated",
                    "value": "service_updated"
                }
            ]
        },
        "render:services:Type": {
            "type": "string",
            "enum": [
                {
                    "name": "StaticSite",
                    "value": "static_site"
                },
                {
                    "name": "WebService",
                    "value": "web_service"
                },
                {
                    "name": "PrivateService",
                    "value": "private_service"
                },
                {
                    "name": "BackgroundWorker",
                    "value": "background_worker"
                },
                {
                    "name": "CronJob",
                    "value": "cron_job"
                }
            ]
        },
        "render:services:WebServiceDetails": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/render:services:AutoscalingConfig"
                },
                "buildPlan": {
                    "type": "string"
                },
                "disk": {
                    "$ref": "#/types/render:services:Disk"
                },
                "env": {
                    "$ref": "#/types/render:services:WebServiceDetailsEnv",
                    "description": "Environment (runtime)"
                },
                "envSpecificDetails": {
                    "oneOf": [
                        {
                            "$ref": "#/types/render:services:DockerDetails"
                        },
                        {
                            "$ref": "#/types/render:services:NativeEnvironmentDetails"
                        }
                    ]
                },
                "healthCheckPath": {
                    "type": "string"
                },
                "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                },
                "openPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/render:services:ServerPort"
                    }
                },
                "parentServer": {
                    "$ref": "#/types/render:services:Resource"
                },
                "plan": {
                    "$ref": "#/types/render:services:WebServiceDetailsPlan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                },
                "pullRequestPreviewsEnabled": {
                    "$ref": "#/types/render:services:WebServiceDetailsPullRequestPreviewsEnabled"
                },
                "region": {
                    "$ref": "#/types/render:services:WebServiceDetailsRegion"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "buildPlan",
                "env",
                "envSpecificDetails",
                "healthCheckPath",
                "numInstances",
                "openPorts",
                "plan",
                "pullRequestPreviewsEnabled",
                "region",
                "url"
            ]
        },
        "render:services:WebServiceDetailsEnv": {
            "description": "Environment (runtime)",
            "type": "string",
            "enum": [
                {
                    "name": "Docker",
                    "value": "docker"
                },
                {
                    "name": "Elixir",
                    "value": "elixir"
                },
                {
                    "name": "Go",
                    "value": "go"
                },
                {
                    "name": "Node",
                    "value": "node"
                },
                {
                    "name": "Python",
                    "value": "python"
                },
                {
                    "name": "Ruby",
                    "value": "ruby"
                },
                {
                    "name": "Rust",
                    "value": "rust"
                },
                {
                    "name": "Image",
                    "value": "image"
                }
            ]
        },
        "render:services:WebServiceDetailsPlan": {
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "StarterPlus",
                    "value": "starter_plus"
                },
                {
                    "name": "Standard",
                    "value": "standard"
                },
                {
                    "name": "StandardPlus",
                    "value": "standard_plus"
                },
                {
                    "name": "Pro",
                    "value": "pro"
                },
                {
                    "name": "ProPlus",
                    "value": "pro_plus"
                },
                {
                    "name": "ProMax",
                    "value": "pro_max"
                },
                {
                    "name": "ProUltra",
                    "value": "pro_ultra"
                },
                {
                    "name": "Free",
                    "value": "free"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "render:services:WebServiceDetailsPullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
                {
                    "name": "Yes",
                    "value": "yes"
                },
                {
                    "name": "No",
                    "value": "no"
                }
            ]
        },
        "render:services:WebServiceDetailsRegion": {
            "type": "string",
            "enum": [
                {
                    "name": "Frankfurt",
                    "value": "frankfurt"
                },
                {
                    "name": "Oregon",
                    "value": "oregon"
                },
                {
                    "name": "Ohio",
                    "value": "ohio"
                },
                {
                    "name": "Singapore",
                    "value": "singapore"
                }
            ]
        }
    },
    "provider": {
        "description": "The provider type for the render package.",
        "type": "object",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The Render API key.",
                "defaultInfo": {
                    "environment": [
                        "RENDER_APIKEY"
                    ]
                },
                "language": {
                    "csharp": {
                        "name": "ApiKey"
                    }
                },
                "secret": true
            }
        }
    },
    "resources": {
        "render:registrycredentials:RegistryCredential": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Descriptive name for this credential"
                },
                "ownerId": {
                    "type": "string"
                },
                "registry": {
                    "$ref": "#/types/render:registrycredentials:Registry",
                    "description": "The registry to use this credential with"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "name",
                "ownerId",
                "registry",
                "username"
            ],
            "inputProperties": {
                "authToken": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "registry": {
                    "$ref": "#/types/render:registrycredentials:Registry"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "authToken",
                "ownerId",
                "registry",
                "username"
            ]
        },
        "render:services:AutoscaleService": {
            "properties": {
                "criteria": {
                    "$ref": "#/types/render:services:AutoscalingCriteria"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false
                },
                "max": {
                    "type": "integer",
                    "description": "The maximum number of instances for the service"
                },
                "min": {
                    "type": "integer",
                    "description": "The minimum number of instances for the service"
                }
            },
            "type": "object",
            "required": [
                "criteria",
                "enabled",
                "max",
                "min"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/render:services:AutoscalingCriteria"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false
                },
                "max": {
                    "type": "integer",
                    "description": "The maximum number of instances for the service"
                },
                "min": {
                    "type": "integer",
                    "description": "The minimum number of instances for the service"
                }
            },
            "requiredInputs": [
                "criteria",
                "enabled",
                "max",
                "min"
            ]
        },
        "render:services:CancelDeploy": {
            "properties": {
                "commit": {
                    "$ref": "#/types/render:services:CommitProperties"
                },
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/types/render:services:ImageProperties",
                    "description": "Image information used when creating the deploy. Not present for Git-backed deploys"
                },
                "status": {
                    "$ref": "#/types/render:services:Status"
                },
                "trigger": {
                    "$ref": "#/types/render:services:Trigger"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "render:services:CancelJob": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "startCommand": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "planId",
                "serviceId",
                "startCommand"
            ]
        },
        "render:services:CustomDomain": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "render:services:Deploy": {
            "properties": {
                "clearCache": {
                    "$ref": "#/types/render:services:ClearCache",
                    "description": "Defaults to \"do_not_clear\"",
                    "default": "do_not_clear"
                },
                "commit": {
                    "$ref": "#/types/render:services:CommitProperties"
                },
                "commitId": {
                    "type": "string",
                    "description": "Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys."
                },
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/types/render:services:ImageProperties",
                    "description": "Image information used when creating the deploy. Not present for Git-backed deploys"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service."
                },
                "status": {
                    "$ref": "#/types/render:services:Status"
                },
                "trigger": {
                    "$ref": "#/types/render:services:Trigger"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "inputProperties": {
                "clearCache": {
                    "$ref": "#/types/render:services:ClearCache",
                    "description": "Defaults to \"do_not_clear\"",
                    "default": "do_not_clear"
                },
                "commitId": {
                    "type": "string",
                    "description": "Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys."
                },
                "imageUrl": {
                    "type": "string",
                    "description": "URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service."
                }
            }
        },
        "render:services:EnvVarsForService": {
            "type": "object"
        },
        "render:services:Job": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "startCommand": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "planId",
                "serviceId",
                "startCommand"
            ],
            "inputProperties": {
                "planId": {
                    "type": "string"
                },
                "startCommand": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "startCommand"
            ]
        },
        "render:services:PreviewService": {
            "properties": {
                "deployId": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string",
                    "description": "Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:\u003cany tag or SHA\u003e`, `library/nginx:\u003cany tag or SHA\u003e`, or `nginx:\u003cany tag or SHA\u003e`. Note that the path must match (only the tag or SHA can vary)."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA."
                },
                "plan": {
                    "$ref": "#/types/render:services:Plan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                },
                "service": {
                    "$ref": "#/types/render:services:Service"
                }
            },
            "type": "object",
            "required": [
                "imagePath"
            ],
            "inputProperties": {
                "imagePath": {
                    "type": "string",
                    "description": "Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:\u003cany tag or SHA\u003e`, `library/nginx:\u003cany tag or SHA\u003e`, or `nginx:\u003cany tag or SHA\u003e`. Note that the path must match (only the tag or SHA can vary)."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA."
                },
                "plan": {
                    "$ref": "#/types/render:services:Plan",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                }
            },
            "requiredInputs": [
                "imagePath"
            ]
        },
        "render:services:RefreshCustomDomain": {
            "type": "object"
        },
        "render:services:RestartServer": {
            "type": "object"
        },
        "render:services:RollbackDeploy": {
            "properties": {
                "commit": {
                    "$ref": "#/types/render:services:CommitProperties"
                },
                "createdAt": {
                    "type": "string"
                },
                "deployId": {
                    "type": "string",
                    "description": "The ID of the deploy to rollback to"
                },
                "finishedAt": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/types/render:services:ImageProperties",
                    "description": "Image information used when creating the deploy. Not present for Git-backed deploys"
                },
                "status": {
                    "$ref": "#/types/render:services:Status"
                },
                "trigger": {
                    "$ref": "#/types/render:services:Trigger"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deployId"
            ],
            "inputProperties": {
                "deployId": {
                    "type": "string",
                    "description": "The ID of the deploy to rollback to"
                }
            },
            "requiredInputs": [
                "deployId"
            ]
        },
        "render:services:ScaleService": {
            "properties": {
                "numInstances": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "numInstances"
            ],
            "inputProperties": {
                "numInstances": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "numInstances"
            ]
        },
        "render:services:Service": {
            "properties": {
                "autoDeploy": {
                    "$ref": "#/types/render:services:AutoDeploy",
                    "description": "Defaults to \"yes\"",
                    "default": "yes"
                },
                "branch": {
                    "type": "string",
                    "description": "If left empty, this will fall back to the default branch of the repository"
                },
                "buildFilter": {
                    "$ref": "#/types/render:services:BuildFilter"
                },
                "deployId": {
                    "type": "string"
                },
                "envVars": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/types/render:services:EnvVarKeyValue"
                            },
                            {
                                "$ref": "#/types/render:services:EnvVarKeyGenerateValue"
                            }
                        ]
                    }
                },
                "image": {
                    "$ref": "#/types/render:services:Image"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "repo": {
                    "type": "string",
                    "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
                },
                "rootDir": {
                    "type": "string"
                },
                "secretFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/render:services:SecretFile"
                    }
                },
                "service": {
                    "$ref": "#/types/render:services:Service",
                    "language": {
                        "csharp": {
                            "name": "ServiceValue"
                        }
                    }
                },
                "serviceDetails": {
                    "oneOf": [
                        {
                            "$ref": "#/types/render:services:StaticSiteDetails"
                        },
                        {
                            "$ref": "#/types/render:services:WebServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:PrivateServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:BackgroundWorkerDetails"
                        },
                        {
                            "$ref": "#/types/render:services:CronJobDetails"
                        }
                    ]
                },
                "type": {
                    "$ref": "#/types/render:services:Type"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ownerId",
                "type"
            ],
            "inputProperties": {
                "autoDeploy": {
                    "$ref": "#/types/render:services:AutoDeploy",
                    "description": "Defaults to \"yes\"",
                    "default": "yes"
                },
                "branch": {
                    "type": "string",
                    "description": "If left empty, this will fall back to the default branch of the repository"
                },
                "buildFilter": {
                    "$ref": "#/types/render:services:BuildFilter"
                },
                "envVars": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/types/render:services:EnvVarKeyValue"
                            },
                            {
                                "$ref": "#/types/render:services:EnvVarKeyGenerateValue"
                            }
                        ]
                    }
                },
                "image": {
                    "$ref": "#/types/render:services:Image"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "repo": {
                    "type": "string",
                    "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
                },
                "rootDir": {
                    "type": "string"
                },
                "secretFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/render:services:SecretFile"
                    }
                },
                "serviceDetails": {
                    "oneOf": [
                        {
                            "$ref": "#/types/render:services:StaticSiteDetails"
                        },
                        {
                            "$ref": "#/types/render:services:WebServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:PrivateServiceDetails"
                        },
                        {
                            "$ref": "#/types/render:services:BackgroundWorkerDetails"
                        },
                        {
                            "$ref": "#/types/render:services:CronJobDetails"
                        }
                    ]
                },
                "type": {
                    "$ref": "#/types/render:services:Type"
                }
            },
            "requiredInputs": [
                "ownerId",
                "type"
            ]
        },
        "render:services:SuspendService": {
            "type": "object"
        }
    },
    "functions": {
        "render:owners:getOwner": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:owners:Owner"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:owners:listOwners": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:owners:ListOwnersItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:registrycredentials:getRegistrycredential": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:registrycredentials:RegistryCredential"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:registrycredentials:listRegistryCredentials": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:registrycredentials:RegistryCredential"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:getCustomDomain": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:services:CustomDomain"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:getDeploy": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:services:Deploy"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:getJob": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:services:Job"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:getService": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/render:services:Service"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listCustomDomains": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListCustomDomainsItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listDeploys": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListDeploysItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listEnvVarsForService": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:EnvVarWithCursor"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listJob": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListJobItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listRetrieveHeaders": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListRetrieveHeadersItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listRetrieveRoutes": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListRetrieveRoutesItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "render:services:listServices": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/render:services:ListServicesItemProperties"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            }
        }
    }
}