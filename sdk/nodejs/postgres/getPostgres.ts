// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getPostgres(args: GetPostgresArgs, opts?: pulumi.InvokeOptions): Promise<GetPostgresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:postgres:getPostgres", {
        "postgresId": args.postgresId,
    }, opts);
}

export interface GetPostgresArgs {
    postgresId: string;
}

export interface GetPostgresResult {
    readonly createdAt: string;
    /**
     * The URL to view the Postgres instance in the Render Dashboard
     */
    readonly dashboardUrl: string;
    readonly databaseName: string;
    readonly databaseUser: string;
    readonly diskSizeGB?: number;
    readonly environmentId?: string;
    /**
     * The time at which the database will be expire. Applies to free tier databases only.
     */
    readonly expiresAt?: string;
    readonly highAvailabilityEnabled: boolean;
    readonly id: string;
    readonly ipAllowList: outputs.postgres.CidrBlockAndDescription[];
    readonly maintenance?: outputs.postgres.RedisDetailpropertiesmaintenance;
    readonly name: string;
    readonly owner: outputs.postgres.Owner;
    readonly plan: enums.postgres.PostgresDetailPlan;
    readonly primaryPostgresID?: string;
    readonly readReplicas: outputs.postgres.ReadReplica[];
    /**
     * Defaults to "oregon"
     */
    readonly region: enums.postgres.PostgresDetailRegion;
    readonly role: enums.postgres.PostgresDetailRole;
    readonly status: enums.postgres.PostgresDetailStatus;
    readonly suspended: enums.postgres.PostgresDetailSuspended;
    readonly suspenders: enums.postgres.PostgresDetailSuspendersItem[];
    readonly updatedAt: string;
    /**
     * The PostgreSQL version
     */
    readonly version: enums.postgres.PostgresDetailVersion;
}
export function getPostgresOutput(args: GetPostgresOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPostgresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:postgres:getPostgres", {
        "postgresId": args.postgresId,
    }, opts);
}

export interface GetPostgresOutputArgs {
    postgresId: pulumi.Input<string>;
}
