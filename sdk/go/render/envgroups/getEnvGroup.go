// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package envgroups

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEnvGroup(ctx *pulumi.Context, args *LookupEnvGroupArgs, opts ...pulumi.InvokeOption) (*LookupEnvGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnvGroupResult
	err := ctx.Invoke("render:env-groups:getEnvGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvGroupArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId string `pulumi:"envGroupId"`
}

type LookupEnvGroupResult struct {
	Items EnvGroupType `pulumi:"items"`
}

func LookupEnvGroupOutput(ctx *pulumi.Context, args LookupEnvGroupOutputArgs, opts ...pulumi.InvokeOption) LookupEnvGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEnvGroupResult, error) {
			args := v.(LookupEnvGroupArgs)
			r, err := LookupEnvGroup(ctx, &args, opts...)
			var s LookupEnvGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEnvGroupResultOutput)
}

type LookupEnvGroupOutputArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId pulumi.StringInput `pulumi:"envGroupId"`
}

func (LookupEnvGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvGroupArgs)(nil)).Elem()
}

type LookupEnvGroupResultOutput struct{ *pulumi.OutputState }

func (LookupEnvGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvGroupResult)(nil)).Elem()
}

func (o LookupEnvGroupResultOutput) ToLookupEnvGroupResultOutput() LookupEnvGroupResultOutput {
	return o
}

func (o LookupEnvGroupResultOutput) ToLookupEnvGroupResultOutputWithContext(ctx context.Context) LookupEnvGroupResultOutput {
	return o
}

func (o LookupEnvGroupResultOutput) Items() EnvGroupTypeOutput {
	return o.ApplyT(func(v LookupEnvGroupResult) EnvGroupType { return v.Items }).(EnvGroupTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvGroupResultOutput{})
}
