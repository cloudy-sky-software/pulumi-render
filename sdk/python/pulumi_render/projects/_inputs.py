# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'ProjectCreateEnvironmentInputArgs',
    'ProjectCreateEnvironmentInputArgsDict',
]

MYPY = False

if not MYPY:
    class ProjectCreateEnvironmentInputArgsDict(TypedDict):
        name: pulumi.Input[builtins.str]
        network_isolation_enabled: NotRequired[pulumi.Input[builtins.bool]]
        """
        Indicates whether network connections across environments are allowed.
        """
        protected_status: NotRequired[pulumi.Input['ProjectCreateEnvironmentInputProtectedStatus']]
        """
        Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
        """
elif False:
    ProjectCreateEnvironmentInputArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProjectCreateEnvironmentInputArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[builtins.str],
                 network_isolation_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 protected_status: Optional[pulumi.Input['ProjectCreateEnvironmentInputProtectedStatus']] = None):
        """
        :param pulumi.Input[builtins.bool] network_isolation_enabled: Indicates whether network connections across environments are allowed.
        :param pulumi.Input['ProjectCreateEnvironmentInputProtectedStatus'] protected_status: Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
        """
        pulumi.set(__self__, "name", name)
        if network_isolation_enabled is not None:
            pulumi.set(__self__, "network_isolation_enabled", network_isolation_enabled)
        if protected_status is not None:
            pulumi.set(__self__, "protected_status", protected_status)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[builtins.str]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="networkIsolationEnabled")
    def network_isolation_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Indicates whether network connections across environments are allowed.
        """
        return pulumi.get(self, "network_isolation_enabled")

    @network_isolation_enabled.setter
    def network_isolation_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "network_isolation_enabled", value)

    @property
    @pulumi.getter(name="protectedStatus")
    def protected_status(self) -> Optional[pulumi.Input['ProjectCreateEnvironmentInputProtectedStatus']]:
        """
        Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
        """
        return pulumi.get(self, "protected_status")

    @protected_status.setter
    def protected_status(self, value: Optional[pulumi.Input['ProjectCreateEnvironmentInputProtectedStatus']]):
        pulumi.set(self, "protected_status", value)


