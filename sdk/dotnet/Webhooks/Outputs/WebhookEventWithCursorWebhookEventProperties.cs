// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Webhooks.Outputs
{

    [OutputType]
    public sealed class WebhookEventWithCursorWebhookEventProperties
    {
        /// <summary>
        /// error is populated when an error occurs without a response such as a timeout
        /// </summary>
        public readonly string? Error;
        /// <summary>
        /// the id of the event that triggered the webhook
        /// </summary>
        public readonly string EventId;
        public readonly Pulumi.Render.Webhooks.WebhookEventWithCursorWebhookEventPropertiesEventType EventType;
        /// <summary>
        /// the id of the webhook event
        /// </summary>
        public readonly string Id;
        public readonly string? ResponseBody;
        public readonly string SentAt;
        public readonly int? StatusCode;

        [OutputConstructor]
        private WebhookEventWithCursorWebhookEventProperties(
            string? error,

            string eventId,

            Pulumi.Render.Webhooks.WebhookEventWithCursorWebhookEventPropertiesEventType eventType,

            string id,

            string? responseBody,

            string sentAt,

            int? statusCode)
        {
            Error = error;
            EventId = eventId;
            EventType = eventType;
            Id = id;
            ResponseBody = responseBody;
            SentAt = sentAt;
            StatusCode = statusCode;
        }
    }
}
