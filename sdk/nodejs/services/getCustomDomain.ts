// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getCustomDomain(args: GetCustomDomainArgs, opts?: pulumi.InvokeOptions): Promise<outputs.services.CustomDomain> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:getCustomDomain", {
        "customDomainIdOrName": args.customDomainIdOrName,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetCustomDomainArgs {
    /**
     * The ID or name of the custom domain
     */
    customDomainIdOrName: string;
    /**
     * The ID of the service
     */
    serviceId: string;
}
export function getCustomDomainOutput(args: GetCustomDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.services.CustomDomain> {
    return pulumi.output(args).apply((a: any) => getCustomDomain(a, opts))
}

export interface GetCustomDomainOutputArgs {
    /**
     * The ID or name of the custom domain
     */
    customDomainIdOrName: pulumi.Input<string>;
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
