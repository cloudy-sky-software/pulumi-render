// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Owners
{
    public static class GetOwner
    {
        public static Task<Outputs.Owner> InvokeAsync(GetOwnerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.Owner>("render:owners:getOwner", args ?? new GetOwnerArgs(), options.WithDefaults());

        public static Output<Outputs.Owner> Invoke(GetOwnerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.Owner>("render:owners:getOwner", args ?? new GetOwnerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOwnerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the user or team
        /// </summary>
        [Input("ownerId", required: true)]
        public string OwnerId { get; set; } = null!;

        public GetOwnerArgs()
        {
        }
        public static new GetOwnerArgs Empty => new GetOwnerArgs();
    }

    public sealed class GetOwnerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the user or team
        /// </summary>
        [Input("ownerId", required: true)]
        public Input<string> OwnerId { get; set; } = null!;

        public GetOwnerInvokeArgs()
        {
        }
        public static new GetOwnerInvokeArgs Empty => new GetOwnerInvokeArgs();
    }
}
