// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBackgroundWorkerOutput(ctx *pulumi.Context, args *LookupBackgroundWorkerOutputArgs, opts ...pulumi.InvokeOption) (*LookupBackgroundWorkerOutputResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackgroundWorkerOutputResult
	err := ctx.Invoke("render:services:getBackgroundWorkerOutput", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupBackgroundWorkerOutputArgs struct {
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type LookupBackgroundWorkerOutputResult struct {
	Items GetBackgroundWorkerOutput `pulumi:"items"`
}

// Defaults sets the appropriate defaults for LookupBackgroundWorkerOutputResult
func (val *LookupBackgroundWorkerOutputResult) Defaults() *LookupBackgroundWorkerOutputResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func LookupBackgroundWorkerOutputOutput(ctx *pulumi.Context, args LookupBackgroundWorkerOutputOutputArgs, opts ...pulumi.InvokeOption) LookupBackgroundWorkerOutputResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackgroundWorkerOutputResult, error) {
			args := v.(LookupBackgroundWorkerOutputArgs)
			r, err := LookupBackgroundWorkerOutput(ctx, &args, opts...)
			var s LookupBackgroundWorkerOutputResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackgroundWorkerOutputResultOutput)
}

type LookupBackgroundWorkerOutputOutputArgs struct {
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupBackgroundWorkerOutputOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackgroundWorkerOutputArgs)(nil)).Elem()
}

type LookupBackgroundWorkerOutputResultOutput struct{ *pulumi.OutputState }

func (LookupBackgroundWorkerOutputResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackgroundWorkerOutputResult)(nil)).Elem()
}

func (o LookupBackgroundWorkerOutputResultOutput) ToLookupBackgroundWorkerOutputResultOutput() LookupBackgroundWorkerOutputResultOutput {
	return o
}

func (o LookupBackgroundWorkerOutputResultOutput) ToLookupBackgroundWorkerOutputResultOutputWithContext(ctx context.Context) LookupBackgroundWorkerOutputResultOutput {
	return o
}

func (o LookupBackgroundWorkerOutputResultOutput) Items() GetBackgroundWorkerOutputOutput {
	return o.ApplyT(func(v LookupBackgroundWorkerOutputResult) GetBackgroundWorkerOutput { return v.Items }).(GetBackgroundWorkerOutputOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackgroundWorkerOutputResultOutput{})
}
