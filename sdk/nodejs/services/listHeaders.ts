// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listHeaders(args: ListHeadersArgs, opts?: pulumi.InvokeOptions): Promise<ListHeadersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:listHeaders", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListHeadersArgs {
    /**
     * The ID of the service
     */
    serviceId: string;
}

export interface ListHeadersResult {
    readonly items: outputs.services.HeaderWithCursor[];
}
export function listHeadersOutput(args: ListHeadersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListHeadersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:services:listHeaders", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListHeadersOutputArgs {
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
