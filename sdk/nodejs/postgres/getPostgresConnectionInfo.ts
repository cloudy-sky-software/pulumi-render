// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getPostgresConnectionInfo(args: GetPostgresConnectionInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetPostgresConnectionInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:postgres:getPostgresConnectionInfo", {
        "postgresId": args.postgresId,
    }, opts);
}

export interface GetPostgresConnectionInfoArgs {
    postgresId: string;
}

export interface GetPostgresConnectionInfoResult {
    readonly externalConnectionString: string;
    readonly internalConnectionString: string;
    readonly password: string;
    readonly psqlCommand: string;
}
export function getPostgresConnectionInfoOutput(args: GetPostgresConnectionInfoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPostgresConnectionInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:postgres:getPostgresConnectionInfo", {
        "postgresId": args.postgresId,
    }, opts);
}

export interface GetPostgresConnectionInfoOutputArgs {
    postgresId: pulumi.Input<string>;
}
