// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Postgres.Outputs
{

    [OutputType]
    public sealed class Postgres
    {
        public readonly string CreatedAt;
        /// <summary>
        /// The URL to view the Postgres instance in the Render Dashboard
        /// </summary>
        public readonly string DashboardUrl;
        public readonly string DatabaseName;
        public readonly string DatabaseUser;
        public readonly int? DiskSizeGB;
        public readonly string? EnvironmentId;
        /// <summary>
        /// The time at which the database will be expire. Applies to free tier databases only.
        /// </summary>
        public readonly string? ExpiresAt;
        public readonly bool HighAvailabilityEnabled;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.CidrBlockAndDescription> IpAllowList;
        public readonly string Name;
        public readonly Outputs.Owner Owner;
        public readonly Pulumi.Render.Postgres.PostgresPlan Plan;
        public readonly string? PrimaryPostgresID;
        public readonly ImmutableArray<Outputs.ReadReplica> ReadReplicas;
        /// <summary>
        /// Defaults to "oregon"
        /// </summary>
        public readonly Pulumi.Render.Postgres.PostgresRegion Region;
        public readonly Pulumi.Render.Postgres.PostgresRole Role;
        public readonly Pulumi.Render.Postgres.PostgresStatus Status;
        public readonly Pulumi.Render.Postgres.PostgresSuspended Suspended;
        public readonly ImmutableArray<Pulumi.Render.Postgres.PostgresSuspendersItem> Suspenders;
        public readonly string UpdatedAt;
        /// <summary>
        /// The PostgreSQL version
        /// </summary>
        public readonly Pulumi.Render.Postgres.PostgresVersion Version;

        [OutputConstructor]
        private Postgres(
            string createdAt,

            string dashboardUrl,

            string databaseName,

            string databaseUser,

            int? diskSizeGB,

            string? environmentId,

            string? expiresAt,

            bool highAvailabilityEnabled,

            string id,

            ImmutableArray<Outputs.CidrBlockAndDescription> ipAllowList,

            string name,

            Outputs.Owner owner,

            Pulumi.Render.Postgres.PostgresPlan plan,

            string? primaryPostgresID,

            ImmutableArray<Outputs.ReadReplica> readReplicas,

            Pulumi.Render.Postgres.PostgresRegion region,

            Pulumi.Render.Postgres.PostgresRole role,

            Pulumi.Render.Postgres.PostgresStatus status,

            Pulumi.Render.Postgres.PostgresSuspended suspended,

            ImmutableArray<Pulumi.Render.Postgres.PostgresSuspendersItem> suspenders,

            string updatedAt,

            Pulumi.Render.Postgres.PostgresVersion version)
        {
            CreatedAt = createdAt;
            DashboardUrl = dashboardUrl;
            DatabaseName = databaseName;
            DatabaseUser = databaseUser;
            DiskSizeGB = diskSizeGB;
            EnvironmentId = environmentId;
            ExpiresAt = expiresAt;
            HighAvailabilityEnabled = highAvailabilityEnabled;
            Id = id;
            IpAllowList = ipAllowList;
            Name = name;
            Owner = owner;
            Plan = plan;
            PrimaryPostgresID = primaryPostgresID;
            ReadReplicas = readReplicas;
            Region = region;
            Role = role;
            Status = status;
            Suspended = suspended;
            Suspenders = suspenders;
            UpdatedAt = updatedAt;
            Version = version;
        }
    }
}
