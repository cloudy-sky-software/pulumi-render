// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.Render.EnvGroups
{
    [EnumType]
    public readonly struct ServiceLinkType : IEquatable<ServiceLinkType>
    {
        private readonly string _value;

        private ServiceLinkType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ServiceLinkType Static { get; } = new ServiceLinkType("static");
        public static ServiceLinkType Web { get; } = new ServiceLinkType("web");
        public static ServiceLinkType Pserv { get; } = new ServiceLinkType("pserv");
        public static ServiceLinkType Worker { get; } = new ServiceLinkType("worker");
        public static ServiceLinkType Cron { get; } = new ServiceLinkType("cron");

        public static bool operator ==(ServiceLinkType left, ServiceLinkType right) => left.Equals(right);
        public static bool operator !=(ServiceLinkType left, ServiceLinkType right) => !left.Equals(right);

        public static explicit operator string(ServiceLinkType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ServiceLinkType other && Equals(other);
        public bool Equals(ServiceLinkType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
