// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Owners
{
    public static class ListOwnerMembers
    {
        public static Task<ListOwnerMembersResult> InvokeAsync(ListOwnerMembersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListOwnerMembersResult>("render:owners:listOwnerMembers", args ?? new ListOwnerMembersArgs(), options.WithDefaults());

        public static Output<ListOwnerMembersResult> Invoke(ListOwnerMembersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListOwnerMembersResult>("render:owners:listOwnerMembers", args ?? new ListOwnerMembersInvokeArgs(), options.WithDefaults());

        public static Output<ListOwnerMembersResult> Invoke(ListOwnerMembersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ListOwnerMembersResult>("render:owners:listOwnerMembers", args ?? new ListOwnerMembersInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListOwnerMembersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the team
        /// </summary>
        [Input("ownerId", required: true)]
        public string OwnerId { get; set; } = null!;

        public ListOwnerMembersArgs()
        {
        }
        public static new ListOwnerMembersArgs Empty => new ListOwnerMembersArgs();
    }

    public sealed class ListOwnerMembersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the team
        /// </summary>
        [Input("ownerId", required: true)]
        public Input<string> OwnerId { get; set; } = null!;

        public ListOwnerMembersInvokeArgs()
        {
        }
        public static new ListOwnerMembersInvokeArgs Empty => new ListOwnerMembersInvokeArgs();
    }


    [OutputType]
    public sealed class ListOwnerMembersResult
    {
        public readonly ImmutableArray<Outputs.TeamMember> Items;

        [OutputConstructor]
        private ListOwnerMembersResult(ImmutableArray<Outputs.TeamMember> items)
        {
            Items = items;
        }
    }
}
