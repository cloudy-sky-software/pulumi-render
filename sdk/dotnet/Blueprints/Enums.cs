// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.Render.Blueprints
{
    [EnumType]
    public readonly struct BlueprintWithCursorBlueprintPropertiesStatus : IEquatable<BlueprintWithCursorBlueprintPropertiesStatus>
    {
        private readonly string _value;

        private BlueprintWithCursorBlueprintPropertiesStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static BlueprintWithCursorBlueprintPropertiesStatus Created { get; } = new BlueprintWithCursorBlueprintPropertiesStatus("created");
        public static BlueprintWithCursorBlueprintPropertiesStatus Paused { get; } = new BlueprintWithCursorBlueprintPropertiesStatus("paused");
        public static BlueprintWithCursorBlueprintPropertiesStatus InSync { get; } = new BlueprintWithCursorBlueprintPropertiesStatus("in_sync");
        public static BlueprintWithCursorBlueprintPropertiesStatus Syncing { get; } = new BlueprintWithCursorBlueprintPropertiesStatus("syncing");
        public static BlueprintWithCursorBlueprintPropertiesStatus Error { get; } = new BlueprintWithCursorBlueprintPropertiesStatus("error");

        public static bool operator ==(BlueprintWithCursorBlueprintPropertiesStatus left, BlueprintWithCursorBlueprintPropertiesStatus right) => left.Equals(right);
        public static bool operator !=(BlueprintWithCursorBlueprintPropertiesStatus left, BlueprintWithCursorBlueprintPropertiesStatus right) => !left.Equals(right);

        public static explicit operator string(BlueprintWithCursorBlueprintPropertiesStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is BlueprintWithCursorBlueprintPropertiesStatus other && Equals(other);
        public bool Equals(BlueprintWithCursorBlueprintPropertiesStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// type of the resource (ex. web_service or postgres)
    /// </summary>
    [EnumType]
    public readonly struct GetBlueprintPropertiesResourcesItemPropertiesType : IEquatable<GetBlueprintPropertiesResourcesItemPropertiesType>
    {
        private readonly string _value;

        private GetBlueprintPropertiesResourcesItemPropertiesType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static GetBlueprintPropertiesResourcesItemPropertiesType StaticSite { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("static_site");
        public static GetBlueprintPropertiesResourcesItemPropertiesType WebService { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("web_service");
        public static GetBlueprintPropertiesResourcesItemPropertiesType PrivateService { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("private_service");
        public static GetBlueprintPropertiesResourcesItemPropertiesType BackgroundWorker { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("background_worker");
        public static GetBlueprintPropertiesResourcesItemPropertiesType CronJob { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("cron_job");
        public static GetBlueprintPropertiesResourcesItemPropertiesType Redis { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("redis");
        public static GetBlueprintPropertiesResourcesItemPropertiesType KeyValue { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("key_value");
        public static GetBlueprintPropertiesResourcesItemPropertiesType Postgres { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("postgres");
        public static GetBlueprintPropertiesResourcesItemPropertiesType EnvironmentGroup { get; } = new GetBlueprintPropertiesResourcesItemPropertiesType("environment_group");

        public static bool operator ==(GetBlueprintPropertiesResourcesItemPropertiesType left, GetBlueprintPropertiesResourcesItemPropertiesType right) => left.Equals(right);
        public static bool operator !=(GetBlueprintPropertiesResourcesItemPropertiesType left, GetBlueprintPropertiesResourcesItemPropertiesType right) => !left.Equals(right);

        public static explicit operator string(GetBlueprintPropertiesResourcesItemPropertiesType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GetBlueprintPropertiesResourcesItemPropertiesType other && Equals(other);
        public bool Equals(GetBlueprintPropertiesResourcesItemPropertiesType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct GetBlueprintPropertiesStatus : IEquatable<GetBlueprintPropertiesStatus>
    {
        private readonly string _value;

        private GetBlueprintPropertiesStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static GetBlueprintPropertiesStatus Created { get; } = new GetBlueprintPropertiesStatus("created");
        public static GetBlueprintPropertiesStatus Paused { get; } = new GetBlueprintPropertiesStatus("paused");
        public static GetBlueprintPropertiesStatus InSync { get; } = new GetBlueprintPropertiesStatus("in_sync");
        public static GetBlueprintPropertiesStatus Syncing { get; } = new GetBlueprintPropertiesStatus("syncing");
        public static GetBlueprintPropertiesStatus Error { get; } = new GetBlueprintPropertiesStatus("error");

        public static bool operator ==(GetBlueprintPropertiesStatus left, GetBlueprintPropertiesStatus right) => left.Equals(right);
        public static bool operator !=(GetBlueprintPropertiesStatus left, GetBlueprintPropertiesStatus right) => !left.Equals(right);

        public static explicit operator string(GetBlueprintPropertiesStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GetBlueprintPropertiesStatus other && Equals(other);
        public bool Equals(GetBlueprintPropertiesStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct SyncWithCursorSyncPropertiesState : IEquatable<SyncWithCursorSyncPropertiesState>
    {
        private readonly string _value;

        private SyncWithCursorSyncPropertiesState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SyncWithCursorSyncPropertiesState Created { get; } = new SyncWithCursorSyncPropertiesState("created");
        public static SyncWithCursorSyncPropertiesState Pending { get; } = new SyncWithCursorSyncPropertiesState("pending");
        public static SyncWithCursorSyncPropertiesState Running { get; } = new SyncWithCursorSyncPropertiesState("running");
        public static SyncWithCursorSyncPropertiesState Error { get; } = new SyncWithCursorSyncPropertiesState("error");
        public static SyncWithCursorSyncPropertiesState Success { get; } = new SyncWithCursorSyncPropertiesState("success");

        public static bool operator ==(SyncWithCursorSyncPropertiesState left, SyncWithCursorSyncPropertiesState right) => left.Equals(right);
        public static bool operator !=(SyncWithCursorSyncPropertiesState left, SyncWithCursorSyncPropertiesState right) => !left.Equals(right);

        public static explicit operator string(SyncWithCursorSyncPropertiesState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SyncWithCursorSyncPropertiesState other && Equals(other);
        public bool Equals(SyncWithCursorSyncPropertiesState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
