// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blueprints

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListBlueprints(ctx *pulumi.Context, args *ListBlueprintsArgs, opts ...pulumi.InvokeOption) (*ListBlueprintsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListBlueprintsResult
	err := ctx.Invoke("render:blueprints:listBlueprints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListBlueprintsArgs struct {
}

type ListBlueprintsResult struct {
	Items []BlueprintWithCursor `pulumi:"items"`
}

func ListBlueprintsOutput(ctx *pulumi.Context, args ListBlueprintsOutputArgs, opts ...pulumi.InvokeOption) ListBlueprintsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListBlueprintsResult, error) {
			args := v.(ListBlueprintsArgs)
			r, err := ListBlueprints(ctx, &args, opts...)
			var s ListBlueprintsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListBlueprintsResultOutput)
}

type ListBlueprintsOutputArgs struct {
}

func (ListBlueprintsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBlueprintsArgs)(nil)).Elem()
}

type ListBlueprintsResultOutput struct{ *pulumi.OutputState }

func (ListBlueprintsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBlueprintsResult)(nil)).Elem()
}

func (o ListBlueprintsResultOutput) ToListBlueprintsResultOutput() ListBlueprintsResultOutput {
	return o
}

func (o ListBlueprintsResultOutput) ToListBlueprintsResultOutputWithContext(ctx context.Context) ListBlueprintsResultOutput {
	return o
}

func (o ListBlueprintsResultOutput) Items() BlueprintWithCursorArrayOutput {
	return o.ApplyT(func(v ListBlueprintsResult) []BlueprintWithCursor { return v.Items }).(BlueprintWithCursorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListBlueprintsResultOutput{})
}
