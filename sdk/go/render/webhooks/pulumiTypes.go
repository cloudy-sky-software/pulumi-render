// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webhooks

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type WebhookWithCursor struct {
	Cursor  string                             `pulumi:"cursor"`
	Webhook WebhookWithCursorWebhookProperties `pulumi:"webhook"`
}

type WebhookWithCursorOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursor)(nil)).Elem()
}

func (o WebhookWithCursorOutput) ToWebhookWithCursorOutput() WebhookWithCursorOutput {
	return o
}

func (o WebhookWithCursorOutput) ToWebhookWithCursorOutputWithContext(ctx context.Context) WebhookWithCursorOutput {
	return o
}

func (o WebhookWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o WebhookWithCursorOutput) Webhook() WebhookWithCursorWebhookPropertiesOutput {
	return o.ApplyT(func(v WebhookWithCursor) WebhookWithCursorWebhookProperties { return v.Webhook }).(WebhookWithCursorWebhookPropertiesOutput)
}

type WebhookWithCursorArrayOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookWithCursor)(nil)).Elem()
}

func (o WebhookWithCursorArrayOutput) ToWebhookWithCursorArrayOutput() WebhookWithCursorArrayOutput {
	return o
}

func (o WebhookWithCursorArrayOutput) ToWebhookWithCursorArrayOutputWithContext(ctx context.Context) WebhookWithCursorArrayOutput {
	return o
}

func (o WebhookWithCursorArrayOutput) Index(i pulumi.IntInput) WebhookWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookWithCursor {
		return vs[0].([]WebhookWithCursor)[vs[1].(int)]
	}).(WebhookWithCursorOutput)
}

type WebhookWithCursorWebhookProperties struct {
	Enabled bool `pulumi:"enabled"`
	// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
	EventFilter []WebhookWithCursorWebhookPropertiesEventFilterItem `pulumi:"eventFilter"`
	Id          string                                              `pulumi:"id"`
	Name        string                                              `pulumi:"name"`
	Secret      string                                              `pulumi:"secret"`
	Url         string                                              `pulumi:"url"`
}

type WebhookWithCursorWebhookPropertiesOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorWebhookPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursorWebhookProperties)(nil)).Elem()
}

func (o WebhookWithCursorWebhookPropertiesOutput) ToWebhookWithCursorWebhookPropertiesOutput() WebhookWithCursorWebhookPropertiesOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesOutput) ToWebhookWithCursorWebhookPropertiesOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
func (o WebhookWithCursorWebhookPropertiesOutput) EventFilter() WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) []WebhookWithCursorWebhookPropertiesEventFilterItem {
		return v.EventFilter
	}).(WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Id }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Secret }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Url }).(pulumi.StringOutput)
}

type WebhookWithCursorpropertieswebhook struct {
	Enabled bool `pulumi:"enabled"`
	// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
	EventFilter []WebhookWithCursorpropertieswebhookEventFilterItem `pulumi:"eventFilter"`
	Id          string                                              `pulumi:"id"`
	Name        string                                              `pulumi:"name"`
	Secret      string                                              `pulumi:"secret"`
	Url         string                                              `pulumi:"url"`
}

func init() {
	pulumi.RegisterOutputType(WebhookWithCursorOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorArrayOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorWebhookPropertiesOutput{})
}
