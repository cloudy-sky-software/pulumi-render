// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listJob(args: ListJobArgs, opts?: pulumi.InvokeOptions): Promise<ListJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:services:listJob", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListJobArgs {
    /**
     * The ID of the service
     */
    serviceId: string;
}

export interface ListJobResult {
    readonly items: outputs.services.JobWithCursor[];
}
export function listJobOutput(args: ListJobOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("render:services:listJob", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface ListJobOutputArgs {
    /**
     * The ID of the service
     */
    serviceId: pulumi.Input<string>;
}
