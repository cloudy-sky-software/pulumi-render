// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRedis(ctx *pulumi.Context, args *LookupRedisArgs, opts ...pulumi.InvokeOption) (*LookupRedisResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRedisResult
	err := ctx.Invoke("render:redis:getRedis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupRedisArgs struct {
	RedisId string `pulumi:"redisId"`
}

// A Redis instance
type LookupRedisResult struct {
	// The creation time of the Redis instance
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the environment the Redis instance is associated with
	EnvironmentId *string `pulumi:"environmentId"`
	// The ID of the Redis instance
	Id string `pulumi:"id"`
	// The IP allow list for the Redis instance
	IpAllowList []CidrBlockAndDescription         `pulumi:"ipAllowList"`
	Maintenance *RedisDetailMaintenanceProperties `pulumi:"maintenance"`
	// The name of the Redis instance
	Name string `pulumi:"name"`
	// Options for a Redis instance
	Options RedisOptions    `pulumi:"options"`
	Owner   Owner           `pulumi:"owner"`
	Plan    RedisDetailPlan `pulumi:"plan"`
	// Defaults to "oregon"
	Region RedisDetailRegion `pulumi:"region"`
	Status RedisDetailStatus `pulumi:"status"`
	// The last updated time of the Redis instance
	UpdatedAt string `pulumi:"updatedAt"`
	// The version of Redis
	Version string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for LookupRedisResult
func (val *LookupRedisResult) Defaults() *LookupRedisResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if internal.IsZero(tmp.Region) {
		tmp.Region = RedisDetailRegion("oregon")
	}
	return &tmp
}
func LookupRedisOutput(ctx *pulumi.Context, args LookupRedisOutputArgs, opts ...pulumi.InvokeOption) LookupRedisResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRedisResultOutput, error) {
			args := v.(LookupRedisArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:redis:getRedis", args, LookupRedisResultOutput{}, options).(LookupRedisResultOutput), nil
		}).(LookupRedisResultOutput)
}

type LookupRedisOutputArgs struct {
	RedisId pulumi.StringInput `pulumi:"redisId"`
}

func (LookupRedisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisArgs)(nil)).Elem()
}

// A Redis instance
type LookupRedisResultOutput struct{ *pulumi.OutputState }

func (LookupRedisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisResult)(nil)).Elem()
}

func (o LookupRedisResultOutput) ToLookupRedisResultOutput() LookupRedisResultOutput {
	return o
}

func (o LookupRedisResultOutput) ToLookupRedisResultOutputWithContext(ctx context.Context) LookupRedisResultOutput {
	return o
}

// The creation time of the Redis instance
func (o LookupRedisResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the environment the Redis instance is associated with
func (o LookupRedisResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRedisResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The ID of the Redis instance
func (o LookupRedisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP allow list for the Redis instance
func (o LookupRedisResultOutput) IpAllowList() CidrBlockAndDescriptionArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []CidrBlockAndDescription { return v.IpAllowList }).(CidrBlockAndDescriptionArrayOutput)
}

func (o LookupRedisResultOutput) Maintenance() RedisDetailMaintenancePropertiesPtrOutput {
	return o.ApplyT(func(v LookupRedisResult) *RedisDetailMaintenanceProperties { return v.Maintenance }).(RedisDetailMaintenancePropertiesPtrOutput)
}

// The name of the Redis instance
func (o LookupRedisResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Name }).(pulumi.StringOutput)
}

// Options for a Redis instance
func (o LookupRedisResultOutput) Options() RedisOptionsOutput {
	return o.ApplyT(func(v LookupRedisResult) RedisOptions { return v.Options }).(RedisOptionsOutput)
}

func (o LookupRedisResultOutput) Owner() OwnerOutput {
	return o.ApplyT(func(v LookupRedisResult) Owner { return v.Owner }).(OwnerOutput)
}

func (o LookupRedisResultOutput) Plan() RedisDetailPlanOutput {
	return o.ApplyT(func(v LookupRedisResult) RedisDetailPlan { return v.Plan }).(RedisDetailPlanOutput)
}

// Defaults to "oregon"
func (o LookupRedisResultOutput) Region() RedisDetailRegionOutput {
	return o.ApplyT(func(v LookupRedisResult) RedisDetailRegion { return v.Region }).(RedisDetailRegionOutput)
}

func (o LookupRedisResultOutput) Status() RedisDetailStatusOutput {
	return o.ApplyT(func(v LookupRedisResult) RedisDetailStatus { return v.Status }).(RedisDetailStatusOutput)
}

// The last updated time of the Redis instance
func (o LookupRedisResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The version of Redis
func (o LookupRedisResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRedisResultOutput{})
}
