// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetResourceLogStream(ctx *pulumi.Context, args *GetResourceLogStreamArgs, opts ...pulumi.InvokeOption) (*GetResourceLogStreamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourceLogStreamResult
	err := ctx.Invoke("render:logs:getResourceLogStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetResourceLogStreamArgs struct {
	// The ID of the resource (server, cron job, postgres, or redis) whose log streams should be returned
	ResourceId string `pulumi:"resourceId"`
}

// Resource log stream overrides
type GetResourceLogStreamResult struct {
	// The endpoint to stream logs to. Must be present if setting is send. Cannot be present if setting is drop.
	Endpoint *string `pulumi:"endpoint"`
	// The ID of the resource.
	ResourceId *string `pulumi:"resourceId"`
	// Whether to send logs or drop them.
	Setting *GetResourceLogStreamPropertiesSetting `pulumi:"setting"`
}

func GetResourceLogStreamOutput(ctx *pulumi.Context, args GetResourceLogStreamOutputArgs, opts ...pulumi.InvokeOption) GetResourceLogStreamResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetResourceLogStreamResultOutput, error) {
			args := v.(GetResourceLogStreamArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("render:logs:getResourceLogStream", args, GetResourceLogStreamResultOutput{}, options).(GetResourceLogStreamResultOutput), nil
		}).(GetResourceLogStreamResultOutput)
}

type GetResourceLogStreamOutputArgs struct {
	// The ID of the resource (server, cron job, postgres, or redis) whose log streams should be returned
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (GetResourceLogStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceLogStreamArgs)(nil)).Elem()
}

// Resource log stream overrides
type GetResourceLogStreamResultOutput struct{ *pulumi.OutputState }

func (GetResourceLogStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceLogStreamResult)(nil)).Elem()
}

func (o GetResourceLogStreamResultOutput) ToGetResourceLogStreamResultOutput() GetResourceLogStreamResultOutput {
	return o
}

func (o GetResourceLogStreamResultOutput) ToGetResourceLogStreamResultOutputWithContext(ctx context.Context) GetResourceLogStreamResultOutput {
	return o
}

// The endpoint to stream logs to. Must be present if setting is send. Cannot be present if setting is drop.
func (o GetResourceLogStreamResultOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourceLogStreamResult) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The ID of the resource.
func (o GetResourceLogStreamResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourceLogStreamResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Whether to send logs or drop them.
func (o GetResourceLogStreamResultOutput) Setting() GetResourceLogStreamPropertiesSettingPtrOutput {
	return o.ApplyT(func(v GetResourceLogStreamResult) *GetResourceLogStreamPropertiesSetting { return v.Setting }).(GetResourceLogStreamPropertiesSettingPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourceLogStreamResultOutput{})
}
