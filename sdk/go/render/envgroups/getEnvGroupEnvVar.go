// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package envgroups

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEnvGroupEnvVar(ctx *pulumi.Context, args *GetEnvGroupEnvVarArgs, opts ...pulumi.InvokeOption) (*GetEnvGroupEnvVarResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvGroupEnvVarResult
	err := ctx.Invoke("render:env-groups:getEnvGroupEnvVar", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEnvGroupEnvVarArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId string `pulumi:"envGroupId"`
	// The name of the environment variable
	EnvVarKey string `pulumi:"envVarKey"`
}

type GetEnvGroupEnvVarResult struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func GetEnvGroupEnvVarOutput(ctx *pulumi.Context, args GetEnvGroupEnvVarOutputArgs, opts ...pulumi.InvokeOption) GetEnvGroupEnvVarResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnvGroupEnvVarResult, error) {
			args := v.(GetEnvGroupEnvVarArgs)
			r, err := GetEnvGroupEnvVar(ctx, &args, opts...)
			var s GetEnvGroupEnvVarResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnvGroupEnvVarResultOutput)
}

type GetEnvGroupEnvVarOutputArgs struct {
	// Filter for resources that belong to an environment group
	EnvGroupId pulumi.StringInput `pulumi:"envGroupId"`
	// The name of the environment variable
	EnvVarKey pulumi.StringInput `pulumi:"envVarKey"`
}

func (GetEnvGroupEnvVarOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvGroupEnvVarArgs)(nil)).Elem()
}

type GetEnvGroupEnvVarResultOutput struct{ *pulumi.OutputState }

func (GetEnvGroupEnvVarResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvGroupEnvVarResult)(nil)).Elem()
}

func (o GetEnvGroupEnvVarResultOutput) ToGetEnvGroupEnvVarResultOutput() GetEnvGroupEnvVarResultOutput {
	return o
}

func (o GetEnvGroupEnvVarResultOutput) ToGetEnvGroupEnvVarResultOutputWithContext(ctx context.Context) GetEnvGroupEnvVarResultOutput {
	return o
}

func (o GetEnvGroupEnvVarResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvGroupEnvVarResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetEnvGroupEnvVarResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvGroupEnvVarResult) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvGroupEnvVarResultArrayOutput struct{ *pulumi.OutputState }

func (GetEnvGroupEnvVarResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvGroupEnvVarResult)(nil)).Elem()
}

func (o GetEnvGroupEnvVarResultArrayOutput) ToGetEnvGroupEnvVarResultArrayOutput() GetEnvGroupEnvVarResultArrayOutput {
	return o
}

func (o GetEnvGroupEnvVarResultArrayOutput) ToGetEnvGroupEnvVarResultArrayOutputWithContext(ctx context.Context) GetEnvGroupEnvVarResultArrayOutput {
	return o
}

func (o GetEnvGroupEnvVarResultArrayOutput) Index(i pulumi.IntInput) GetEnvGroupEnvVarResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvGroupEnvVarResult {
		return vs[0].([]GetEnvGroupEnvVarResult)[vs[1].(int)]
	}).(GetEnvGroupEnvVarResultOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvGroupEnvVarResultOutput{})
}
