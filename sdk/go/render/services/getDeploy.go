// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDeploy(ctx *pulumi.Context, args *LookupDeployArgs, opts ...pulumi.InvokeOption) (*LookupDeployResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeployResult
	err := ctx.Invoke("render:services:getDeploy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeployArgs struct {
	// The ID of the deploy
	DeployId string `pulumi:"deployId"`
	// The ID of the service
	ServiceId string `pulumi:"serviceId"`
}

type LookupDeployResult struct {
	Commit     *DeployCommitProperties `pulumi:"commit"`
	CreatedAt  *string                 `pulumi:"createdAt"`
	FinishedAt *string                 `pulumi:"finishedAt"`
	Id         string                  `pulumi:"id"`
	// Image information used when creating the deploy. Not present for Git-backed deploys
	Image     *DeployImageProperties `pulumi:"image"`
	Status    *DeployStatus          `pulumi:"status"`
	Trigger   *DeployTrigger         `pulumi:"trigger"`
	UpdatedAt *string                `pulumi:"updatedAt"`
}

func LookupDeployOutput(ctx *pulumi.Context, args LookupDeployOutputArgs, opts ...pulumi.InvokeOption) LookupDeployResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeployResultOutput, error) {
			args := v.(LookupDeployArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDeployResult
			secret, err := ctx.InvokePackageRaw("render:services:getDeploy", args, &rv, "", opts...)
			if err != nil {
				return LookupDeployResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDeployResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDeployResultOutput), nil
			}
			return output, nil
		}).(LookupDeployResultOutput)
}

type LookupDeployOutputArgs struct {
	// The ID of the deploy
	DeployId pulumi.StringInput `pulumi:"deployId"`
	// The ID of the service
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupDeployOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployArgs)(nil)).Elem()
}

type LookupDeployResultOutput struct{ *pulumi.OutputState }

func (LookupDeployResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployResult)(nil)).Elem()
}

func (o LookupDeployResultOutput) ToLookupDeployResultOutput() LookupDeployResultOutput {
	return o
}

func (o LookupDeployResultOutput) ToLookupDeployResultOutputWithContext(ctx context.Context) LookupDeployResultOutput {
	return o
}

func (o LookupDeployResultOutput) Commit() DeployCommitPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *DeployCommitProperties { return v.Commit }).(DeployCommitPropertiesPtrOutput)
}

func (o LookupDeployResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupDeployResultOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o LookupDeployResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
func (o LookupDeployResultOutput) Image() DeployImagePropertiesPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *DeployImageProperties { return v.Image }).(DeployImagePropertiesPtrOutput)
}

func (o LookupDeployResultOutput) Status() DeployStatusPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *DeployStatus { return v.Status }).(DeployStatusPtrOutput)
}

func (o LookupDeployResultOutput) Trigger() DeployTriggerPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *DeployTrigger { return v.Trigger }).(DeployTriggerPtrOutput)
}

func (o LookupDeployResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeployResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type LookupDeployResultPtrOutput struct{ *pulumi.OutputState }

func (LookupDeployResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LookupDeployResult)(nil)).Elem()
}

func (o LookupDeployResultPtrOutput) ToLookupDeployResultPtrOutput() LookupDeployResultPtrOutput {
	return o
}

func (o LookupDeployResultPtrOutput) ToLookupDeployResultPtrOutputWithContext(ctx context.Context) LookupDeployResultPtrOutput {
	return o
}

func (o LookupDeployResultPtrOutput) Elem() LookupDeployResultOutput {
	return o.ApplyT(func(v *LookupDeployResult) LookupDeployResult {
		if v != nil {
			return *v
		}
		var ret LookupDeployResult
		return ret
	}).(LookupDeployResultOutput)
}

func (o LookupDeployResultPtrOutput) Commit() DeployCommitPropertiesPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *DeployCommitProperties {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(DeployCommitPropertiesPtrOutput)
}

func (o LookupDeployResultPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o LookupDeployResultPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o LookupDeployResultPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Image information used when creating the deploy. Not present for Git-backed deploys
func (o LookupDeployResultPtrOutput) Image() DeployImagePropertiesPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *DeployImageProperties {
		if v == nil {
			return nil
		}
		return v.Image
	}).(DeployImagePropertiesPtrOutput)
}

func (o LookupDeployResultPtrOutput) Status() DeployStatusPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *DeployStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DeployStatusPtrOutput)
}

func (o LookupDeployResultPtrOutput) Trigger() DeployTriggerPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *DeployTrigger {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(DeployTriggerPtrOutput)
}

func (o LookupDeployResultPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookupDeployResult) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeployResultOutput{})
}
