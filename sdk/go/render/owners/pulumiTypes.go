// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package owners

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ListOwnersItemProperties struct {
	Cursor *string `pulumi:"cursor"`
	Owner  *Owner  `pulumi:"owner"`
}

type ListOwnersItemPropertiesOutput struct{ *pulumi.OutputState }

func (ListOwnersItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListOwnersItemProperties)(nil)).Elem()
}

func (o ListOwnersItemPropertiesOutput) ToListOwnersItemPropertiesOutput() ListOwnersItemPropertiesOutput {
	return o
}

func (o ListOwnersItemPropertiesOutput) ToListOwnersItemPropertiesOutputWithContext(ctx context.Context) ListOwnersItemPropertiesOutput {
	return o
}

func (o ListOwnersItemPropertiesOutput) Cursor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListOwnersItemProperties) *string { return v.Cursor }).(pulumi.StringPtrOutput)
}

func (o ListOwnersItemPropertiesOutput) Owner() OwnerPtrOutput {
	return o.ApplyT(func(v ListOwnersItemProperties) *Owner { return v.Owner }).(OwnerPtrOutput)
}

type ListOwnersItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ListOwnersItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListOwnersItemProperties)(nil)).Elem()
}

func (o ListOwnersItemPropertiesArrayOutput) ToListOwnersItemPropertiesArrayOutput() ListOwnersItemPropertiesArrayOutput {
	return o
}

func (o ListOwnersItemPropertiesArrayOutput) ToListOwnersItemPropertiesArrayOutputWithContext(ctx context.Context) ListOwnersItemPropertiesArrayOutput {
	return o
}

func (o ListOwnersItemPropertiesArrayOutput) Index(i pulumi.IntInput) ListOwnersItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListOwnersItemProperties {
		return vs[0].([]ListOwnersItemProperties)[vs[1].(int)]
	}).(ListOwnersItemPropertiesOutput)
}

type Owner struct {
	Email string    `pulumi:"email"`
	Name  string    `pulumi:"name"`
	Type  OwnerType `pulumi:"type"`
}

type OwnerOutput struct{ *pulumi.OutputState }

func (OwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Owner)(nil)).Elem()
}

func (o OwnerOutput) ToOwnerOutput() OwnerOutput {
	return o
}

func (o OwnerOutput) ToOwnerOutputWithContext(ctx context.Context) OwnerOutput {
	return o
}

func (o OwnerOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v Owner) string { return v.Email }).(pulumi.StringOutput)
}

func (o OwnerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Owner) string { return v.Name }).(pulumi.StringOutput)
}

func (o OwnerOutput) Type() OwnerTypeOutput {
	return o.ApplyT(func(v Owner) OwnerType { return v.Type }).(OwnerTypeOutput)
}

type OwnerPtrOutput struct{ *pulumi.OutputState }

func (OwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Owner)(nil)).Elem()
}

func (o OwnerPtrOutput) ToOwnerPtrOutput() OwnerPtrOutput {
	return o
}

func (o OwnerPtrOutput) ToOwnerPtrOutputWithContext(ctx context.Context) OwnerPtrOutput {
	return o
}

func (o OwnerPtrOutput) Elem() OwnerOutput {
	return o.ApplyT(func(v *Owner) Owner {
		if v != nil {
			return *v
		}
		var ret Owner
		return ret
	}).(OwnerOutput)
}

func (o OwnerPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Owner) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

func (o OwnerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Owner) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o OwnerPtrOutput) Type() OwnerTypePtrOutput {
	return o.ApplyT(func(v *Owner) *OwnerType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(OwnerTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListOwnersItemPropertiesOutput{})
	pulumi.RegisterOutputType(ListOwnersItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(OwnerOutput{})
	pulumi.RegisterOutputType(OwnerPtrOutput{})
}
