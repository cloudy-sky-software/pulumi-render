// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Owners
{
    public static class GetOwner
    {
        public static Task<GetOwnerResult> InvokeAsync(GetOwnerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOwnerResult>("render:owners:getOwner", args ?? new GetOwnerArgs(), options.WithDefaults());

        public static Output<GetOwnerResult> Invoke(GetOwnerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOwnerResult>("render:owners:getOwner", args ?? new GetOwnerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOwnerArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) The ID of the user or team
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetOwnerArgs()
        {
        }
    }

    public sealed class GetOwnerInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) The ID of the user or team
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetOwnerInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOwnerResult
    {
        public readonly Outputs.Owner Items;

        [OutputConstructor]
        private GetOwnerResult(Outputs.Owner items)
        {
            Items = items;
        }
    }
}
