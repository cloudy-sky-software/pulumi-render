// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Render.Services
{
    public static class GetStaticSiteOutput
    {
        public static Task<GetStaticSiteOutputResult> InvokeAsync(GetStaticSiteOutputArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticSiteOutputResult>("render:services:getStaticSiteOutput", args ?? new GetStaticSiteOutputArgs(), options.WithDefaults());

        public static Output<GetStaticSiteOutputResult> Invoke(GetStaticSiteOutputInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticSiteOutputResult>("render:services:getStaticSiteOutput", args ?? new GetStaticSiteOutputInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticSiteOutputArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetStaticSiteOutputArgs()
        {
        }
        public static new GetStaticSiteOutputArgs Empty => new GetStaticSiteOutputArgs();
    }

    public sealed class GetStaticSiteOutputInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetStaticSiteOutputInvokeArgs()
        {
        }
        public static new GetStaticSiteOutputInvokeArgs Empty => new GetStaticSiteOutputInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticSiteOutputResult
    {
        public readonly Outputs.GetStaticSiteOutput Items;

        [OutputConstructor]
        private GetStaticSiteOutputResult(Outputs.GetStaticSiteOutput items)
        {
            Items = items;
        }
    }
}
