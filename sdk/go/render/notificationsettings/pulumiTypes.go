// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notificationsettings

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetOwnerNotificationSettingProperties struct {
	EmailEnabled                bool                                                     `pulumi:"emailEnabled"`
	NotificationsToSend         GetOwnerNotificationSettingPropertiesNotificationsToSend `pulumi:"notificationsToSend"`
	OwnerId                     string                                                   `pulumi:"ownerId"`
	PreviewNotificationsEnabled bool                                                     `pulumi:"previewNotificationsEnabled"`
	SlackEnabled                bool                                                     `pulumi:"slackEnabled"`
}

type GetOwnerNotificationSettingPropertiesOutput struct{ *pulumi.OutputState }

func (GetOwnerNotificationSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOwnerNotificationSettingProperties)(nil)).Elem()
}

func (o GetOwnerNotificationSettingPropertiesOutput) ToGetOwnerNotificationSettingPropertiesOutput() GetOwnerNotificationSettingPropertiesOutput {
	return o
}

func (o GetOwnerNotificationSettingPropertiesOutput) ToGetOwnerNotificationSettingPropertiesOutputWithContext(ctx context.Context) GetOwnerNotificationSettingPropertiesOutput {
	return o
}

func (o GetOwnerNotificationSettingPropertiesOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOwnerNotificationSettingProperties) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

func (o GetOwnerNotificationSettingPropertiesOutput) NotificationsToSend() GetOwnerNotificationSettingPropertiesNotificationsToSendOutput {
	return o.ApplyT(func(v GetOwnerNotificationSettingProperties) GetOwnerNotificationSettingPropertiesNotificationsToSend {
		return v.NotificationsToSend
	}).(GetOwnerNotificationSettingPropertiesNotificationsToSendOutput)
}

func (o GetOwnerNotificationSettingPropertiesOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOwnerNotificationSettingProperties) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o GetOwnerNotificationSettingPropertiesOutput) PreviewNotificationsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOwnerNotificationSettingProperties) bool { return v.PreviewNotificationsEnabled }).(pulumi.BoolOutput)
}

func (o GetOwnerNotificationSettingPropertiesOutput) SlackEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOwnerNotificationSettingProperties) bool { return v.SlackEnabled }).(pulumi.BoolOutput)
}

type GetServiceNotificationOverrideProperties struct {
	NotificationsToSend         GetServiceNotificationOverridePropertiesNotificationsToSend         `pulumi:"notificationsToSend"`
	PreviewNotificationsEnabled GetServiceNotificationOverridePropertiesPreviewNotificationsEnabled `pulumi:"previewNotificationsEnabled"`
	ServiceId                   string                                                              `pulumi:"serviceId"`
}

type GetServiceNotificationOverridePropertiesOutput struct{ *pulumi.OutputState }

func (GetServiceNotificationOverridePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNotificationOverrideProperties)(nil)).Elem()
}

func (o GetServiceNotificationOverridePropertiesOutput) ToGetServiceNotificationOverridePropertiesOutput() GetServiceNotificationOverridePropertiesOutput {
	return o
}

func (o GetServiceNotificationOverridePropertiesOutput) ToGetServiceNotificationOverridePropertiesOutputWithContext(ctx context.Context) GetServiceNotificationOverridePropertiesOutput {
	return o
}

func (o GetServiceNotificationOverridePropertiesOutput) NotificationsToSend() GetServiceNotificationOverridePropertiesNotificationsToSendOutput {
	return o.ApplyT(func(v GetServiceNotificationOverrideProperties) GetServiceNotificationOverridePropertiesNotificationsToSend {
		return v.NotificationsToSend
	}).(GetServiceNotificationOverridePropertiesNotificationsToSendOutput)
}

func (o GetServiceNotificationOverridePropertiesOutput) PreviewNotificationsEnabled() GetServiceNotificationOverridePropertiesPreviewNotificationsEnabledOutput {
	return o.ApplyT(func(v GetServiceNotificationOverrideProperties) GetServiceNotificationOverridePropertiesPreviewNotificationsEnabled {
		return v.PreviewNotificationsEnabled
	}).(GetServiceNotificationOverridePropertiesPreviewNotificationsEnabledOutput)
}

func (o GetServiceNotificationOverridePropertiesOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNotificationOverrideProperties) string { return v.ServiceId }).(pulumi.StringOutput)
}

type NotificationOverrideWithCursor struct {
	Cursor   string                                           `pulumi:"cursor"`
	Override NotificationOverrideWithCursorOverrideProperties `pulumi:"override"`
}

type NotificationOverrideWithCursorOutput struct{ *pulumi.OutputState }

func (NotificationOverrideWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationOverrideWithCursor)(nil)).Elem()
}

func (o NotificationOverrideWithCursorOutput) ToNotificationOverrideWithCursorOutput() NotificationOverrideWithCursorOutput {
	return o
}

func (o NotificationOverrideWithCursorOutput) ToNotificationOverrideWithCursorOutputWithContext(ctx context.Context) NotificationOverrideWithCursorOutput {
	return o
}

func (o NotificationOverrideWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOverrideWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o NotificationOverrideWithCursorOutput) Override() NotificationOverrideWithCursorOverridePropertiesOutput {
	return o.ApplyT(func(v NotificationOverrideWithCursor) NotificationOverrideWithCursorOverrideProperties {
		return v.Override
	}).(NotificationOverrideWithCursorOverridePropertiesOutput)
}

type NotificationOverrideWithCursorArrayOutput struct{ *pulumi.OutputState }

func (NotificationOverrideWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationOverrideWithCursor)(nil)).Elem()
}

func (o NotificationOverrideWithCursorArrayOutput) ToNotificationOverrideWithCursorArrayOutput() NotificationOverrideWithCursorArrayOutput {
	return o
}

func (o NotificationOverrideWithCursorArrayOutput) ToNotificationOverrideWithCursorArrayOutputWithContext(ctx context.Context) NotificationOverrideWithCursorArrayOutput {
	return o
}

func (o NotificationOverrideWithCursorArrayOutput) Index(i pulumi.IntInput) NotificationOverrideWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationOverrideWithCursor {
		return vs[0].([]NotificationOverrideWithCursor)[vs[1].(int)]
	}).(NotificationOverrideWithCursorOutput)
}

type NotificationOverrideWithCursorOverrideProperties struct {
	NotificationsToSend         NotificationOverrideWithCursorOverridePropertiesNotificationsToSend         `pulumi:"notificationsToSend"`
	PreviewNotificationsEnabled NotificationOverrideWithCursorOverridePropertiesPreviewNotificationsEnabled `pulumi:"previewNotificationsEnabled"`
	ServiceId                   string                                                                      `pulumi:"serviceId"`
}

type NotificationOverrideWithCursorOverridePropertiesOutput struct{ *pulumi.OutputState }

func (NotificationOverrideWithCursorOverridePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationOverrideWithCursorOverrideProperties)(nil)).Elem()
}

func (o NotificationOverrideWithCursorOverridePropertiesOutput) ToNotificationOverrideWithCursorOverridePropertiesOutput() NotificationOverrideWithCursorOverridePropertiesOutput {
	return o
}

func (o NotificationOverrideWithCursorOverridePropertiesOutput) ToNotificationOverrideWithCursorOverridePropertiesOutputWithContext(ctx context.Context) NotificationOverrideWithCursorOverridePropertiesOutput {
	return o
}

func (o NotificationOverrideWithCursorOverridePropertiesOutput) NotificationsToSend() NotificationOverrideWithCursorOverridePropertiesNotificationsToSendOutput {
	return o.ApplyT(func(v NotificationOverrideWithCursorOverrideProperties) NotificationOverrideWithCursorOverridePropertiesNotificationsToSend {
		return v.NotificationsToSend
	}).(NotificationOverrideWithCursorOverridePropertiesNotificationsToSendOutput)
}

func (o NotificationOverrideWithCursorOverridePropertiesOutput) PreviewNotificationsEnabled() NotificationOverrideWithCursorOverridePropertiesPreviewNotificationsEnabledOutput {
	return o.ApplyT(func(v NotificationOverrideWithCursorOverrideProperties) NotificationOverrideWithCursorOverridePropertiesPreviewNotificationsEnabled {
		return v.PreviewNotificationsEnabled
	}).(NotificationOverrideWithCursorOverridePropertiesPreviewNotificationsEnabledOutput)
}

func (o NotificationOverrideWithCursorOverridePropertiesOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOverrideWithCursorOverrideProperties) string { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOwnerNotificationSettingPropertiesOutput{})
	pulumi.RegisterOutputType(GetServiceNotificationOverridePropertiesOutput{})
	pulumi.RegisterOutputType(NotificationOverrideWithCursorOutput{})
	pulumi.RegisterOutputType(NotificationOverrideWithCursorArrayOutput{})
	pulumi.RegisterOutputType(NotificationOverrideWithCursorOverridePropertiesOutput{})
}
