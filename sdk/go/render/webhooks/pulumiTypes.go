// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webhooks

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type WebhookEventWithCursor struct {
	Cursor       string                                       `pulumi:"cursor"`
	WebhookEvent WebhookEventWithCursorWebhookEventProperties `pulumi:"webhookEvent"`
}

type WebhookEventWithCursorOutput struct{ *pulumi.OutputState }

func (WebhookEventWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookEventWithCursor)(nil)).Elem()
}

func (o WebhookEventWithCursorOutput) ToWebhookEventWithCursorOutput() WebhookEventWithCursorOutput {
	return o
}

func (o WebhookEventWithCursorOutput) ToWebhookEventWithCursorOutputWithContext(ctx context.Context) WebhookEventWithCursorOutput {
	return o
}

func (o WebhookEventWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookEventWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o WebhookEventWithCursorOutput) WebhookEvent() WebhookEventWithCursorWebhookEventPropertiesOutput {
	return o.ApplyT(func(v WebhookEventWithCursor) WebhookEventWithCursorWebhookEventProperties { return v.WebhookEvent }).(WebhookEventWithCursorWebhookEventPropertiesOutput)
}

type WebhookEventWithCursorArrayOutput struct{ *pulumi.OutputState }

func (WebhookEventWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookEventWithCursor)(nil)).Elem()
}

func (o WebhookEventWithCursorArrayOutput) ToWebhookEventWithCursorArrayOutput() WebhookEventWithCursorArrayOutput {
	return o
}

func (o WebhookEventWithCursorArrayOutput) ToWebhookEventWithCursorArrayOutputWithContext(ctx context.Context) WebhookEventWithCursorArrayOutput {
	return o
}

func (o WebhookEventWithCursorArrayOutput) Index(i pulumi.IntInput) WebhookEventWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookEventWithCursor {
		return vs[0].([]WebhookEventWithCursor)[vs[1].(int)]
	}).(WebhookEventWithCursorOutput)
}

type WebhookEventWithCursorWebhookEventProperties struct {
	// error is populated when an error occurs without a response such as a timeout
	Error *string `pulumi:"error"`
	// the id of the event that triggered the webhook
	EventId   string                                                `pulumi:"eventId"`
	EventType WebhookEventWithCursorWebhookEventPropertiesEventType `pulumi:"eventType"`
	// the id of the webhook event
	Id           string  `pulumi:"id"`
	ResponseBody *string `pulumi:"responseBody"`
	SentAt       string  `pulumi:"sentAt"`
	StatusCode   *int    `pulumi:"statusCode"`
}

type WebhookEventWithCursorWebhookEventPropertiesOutput struct{ *pulumi.OutputState }

func (WebhookEventWithCursorWebhookEventPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookEventWithCursorWebhookEventProperties)(nil)).Elem()
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) ToWebhookEventWithCursorWebhookEventPropertiesOutput() WebhookEventWithCursorWebhookEventPropertiesOutput {
	return o
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) ToWebhookEventWithCursorWebhookEventPropertiesOutputWithContext(ctx context.Context) WebhookEventWithCursorWebhookEventPropertiesOutput {
	return o
}

// error is populated when an error occurs without a response such as a timeout
func (o WebhookEventWithCursorWebhookEventPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// the id of the event that triggered the webhook
func (o WebhookEventWithCursorWebhookEventPropertiesOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) string { return v.EventId }).(pulumi.StringOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) EventType() WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) WebhookEventWithCursorWebhookEventPropertiesEventType {
		return v.EventType
	}).(WebhookEventWithCursorWebhookEventPropertiesEventTypeOutput)
}

// the id of the webhook event
func (o WebhookEventWithCursorWebhookEventPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) string { return v.Id }).(pulumi.StringOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) ResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) *string { return v.ResponseBody }).(pulumi.StringPtrOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) SentAt() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) string { return v.SentAt }).(pulumi.StringOutput)
}

func (o WebhookEventWithCursorWebhookEventPropertiesOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebhookEventWithCursorWebhookEventProperties) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type WebhookWithCursor struct {
	Cursor  string                             `pulumi:"cursor"`
	Webhook WebhookWithCursorWebhookProperties `pulumi:"webhook"`
}

type WebhookWithCursorOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursor)(nil)).Elem()
}

func (o WebhookWithCursorOutput) ToWebhookWithCursorOutput() WebhookWithCursorOutput {
	return o
}

func (o WebhookWithCursorOutput) ToWebhookWithCursorOutputWithContext(ctx context.Context) WebhookWithCursorOutput {
	return o
}

func (o WebhookWithCursorOutput) Cursor() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursor) string { return v.Cursor }).(pulumi.StringOutput)
}

func (o WebhookWithCursorOutput) Webhook() WebhookWithCursorWebhookPropertiesOutput {
	return o.ApplyT(func(v WebhookWithCursor) WebhookWithCursorWebhookProperties { return v.Webhook }).(WebhookWithCursorWebhookPropertiesOutput)
}

type WebhookWithCursorArrayOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookWithCursor)(nil)).Elem()
}

func (o WebhookWithCursorArrayOutput) ToWebhookWithCursorArrayOutput() WebhookWithCursorArrayOutput {
	return o
}

func (o WebhookWithCursorArrayOutput) ToWebhookWithCursorArrayOutputWithContext(ctx context.Context) WebhookWithCursorArrayOutput {
	return o
}

func (o WebhookWithCursorArrayOutput) Index(i pulumi.IntInput) WebhookWithCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookWithCursor {
		return vs[0].([]WebhookWithCursor)[vs[1].(int)]
	}).(WebhookWithCursorOutput)
}

type WebhookWithCursorWebhookProperties struct {
	Enabled bool `pulumi:"enabled"`
	// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
	EventFilter []WebhookWithCursorWebhookPropertiesEventFilterItem `pulumi:"eventFilter"`
	Id          string                                              `pulumi:"id"`
	Name        string                                              `pulumi:"name"`
	Secret      string                                              `pulumi:"secret"`
	Url         string                                              `pulumi:"url"`
}

type WebhookWithCursorWebhookPropertiesOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorWebhookPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursorWebhookProperties)(nil)).Elem()
}

func (o WebhookWithCursorWebhookPropertiesOutput) ToWebhookWithCursorWebhookPropertiesOutput() WebhookWithCursorWebhookPropertiesOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesOutput) ToWebhookWithCursorWebhookPropertiesOutputWithContext(ctx context.Context) WebhookWithCursorWebhookPropertiesOutput {
	return o
}

func (o WebhookWithCursorWebhookPropertiesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
func (o WebhookWithCursorWebhookPropertiesOutput) EventFilter() WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) []WebhookWithCursorWebhookPropertiesEventFilterItem {
		return v.EventFilter
	}).(WebhookWithCursorWebhookPropertiesEventFilterItemArrayOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Id }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Secret }).(pulumi.StringOutput)
}

func (o WebhookWithCursorWebhookPropertiesOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorWebhookProperties) string { return v.Url }).(pulumi.StringOutput)
}

type WebhookWithCursorpropertieswebhook struct {
	Enabled bool `pulumi:"enabled"`
	// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
	EventFilter []WebhookWithCursorpropertieswebhookEventFilterItem `pulumi:"eventFilter"`
	Id          string                                              `pulumi:"id"`
	Name        string                                              `pulumi:"name"`
	Secret      string                                              `pulumi:"secret"`
	Url         string                                              `pulumi:"url"`
}

type WebhookWithCursorpropertieswebhookOutput struct{ *pulumi.OutputState }

func (WebhookWithCursorpropertieswebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookWithCursorpropertieswebhook)(nil)).Elem()
}

func (o WebhookWithCursorpropertieswebhookOutput) ToWebhookWithCursorpropertieswebhookOutput() WebhookWithCursorpropertieswebhookOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookOutput) ToWebhookWithCursorpropertieswebhookOutputWithContext(ctx context.Context) WebhookWithCursorpropertieswebhookOutput {
	return o
}

func (o WebhookWithCursorpropertieswebhookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The event types that will trigger the webhook. An empty list means all event types will trigger the webhook.
func (o WebhookWithCursorpropertieswebhookOutput) EventFilter() WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) []WebhookWithCursorpropertieswebhookEventFilterItem {
		return v.EventFilter
	}).(WebhookWithCursorpropertieswebhookEventFilterItemArrayOutput)
}

func (o WebhookWithCursorpropertieswebhookOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) string { return v.Id }).(pulumi.StringOutput)
}

func (o WebhookWithCursorpropertieswebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebhookWithCursorpropertieswebhookOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) string { return v.Secret }).(pulumi.StringOutput)
}

func (o WebhookWithCursorpropertieswebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookWithCursorpropertieswebhook) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WebhookEventWithCursorOutput{})
	pulumi.RegisterOutputType(WebhookEventWithCursorArrayOutput{})
	pulumi.RegisterOutputType(WebhookEventWithCursorWebhookEventPropertiesOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorArrayOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorWebhookPropertiesOutput{})
	pulumi.RegisterOutputType(WebhookWithCursorpropertieswebhookOutput{})
}
