// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package services

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-render/sdk/go/render/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CronJob struct {
	pulumi.CustomResourceState

	AutoDeploy     CronJobAutoDeployOutput          `pulumi:"autoDeploy"`
	Branch         pulumi.StringPtrOutput           `pulumi:"branch"`
	BuildFilter    BuildFilterPtrOutput             `pulumi:"buildFilter"`
	CreatedAt      pulumi.StringOutput              `pulumi:"createdAt"`
	ImagePath      pulumi.StringPtrOutput           `pulumi:"imagePath"`
	Name           pulumi.StringOutput              `pulumi:"name"`
	NotifyOnFail   CronJobNotifyOnFailOutput        `pulumi:"notifyOnFail"`
	OwnerId        pulumi.StringOutput              `pulumi:"ownerId"`
	Repo           pulumi.StringPtrOutput           `pulumi:"repo"`
	RootDir        pulumi.StringOutput              `pulumi:"rootDir"`
	ServiceDetails pulumi.AnyOutput                 `pulumi:"serviceDetails"`
	Slug           pulumi.StringOutput              `pulumi:"slug"`
	Suspended      CronJobSuspendedOutput           `pulumi:"suspended"`
	Suspenders     CronJobSuspendersItemArrayOutput `pulumi:"suspenders"`
	Type           pulumi.StringOutput              `pulumi:"type"`
	UpdatedAt      pulumi.StringOutput              `pulumi:"updatedAt"`
}

// NewCronJob registers a new resource with the given unique name, arguments, and options.
func NewCronJob(ctx *pulumi.Context,
	name string, args *CronJobArgs, opts ...pulumi.ResourceOption) (*CronJob, error) {
	if args == nil {
		args = &CronJobArgs{}
	}

	if args.Type == nil {
		args.Type = pulumi.StringPtr("cron_job")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CronJob
	err := ctx.RegisterResource("render:services:CronJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCronJob gets an existing CronJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCronJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CronJobState, opts ...pulumi.ResourceOption) (*CronJob, error) {
	var resource CronJob
	err := ctx.ReadResource("render:services:CronJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CronJob resources.
type cronJobState struct {
}

type CronJobState struct {
}

func (CronJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*cronJobState)(nil)).Elem()
}

type cronJobArgs struct {
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a CronJob resource.
type CronJobArgs struct {
	Type pulumi.StringPtrInput
}

func (CronJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cronJobArgs)(nil)).Elem()
}

type CronJobInput interface {
	pulumi.Input

	ToCronJobOutput() CronJobOutput
	ToCronJobOutputWithContext(ctx context.Context) CronJobOutput
}

func (*CronJob) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJob)(nil)).Elem()
}

func (i *CronJob) ToCronJobOutput() CronJobOutput {
	return i.ToCronJobOutputWithContext(context.Background())
}

func (i *CronJob) ToCronJobOutputWithContext(ctx context.Context) CronJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CronJobOutput)
}

type CronJobOutput struct{ *pulumi.OutputState }

func (CronJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CronJob)(nil)).Elem()
}

func (o CronJobOutput) ToCronJobOutput() CronJobOutput {
	return o
}

func (o CronJobOutput) ToCronJobOutputWithContext(ctx context.Context) CronJobOutput {
	return o
}

func (o CronJobOutput) AutoDeploy() CronJobAutoDeployOutput {
	return o.ApplyT(func(v *CronJob) CronJobAutoDeployOutput { return v.AutoDeploy }).(CronJobAutoDeployOutput)
}

func (o CronJobOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringPtrOutput { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) BuildFilter() BuildFilterPtrOutput {
	return o.ApplyT(func(v *CronJob) BuildFilterPtrOutput { return v.BuildFilter }).(BuildFilterPtrOutput)
}

func (o CronJobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o CronJobOutput) ImagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringPtrOutput { return v.ImagePath }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CronJobOutput) NotifyOnFail() CronJobNotifyOnFailOutput {
	return o.ApplyT(func(v *CronJob) CronJobNotifyOnFailOutput { return v.NotifyOnFail }).(CronJobNotifyOnFailOutput)
}

func (o CronJobOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o CronJobOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringPtrOutput { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o CronJobOutput) RootDir() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.RootDir }).(pulumi.StringOutput)
}

func (o CronJobOutput) ServiceDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *CronJob) pulumi.AnyOutput { return v.ServiceDetails }).(pulumi.AnyOutput)
}

func (o CronJobOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o CronJobOutput) Suspended() CronJobSuspendedOutput {
	return o.ApplyT(func(v *CronJob) CronJobSuspendedOutput { return v.Suspended }).(CronJobSuspendedOutput)
}

func (o CronJobOutput) Suspenders() CronJobSuspendersItemArrayOutput {
	return o.ApplyT(func(v *CronJob) CronJobSuspendersItemArrayOutput { return v.Suspenders }).(CronJobSuspendersItemArrayOutput)
}

func (o CronJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o CronJobOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CronJob) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CronJobInput)(nil)).Elem(), &CronJob{})
	pulumi.RegisterOutputType(CronJobOutput{})
}
