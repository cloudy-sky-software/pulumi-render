// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getOwner(args: GetOwnerArgs, opts?: pulumi.InvokeOptions): Promise<outputs.owners.Owner> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:owners:getOwner", {
        "ownerId": args.ownerId,
    }, opts);
}

export interface GetOwnerArgs {
    /**
     * The ID of the user or team
     */
    ownerId: string;
}
export function getOwnerOutput(args: GetOwnerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.owners.Owner> {
    return pulumi.output(args).apply((a: any) => getOwner(a, opts))
}

export interface GetOwnerOutputArgs {
    /**
     * The ID of the user or team
     */
    ownerId: pulumi.Input<string>;
}
